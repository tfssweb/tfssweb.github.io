<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mybatis常用配置</title>
      <link href="/2019/09/01/Mybatis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/09/01/Mybatis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>mybatis常用配置</p><a id="more"></a><h5 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">依赖</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;pagehelper-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">application.yml配置</span><br><span class="line"></span><br><span class="line">pagehelper:</span><br><span class="line">  helper-dialect: mysql</span><br><span class="line">  reasonable: true</span><br><span class="line">  support-methods-arguments: true</span><br><span class="line">  params: count=countsql</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java操作</span><br><span class="line"></span><br><span class="line">PageHelper.startPage(pageNum,pageSize);</span><br><span class="line">List list = service.getList();</span><br><span class="line">PageInfo&lt;SecuritySyslog&gt; pageInfo = new PageInfo&lt;&gt;(list);</span><br></pre></td></tr></table></figure><h5 id="打印sql、mysql字段下划线转驼峰"><a href="#打印sql、mysql字段下划线转驼峰" class="headerlink" title="打印sql、mysql字段下划线转驼峰"></a>打印sql、mysql字段下划线转驼峰</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper/**/*.xml</span><br><span class="line">  type-aliases-package: com.tfss.model.*</span><br><span class="line">  configuration:</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line">    map-underscore-to-camel-case: true</span><br></pre></td></tr></table></figure><h5 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  jackson:</span><br><span class="line">    time-zone: Asia/Shanghai</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br></pre></td></tr></table></figure><h5 id="数据库访问类"><a href="#数据库访问类" class="headerlink" title="数据库访问类"></a>数据库访问类</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package com.tfss.common;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Created by tfss</span><br><span class="line"> * @Blog https://tfssweb.github.io/</span><br><span class="line"> * @公众号 颓废书生</span><br><span class="line"> * @Description 全局枚举类</span><br><span class="line"> */</span><br><span class="line">public interface CommonConstants &#123;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 编码</span><br><span class="line"> */</span><br><span class="line">String UTF8 = &quot;UTF-8&quot;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 成功标记</span><br><span class="line"> */</span><br><span class="line">Integer SUCCESS = 0;</span><br><span class="line">/**</span><br><span class="line"> * 失败标记</span><br><span class="line"> */</span><br><span class="line">Integer FAIL = 1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package com.tfss.common;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.BeansException;</span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.springframework.context.ApplicationContextAware;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Created by tfss</span><br><span class="line"> * @Blog https://tfssweb.github.io/</span><br><span class="line"> * @公众号 颓废书生</span><br><span class="line"> * @Description 数据访问工具类</span><br><span class="line"> */</span><br><span class="line">@Service</span><br><span class="line">public class DataAccessManager implements ApplicationContextAware &#123;</span><br><span class="line">    private static ApplicationContext appContext;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void setApplicationContext(ApplicationContext context)</span><br><span class="line">            throws BeansException &#123;</span><br><span class="line">        appContext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static &lt;T&gt; T getMapper(Class&lt;T&gt; clazz) &#123;</span><br><span class="line">        return (T) appContext.getBean(clazz);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">package com.tfss.common;</span><br><span class="line"></span><br><span class="line">import lombok.*;</span><br><span class="line">import lombok.experimental.Accessors;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @Author Created by tfss</span><br><span class="line"> * @Blog https://tfssweb.github.io/</span><br><span class="line"> * @公众号 颓废书生</span><br><span class="line"> * @Description 响应信息主体</span><br><span class="line"> */</span><br><span class="line">@Builder</span><br><span class="line">@ToString</span><br><span class="line">@Accessors(chain = true)</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">public class R&lt;T&gt; implements Serializable &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">@Getter</span><br><span class="line">@Setter</span><br><span class="line">private int code = CommonConstants.SUCCESS;</span><br><span class="line"></span><br><span class="line">@Getter</span><br><span class="line">@Setter</span><br><span class="line">private String msg = &quot;success&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Getter</span><br><span class="line">@Setter</span><br><span class="line">private T data;</span><br><span class="line"></span><br><span class="line">public R() &#123;</span><br><span class="line">super();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public R(T data) &#123;</span><br><span class="line">super();</span><br><span class="line">this.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public R(T data, String msg) &#123;</span><br><span class="line">super();</span><br><span class="line">this.data = data;</span><br><span class="line">this.msg = msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public R(Throwable e) &#123;</span><br><span class="line">super();</span><br><span class="line">this.msg = e.getMessage();</span><br><span class="line">this.code = CommonConstants.FAIL;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
            <tag> pagehelper </tag>
            
            <tag> 分页 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring GateWay集成Swagger2</title>
      <link href="/2019/07/16/Spring%20GateWay%E9%9B%86%E6%88%90Swagger2/"/>
      <url>/2019/07/16/Spring%20GateWay%E9%9B%86%E6%88%90Swagger2/</url>
      
        <content type="html"><![CDATA[<p>在GateWay项目下，创建config包，将下面两个类添加进去即可；</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;swagger.version&gt;2.9.2&lt;/swagger.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- swagger --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;$&#123;swagger.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;$&#123;swagger.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">SwaggerHandler.java</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line">import reactor.core.publisher.Mono;</span><br><span class="line">import springfox.documentation.swagger.web.*;</span><br><span class="line">import java.util.Optional;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/swagger-resources&quot;)</span><br><span class="line">public class SwaggerHandler &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired(required = false)</span><br><span class="line">    private SecurityConfiguration securityConfiguration;</span><br><span class="line"></span><br><span class="line">    @Autowired(required = false)</span><br><span class="line">    private UiConfiguration uiConfiguration;</span><br><span class="line"></span><br><span class="line">    private final SwaggerResourcesProvider swaggerResources;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    public SwaggerHandler(SwaggerResourcesProvider swaggerResources) &#123;</span><br><span class="line">        this.swaggerResources = swaggerResources;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/configuration/security&quot;)</span><br><span class="line">    public Mono&lt;ResponseEntity&lt;SecurityConfiguration&gt;&gt; securityConfiguration() &#123;</span><br><span class="line">        return Mono.just(new ResponseEntity&lt;&gt;(</span><br><span class="line">                Optional.ofNullable(securityConfiguration).orElse(SecurityConfigurationBuilder.builder().build()), HttpStatus.OK));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/configuration/ui&quot;)</span><br><span class="line">    public Mono&lt;ResponseEntity&lt;UiConfiguration&gt;&gt; uiConfiguration() &#123;</span><br><span class="line">        return Mono.just(new ResponseEntity&lt;&gt;(</span><br><span class="line">                Optional.ofNullable(uiConfiguration).orElse(UiConfigurationBuilder.builder().build()), HttpStatus.OK));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;&quot;)</span><br><span class="line">    public Mono&lt;ResponseEntity&gt; swaggerResources() &#123;</span><br><span class="line">        return Mono.just((new ResponseEntity&lt;&gt;(swaggerResources.get(), HttpStatus.OK)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">SwaggerProvider.java</span><br><span class="line"></span><br><span class="line">import org.springframework.cloud.gateway.discovery.DiscoveryClientRouteDefinitionLocator;</span><br><span class="line">import org.springframework.context.annotation.Primary;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import springfox.documentation.swagger.web.SwaggerResource;</span><br><span class="line">import springfox.documentation.swagger.web.SwaggerResourcesProvider;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">@Primary</span><br><span class="line">public class SwaggerProvider implements SwaggerResourcesProvider &#123;</span><br><span class="line"></span><br><span class="line">    public static final String API_URI = &quot;/v2/api-docs&quot;;</span><br><span class="line">    public static final String EUREKA_SUB_PRIX = &quot;CompositeDiscoveryClient_&quot;;</span><br><span class="line">    private final DiscoveryClientRouteDefinitionLocator routeLocator;</span><br><span class="line"></span><br><span class="line">    public SwaggerProvider(DiscoveryClientRouteDefinitionLocator routeLocator) &#123;</span><br><span class="line">        this.routeLocator = routeLocator;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;SwaggerResource&gt; get() &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;SwaggerResource&gt; resources = new ArrayList&lt;&gt;();</span><br><span class="line">        // List&lt;String&gt; routes = new ArrayList&lt;&gt;();</span><br><span class="line">        //从DiscoveryClientRouteDefinitionLocator 中取出routes，构造成swaggerResource</span><br><span class="line">        routeLocator.getRouteDefinitions().subscribe(routeDefinition -&gt; &#123;</span><br><span class="line">            resources.add(swaggerResource(routeDefinition.getId().substring(EUREKA_SUB_PRIX.length()),routeDefinition.getPredicates().get(0).getArgs().get(&quot;pattern&quot;).replace(&quot;/**&quot;, API_URI)));</span><br><span class="line">        &#125;);</span><br><span class="line">        return resources;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private SwaggerResource swaggerResource(String name, String location) &#123;</span><br><span class="line">        SwaggerResource swaggerResource = new SwaggerResource();</span><br><span class="line">        swaggerResource.setName(name);</span><br><span class="line">        swaggerResource.setLocation(location);</span><br><span class="line">        swaggerResource.setSwaggerVersion(&quot;2.0&quot;);</span><br><span class="line">        return swaggerResource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud集成ELK</title>
      <link href="/2019/07/15/Spring%20Cloud%E9%9B%86%E6%88%90ELK(Elasticsearch,Logstash,Kibana)/"/>
      <url>/2019/07/15/Spring%20Cloud%E9%9B%86%E6%88%90ELK(Elasticsearch,Logstash,Kibana)/</url>
      
        <content type="html"><![CDATA[<p><img src="../../../../images/java/elk0.png" alt="avatar"></p><a id="more"></a><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- logback --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;net.logstash.logback&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;logstash-logback-encoder&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;5.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LOGSTASH_HOST: xxx.xxx.xxx.xxx</span><br><span class="line">LOGSTASH_PORT: xxxx</span><br></pre></td></tr></table></figure><h4 id="添加配置文件logback-spring-xml"><a href="#添加配置文件logback-spring-xml" class="headerlink" title="添加配置文件logback-spring.xml"></a>添加配置文件logback-spring.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">        &lt;!--该日志将日志级别不同的log信息保存到不同的文件中 --&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;include resource=&quot;org/springframework/boot/logging/logback/defaults.xml&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--引入在application.properties文件中的变量--&gt;</span><br><span class="line">&lt;property resource=&quot;application.yml&quot;&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;springProperty scope=&quot;context&quot; name=&quot;springAppName&quot;</span><br><span class="line">                source=&quot;spring.application.name&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 日志在工程中的输出位置 --&gt;</span><br><span class="line">&lt;property name=&quot;LOG_FILE&quot; value=&quot;$&#123;BUILD_FOLDER:-build&#125;/$&#123;springAppName&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 控制台的日志输出样式 --&gt;</span><br><span class="line">&lt;property name=&quot;CONSOLE_LOG_PATTERN&quot;</span><br><span class="line">          value=&quot;%clr(%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125;)&#123;faint&#125; %clr($&#123;LOG_LEVEL_PATTERN:-%5p&#125;) %clr($&#123;PID:- &#125;)&#123;magenta&#125; %clr(---)&#123;faint&#125; %clr([%15.15t])&#123;faint&#125; %m%n$&#123;LOG_EXCEPTION_CONVERSION_WORD:-%wEx&#125;&#125;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 控制台输出 --&gt;</span><br><span class="line">&lt;appender name=&quot;console&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</span><br><span class="line">    &lt;filter class=&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;</span><br><span class="line">        &lt;level&gt;INFO&lt;/level&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;!-- 日志输出编码 --&gt;</span><br><span class="line">    &lt;encoder&gt;</span><br><span class="line">        &lt;pattern&gt;$&#123;CONSOLE_LOG_PATTERN&#125;&lt;/pattern&gt;</span><br><span class="line">        &lt;charset&gt;utf8&lt;/charset&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">&lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 为logstash输出的JSON格式的Appender --&gt;</span><br><span class="line">&lt;appender name=&quot;logstash&quot;</span><br><span class="line">          class=&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;&gt;</span><br><span class="line">    &lt;destination&gt;$&#123;LOGSTASH_HOST&#125;:$&#123;LOGSTASH_PORT&#125;&lt;/destination&gt;</span><br><span class="line">    &lt;!-- 日志输出编码 --&gt;</span><br><span class="line">    &lt;encoder</span><br><span class="line">            class=&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;&gt;</span><br><span class="line">        &lt;providers&gt;</span><br><span class="line">            &lt;timestamp&gt;</span><br><span class="line">                &lt;timeZone&gt;UTC&lt;/timeZone&gt;</span><br><span class="line">            &lt;/timestamp&gt;</span><br><span class="line">            &lt;pattern&gt;</span><br><span class="line">                &lt;pattern&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                    &quot;severity&quot;: &quot;%level&quot;,</span><br><span class="line">                    &quot;service&quot;: &quot;$&#123;springAppName:-&#125;&quot;,</span><br><span class="line">                    &quot;trace&quot;: &quot;%X&#123;X-B3-TraceId:-&#125;&quot;,</span><br><span class="line">                    &quot;span&quot;: &quot;%X&#123;X-B3-SpanId:-&#125;&quot;,</span><br><span class="line">                    &quot;exportable&quot;: &quot;%X&#123;X-Span-Export:-&#125;&quot;,</span><br><span class="line">                    &quot;pid&quot;: &quot;$&#123;PID:-&#125;&quot;,</span><br><span class="line">                    &quot;thread&quot;: &quot;%thread&quot;,</span><br><span class="line">                    &quot;class&quot;: &quot;%logger&#123;40&#125;&quot;,</span><br><span class="line">                    &quot;rest&quot;: &quot;%message&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &lt;/pattern&gt;</span><br><span class="line">            &lt;/pattern&gt;</span><br><span class="line">        &lt;/providers&gt;</span><br><span class="line">    &lt;/encoder&gt;</span><br><span class="line">&lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 日志输出级别 --&gt;</span><br><span class="line">&lt;root level=&quot;INFO&quot;&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;console&quot; /&gt;</span><br><span class="line">    &lt;appender-ref ref=&quot;logstash&quot; /&gt;</span><br><span class="line">&lt;/root&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h4 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h4><p><img src="../../../../images/java/elk1.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> elk </tag>
            
            <tag> elasticsearch </tag>
            
            <tag> logstash </tag>
            
            <tag> kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jasypt 的加密解决方案</title>
      <link href="/2019/07/11/jasypt%20%E7%9A%84%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/07/11/jasypt%20%E7%9A%84%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">package com.tfss.demo;</span><br><span class="line"></span><br><span class="line">import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;</span><br><span class="line"></span><br><span class="line">public class Demo &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 密钥</span><br><span class="line">private static final String KEY = &quot;tfss&quot;;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">String ciphertext1 = encrypt(&quot;tfss&quot;); // Wu11fsC0gpgSET5aU8GXUA==</span><br><span class="line">String ciphertext2 = decrypt(&quot;zua3lqWfpB7QWndHkOqTWQ==&quot;); // ESXlHsVk2YM7mGcHy2ccGg==</span><br><span class="line">System.out.println(ciphertext1);</span><br><span class="line">System.out.println(ciphertext2);</span><br><span class="line"></span><br><span class="line">//String text1 = decrypt(&quot;i3cDFhs26sa2Ucrfz2hnQw==&quot;);</span><br><span class="line">//String text2 = decrypt(ciphertext2);</span><br><span class="line">//System.out.println(text1);               // abcdefg</span><br><span class="line">//System.out.println(text2);               // abcdefg</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 加密</span><br><span class="line"> * @param text 明文</span><br><span class="line"> * @return     密文</span><br><span class="line"> */</span><br><span class="line">public static String encrypt(String text) &#123;</span><br><span class="line">StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();</span><br><span class="line">encryptor.setPassword(KEY);</span><br><span class="line">return encryptor.encrypt(text);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 解密</span><br><span class="line"> * @param ciphertext 密文</span><br><span class="line"> * @return           明文</span><br><span class="line"> */</span><br><span class="line">public static String decrypt(String ciphertext) &#123;</span><br><span class="line">StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();</span><br><span class="line">encryptor.setPassword(KEY);</span><br><span class="line">return encryptor.decrypt(ciphertext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jasypt:</span><br><span class="line">  encryptor:</span><br><span class="line">    password: tfss #根密码</span><br></pre></td></tr></table></figure><p>配置文件中使用密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    password: ENC(密文)</span><br><span class="line"></span><br><span class="line">xxx: ENC(密文)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
            <tag> 加密，jasypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hutool常用API</title>
      <link href="/2019/07/09/Hutool%E5%B8%B8%E7%94%A8API/"/>
      <url>/2019/07/09/Hutool%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<p>Hutool常用API</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;hutool.version&gt;4.5.17&lt;/hutool.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--hutool--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;$&#123;hutool.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h5 id="日期操作"><a href="#日期操作" class="headerlink" title="日期操作"></a>日期操作</h5><h6 id="字符串转日期"><a href="#字符串转日期" class="headerlink" title="字符串转日期"></a>字符串转日期</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String dateStr = &quot;2017-03-01 22:33:23&quot;;</span><br><span class="line">Date date = DateUtil.parse(dateStr);</span><br></pre></td></tr></table></figure><h6 id="获取当天的起始与结束时间"><a href="#获取当天的起始与结束时间" class="headerlink" title="获取当天的起始与结束时间"></a>获取当天的起始与结束时间</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//一天的开始，结果：2017-03-01 00:00:00</span><br><span class="line">Date beginOfDay = DateUtil.beginOfDay(date);</span><br><span class="line"></span><br><span class="line">//一天的结束，结果：2017-03-01 23:59:59</span><br><span class="line">Date endOfDay = DateUtil.endOfDay(date);</span><br></pre></td></tr></table></figure><h6 id="日期时间偏移"><a href="#日期时间偏移" class="headerlink" title="日期时间偏移"></a>日期时间偏移</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">String dateStr = &quot;2017-03-01 22:33:23&quot;;</span><br><span class="line">Date date = DateUtil.parse(dateStr);</span><br><span class="line"></span><br><span class="line">//结果：2017-03-03 22:33:23</span><br><span class="line">Date newDate = DateUtil.offset(date, DateField.DAY_OF_MONTH, 2);</span><br><span class="line"></span><br><span class="line">//常用偏移，结果：2017-03-04 22:33:23</span><br><span class="line">DateTime newDate2 = DateUtil.offsetDay(date, 3);</span><br><span class="line"></span><br><span class="line">//常用偏移，结果：2017-03-01 19:33:23</span><br><span class="line">DateTime newDate3 = DateUtil.offsetHour(date, -3);</span><br><span class="line"></span><br><span class="line">//昨天</span><br><span class="line">DateUtil.yesterday()</span><br><span class="line">//明天</span><br><span class="line">DateUtil.tomorrow()</span><br><span class="line">//上周</span><br><span class="line">DateUtil.lastWeek()</span><br><span class="line">//下周</span><br><span class="line">DateUtil.nextWeek()</span><br><span class="line">//上个月</span><br><span class="line">DateUtil.lastMonth()</span><br><span class="line">//下个月</span><br><span class="line">DateUtil.nextMonth()</span><br></pre></td></tr></table></figure><h6 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//当前时间</span><br><span class="line">Date date = DateUtil.date();</span><br><span class="line">//当前时间</span><br><span class="line">Date date2 = DateUtil.date(Calendar.getInstance());</span><br><span class="line">//当前时间</span><br><span class="line">Date date3 = DateUtil.date(System.currentTimeMillis());</span><br><span class="line">//当前时间字符串，格式：yyyy-MM-dd HH:mm:ss</span><br><span class="line">String now = DateUtil.now();</span><br><span class="line">//当前日期字符串，格式：yyyy-MM-dd</span><br><span class="line">String today= DateUtil.today();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> hutool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud常用配置</title>
      <link href="/2019/06/09/SpringCloud%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/06/09/SpringCloud%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><img src="../../../../images/java/springbootadmin.png" alt="avatar"></p><a id="more"></a><h3 id="Gateway网关"><a href="#Gateway网关" class="headerlink" title="Gateway网关"></a>Gateway网关</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  cloud:</span><br><span class="line">    gateway:</span><br><span class="line">      discovery:</span><br><span class="line">        locator:</span><br><span class="line">          # 表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务</span><br><span class="line">          # 如：http://localhost:8003/cloud-demo/path</span><br><span class="line">          enabled: true</span><br><span class="line">          # 因为服务注册的时候，向注册中心注册时将服务名转成大写的了</span><br><span class="line">          lower-case-service-id: true</span><br><span class="line">      # 自定义路由，配置了一个Path 的predict,将以/demo/**开头的请求都会转发到uri为lb://CLOUD-DEMO的地址上，并用StripPrefix的filter 在转发之前将/demo去掉</span><br><span class="line">      # 同时将spring.cloud.gateway.discovery.locator.enabled改为false，如果不改的话，之前的http://localhost:8003/cloud-demo/path这样的请求地址也能正常访问，因为这时为每个服务创建了2个router</span><br><span class="line">      # 如：http://localhost:8003/demo/path</span><br><span class="line">      routes:</span><br><span class="line">        - id: cloud-demo</span><br><span class="line">          # CLOUD-AUTH为需要路由的微服务名</span><br><span class="line">          uri: lb://CLOUD-DEMO</span><br><span class="line">          predicates:</span><br><span class="line">            - Path=/demo/**</span><br><span class="line">          filters:</span><br><span class="line">            - StripPrefix=1</span><br></pre></td></tr></table></figure><h4 id="客户端配置超时"><a href="#客户端配置超时" class="headerlink" title="客户端配置超时"></a>客户端配置超时</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">feign:</span><br><span class="line">  hystrix:</span><br><span class="line">    enabled: true</span><br><span class="line">##设置hystrix超时时间(毫秒),设置调用者等待命令执行的超时限制，超过此时间，HystrixCommand被标记为TIMEOUT，并执行回退逻辑,默认1s</span><br><span class="line">hystrix:</span><br><span class="line">  command:</span><br><span class="line">    default:</span><br><span class="line">      execution:</span><br><span class="line">        isolation:</span><br><span class="line">          thread:</span><br><span class="line">            timeoutInMilliseconds: 600000</span><br><span class="line"></span><br><span class="line">#请求处理的超时时间</span><br><span class="line">ribbon.ReadTimeout: 120000</span><br><span class="line">#请求连接的超时时间</span><br><span class="line">ribbon.ConnectTimeout: 30000</span><br></pre></td></tr></table></figure><h4 id="spring-monitor-健康检查"><a href="#spring-monitor-健康检查" class="headerlink" title="spring monitor 健康检查"></a>spring monitor 健康检查</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">eureka.instance.health-check-url-path=/actuator/health</span><br><span class="line"></span><br><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;*&quot;</span><br><span class="line">    health:</span><br><span class="line">      sensitive=false: false</span><br><span class="line">  endpoint:</span><br><span class="line">    health:</span><br><span class="line">      show-details: ALWAYS</span><br></pre></td></tr></table></figure><h4 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#表示eureka client发送心跳给server端的频率，默认为30秒</span><br><span class="line">eureka.instance.lease-renewal-interval-in-seconds=10</span><br><span class="line">#表示eureka client间隔多久去拉取服务注册信息，默认为30秒</span><br><span class="line">eureka.client.registry-fetch-interval-seconds=10</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel多个Sheet拆分成多个Excel文件</title>
      <link href="/2019/05/30/Excel%E5%A4%9A%E4%B8%AASheet%E6%8B%86%E5%88%86%E6%88%90%E5%A4%9A%E4%B8%AAExcel/"/>
      <url>/2019/05/30/Excel%E5%A4%9A%E4%B8%AASheet%E6%8B%86%E5%88%86%E6%88%90%E5%A4%9A%E4%B8%AAExcel/</url>
      
        <content type="html"><![CDATA[<p>右键任意一个工作表标签，在弹出的下拉列表中选择“查看代码”，</p><a id="more"></a><p>点击菜单插入-模块 在弹出的模块对话框中 输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Private Sub 分拆工作表()</span><br><span class="line">Dim sht As Worksheet</span><br><span class="line">Dim MyBook As Workbook</span><br><span class="line">Set MyBook = ActiveWorkbook</span><br><span class="line">For Each sht In MyBook.Sheets</span><br><span class="line">sht.Copy</span><br><span class="line">ActiveWorkbook.SaveAs Filename:=MyBook.Path &amp; &quot;\&quot; &amp; sht.Name, FileFormat:=xlNormal &apos;将工作簿另存为EXCEL默认格式</span><br><span class="line">ActiveWorkbook.Close</span><br><span class="line">Next</span><br><span class="line">MsgBox &quot;文件已经被分拆完毕!&quot;</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><p>单击运行-运行子过程|窗体 几秒过后 弹出提示窗口“文件已被拆分完毕”</p>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
            <tag> sheet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决cors跨域问题</title>
      <link href="/2019/05/01/%E8%A7%A3%E5%86%B3cors%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2019/05/01/%E8%A7%A3%E5%86%B3cors%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 解决cors跨域问题</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class CorsConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void addCorsMappings(CorsRegistry registry) &#123;</span><br><span class="line">        registry.addMapping(&quot;/**&quot;)</span><br><span class="line">                .allowedOrigins(&quot;*&quot;)</span><br><span class="line">                .allowCredentials(true)</span><br><span class="line">                .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;DELETE&quot;, &quot;PUT&quot;)</span><br><span class="line">                .maxAge(3600);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python坐标转换</title>
      <link href="/2019/04/14/Python%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/"/>
      <url>/2019/04/14/Python%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>Python坐标转换</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import json</span><br><span class="line">import requests</span><br><span class="line">import math</span><br><span class="line"></span><br><span class="line"># key = &apos;your key here&apos;  # 这里填写你的百度开放平台的key</span><br><span class="line">x_pi = 3.14159265358979324 * 3000.0 / 180.0</span><br><span class="line">pi = 3.1415926535897932384626  # π</span><br><span class="line">a = 6378245.0  # 长半轴</span><br><span class="line">ee = 0.00669342162296594323  # 扁率</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># def geocode(address):</span><br><span class="line">#     &quot;&quot;&quot;</span><br><span class="line">#     利用百度geocoding服务解析地址获取位置坐标</span><br><span class="line">#     :param address:需要解析的地址</span><br><span class="line">#     :return:</span><br><span class="line">#     &quot;&quot;&quot;</span><br><span class="line">#     geocoding = &#123;&apos;s&apos;: &apos;rsv3&apos;,</span><br><span class="line">#                  &apos;key&apos;: key,</span><br><span class="line">#                  &apos;city&apos;: &apos;全国&apos;,</span><br><span class="line">#                  &apos;address&apos;: address&#125;</span><br><span class="line">#     res = requests.get(</span><br><span class="line">#         &quot;http://restapi.amap.com/v3/geocode/geo&quot;, params=geocoding)</span><br><span class="line">#     if res.status_code == 200:</span><br><span class="line">#         json = res.json()</span><br><span class="line">#         status = json.get(&apos;status&apos;)</span><br><span class="line">#         count = json.get(&apos;count&apos;)</span><br><span class="line">#         if status == &apos;1&apos; and int(count) &gt;= 1:</span><br><span class="line">#             geocodes = json.get(&apos;geocodes&apos;)[0]</span><br><span class="line">#             lng = float(geocodes.get(&apos;location&apos;).split(&apos;,&apos;)[0])</span><br><span class="line">#             lat = float(geocodes.get(&apos;location&apos;).split(&apos;,&apos;)[1])</span><br><span class="line">#             return [lng, lat]</span><br><span class="line">#         else:</span><br><span class="line">#             return None</span><br><span class="line">#     else:</span><br><span class="line">#         return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def gcj02tobd09(lng, lat):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    火星坐标系(GCJ-02)转百度坐标系(BD-09)</span><br><span class="line">    谷歌、高德——&gt;百度</span><br><span class="line">    :param lng:火星坐标经度</span><br><span class="line">    :param lat:火星坐标纬度</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    z = math.sqrt(lng * lng + lat * lat) + 0.00002 * math.sin(lat * x_pi)</span><br><span class="line">    theta = math.atan2(lat, lng) + 0.000003 * math.cos(lng * x_pi)</span><br><span class="line">    bd_lng = z * math.cos(theta) + 0.0065</span><br><span class="line">    bd_lat = z * math.sin(theta) + 0.006</span><br><span class="line">    return [bd_lng, bd_lat]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def bd09togcj02(bd_lon, bd_lat):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    百度坐标系(BD-09)转火星坐标系(GCJ-02)</span><br><span class="line">    百度——&gt;谷歌、高德</span><br><span class="line">    :param bd_lat:百度坐标纬度</span><br><span class="line">    :param bd_lon:百度坐标经度</span><br><span class="line">    :return:转换后的坐标列表形式</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    x = bd_lon - 0.0065</span><br><span class="line">    y = bd_lat - 0.006</span><br><span class="line">    z = math.sqrt(x * x + y * y) - 0.00002 * math.sin(y * x_pi)</span><br><span class="line">    theta = math.atan2(y, x) - 0.000003 * math.cos(x * x_pi)</span><br><span class="line">    gg_lng = z * math.cos(theta)</span><br><span class="line">    gg_lat = z * math.sin(theta)</span><br><span class="line">    return [gg_lng, gg_lat]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def wgs84togcj02(lng, lat):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    WGS84转GCJ02(火星坐标系)</span><br><span class="line">    :param lng:WGS84坐标系的经度</span><br><span class="line">    :param lat:WGS84坐标系的纬度</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if out_of_china(lng, lat):  # 判断是否在国内</span><br><span class="line">        return lng, lat</span><br><span class="line">    dlat = transformlat(lng - 105.0, lat - 35.0)</span><br><span class="line">    dlng = transformlng(lng - 105.0, lat - 35.0)</span><br><span class="line">    radlat = lat / 180.0 * pi</span><br><span class="line">    magic = math.sin(radlat)</span><br><span class="line">    magic = 1 - ee * magic * magic</span><br><span class="line">    sqrtmagic = math.sqrt(magic)</span><br><span class="line">    dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * pi)</span><br><span class="line">    dlng = (dlng * 180.0) / (a / sqrtmagic * math.cos(radlat) * pi)</span><br><span class="line">    mglat = lat + dlat</span><br><span class="line">    mglng = lng + dlng</span><br><span class="line">    return [mglng, mglat]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def gcj02towgs84(lng, lat):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    GCJ02(火星坐标系)转GPS84</span><br><span class="line">    :param lng:火星坐标系的经度</span><br><span class="line">    :param lat:火星坐标系纬度</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if out_of_china(lng, lat):</span><br><span class="line">        return lng, lat</span><br><span class="line">    dlat = transformlat(lng - 105.0, lat - 35.0)</span><br><span class="line">    dlng = transformlng(lng - 105.0, lat - 35.0)</span><br><span class="line">    radlat = lat / 180.0 * pi</span><br><span class="line">    magic = math.sin(radlat)</span><br><span class="line">    magic = 1 - ee * magic * magic</span><br><span class="line">    sqrtmagic = math.sqrt(magic)</span><br><span class="line">    dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * pi)</span><br><span class="line">    dlng = (dlng * 180.0) / (a / sqrtmagic * math.cos(radlat) * pi)</span><br><span class="line">    mglat = lat + dlat</span><br><span class="line">    mglng = lng + dlng</span><br><span class="line">    return [lng * 2 - mglng, lat * 2 - mglat]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def transformlat(lng, lat):</span><br><span class="line">    ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + \</span><br><span class="line">          0.1 * lng * lat + 0.2 * math.sqrt(math.fabs(lng))</span><br><span class="line">    ret += (20.0 * math.sin(6.0 * lng * pi) + 20.0 *</span><br><span class="line">            math.sin(2.0 * lng * pi)) * 2.0 / 3.0</span><br><span class="line">    ret += (20.0 * math.sin(lat * pi) + 40.0 *</span><br><span class="line">            math.sin(lat / 3.0 * pi)) * 2.0 / 3.0</span><br><span class="line">    ret += (160.0 * math.sin(lat / 12.0 * pi) + 320 *</span><br><span class="line">            math.sin(lat * pi / 30.0)) * 2.0 / 3.0</span><br><span class="line">    return ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def transformlng(lng, lat):</span><br><span class="line">    ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + \</span><br><span class="line">          0.1 * lng * lat + 0.1 * math.sqrt(math.fabs(lng))</span><br><span class="line">    ret += (20.0 * math.sin(6.0 * lng * pi) + 20.0 *</span><br><span class="line">            math.sin(2.0 * lng * pi)) * 2.0 / 3.0</span><br><span class="line">    ret += (20.0 * math.sin(lng * pi) + 40.0 *</span><br><span class="line">            math.sin(lng / 3.0 * pi)) * 2.0 / 3.0</span><br><span class="line">    ret += (150.0 * math.sin(lng / 12.0 * pi) + 300.0 *</span><br><span class="line">            math.sin(lng / 30.0 * pi)) * 2.0 / 3.0</span><br><span class="line">    return ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def out_of_china(lng, lat):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    判断是否在国内，不在国内不做偏移</span><br><span class="line">    :param lng:</span><br><span class="line">    :param lat:</span><br><span class="line">    :return:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    if lng &lt; 72.004 or lng &gt; 137.8347:</span><br><span class="line">        return True</span><br><span class="line">    if lat &lt; 0.8293 or lat &gt; 55.8271:</span><br><span class="line">        return True</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    lng = 128.543</span><br><span class="line">    lat = 37.065</span><br><span class="line">    result1 = gcj02tobd09(lng, lat)</span><br><span class="line">    result2 = bd09togcj02(lng, lat)</span><br><span class="line">    result3 = wgs84togcj02(lng, lat)</span><br><span class="line">    result4 = gcj02towgs84(lng, lat)</span><br><span class="line">    # result5 = geocode(&apos;北京市朝阳区朝阳公园&apos;)</span><br><span class="line">    print(result1, result2, result3, result4)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 坐标 </tag>
            
            <tag> 经纬度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机返回请求头</title>
      <link href="/2019/03/05/%E9%9A%8F%E6%9C%BA%E8%BF%94%E5%9B%9E%E8%AF%B7%E6%B1%82%E5%A4%B4/"/>
      <url>/2019/03/05/%E9%9A%8F%E6%9C%BA%E8%BF%94%E5%9B%9E%E8%AF%B7%E6%B1%82%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<p>接口类爬虫步骤</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line"># 返回一个随机的请求头 headers</span><br><span class="line">def getHeaders():</span><br><span class="line">    user_agent_list = [ \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/22.0.1207.1 Safari/537.1&quot; \</span><br><span class="line">        &quot;Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1092.0 Safari/536.6&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/19.77.34.5 Safari/537.1&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.9 Safari/536.5&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.0) AppleWebKit/536.5 (KHTML, like Gecko) Chrome/19.0.1084.36 Safari/536.5&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 5.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1063.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1062.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.1 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.3 (KHTML, like Gecko) Chrome/19.0.1061.0 Safari/536.3&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24&quot;, \</span><br><span class="line">        &quot;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/535.24 (KHTML, like Gecko) Chrome/19.0.1055.1 Safari/535.24&quot;</span><br><span class="line">    ]</span><br><span class="line">    UserAgent = random.choice(user_agent_list)</span><br><span class="line">    headers = &#123;&apos;User-Agent&apos;: UserAgent, &apos;Content-Type&apos;: &apos;application/json&apos;&#125;</span><br><span class="line">    return headers</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> headers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口类Python爬虫步骤</title>
      <link href="/2019/03/02/%E6%8E%A5%E5%8F%A3%E7%B1%BB%E7%88%AC%E8%99%AB%E6%AD%A5%E9%AA%A4/"/>
      <url>/2019/03/02/%E6%8E%A5%E5%8F%A3%E7%B1%BB%E7%88%AC%E8%99%AB%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<p>接口类Python爬虫步骤</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line"># 1-创建Session</span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"># 2-获取接口链接</span><br><span class="line">url_login = &quot;http://xxx.xxx.xxx.xxx:xxxx/login&quot;</span><br><span class="line"></span><br><span class="line"># 3-构造参数，转化为json参数</span><br><span class="line">tmp = &#123;&quot;username&quot;: username, &quot;password&quot;: password&#125;</span><br><span class="line">payload = json.dumps(tmp, ensure_ascii=False)</span><br><span class="line"></span><br><span class="line"># 4-获取请求ip（使用代理随机选择proxy）</span><br><span class="line"></span><br><span class="line">proxy = random.choice(proxy_list)</span><br><span class="line">proxies = &#123;</span><br><span class="line">    &apos;http&apos;: &apos;http://&apos; + proxy,</span><br><span class="line">    &apos;https&apos;: &apos;https://&apos; + proxy,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 5-获取请求头（使用代理随机请求头）</span><br><span class="line">headers = utils_http.getHeaders()</span><br><span class="line"></span><br><span class="line"># 6-发送请求</span><br><span class="line">response = session.request(&quot;POST&quot;, url_login, proxies=proxies, timeout=5, data=payload, headers=headers)</span><br><span class="line"></span><br><span class="line"># 7-打印结果，并获取cookie、状态码</span><br><span class="line">print(response.txt)</span><br><span class="line">cookie = session.cookies.get_dict()</span><br><span class="line">status_code = response.status_code</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java8中的流</title>
      <link href="/2019/03/01/Java8%E4%B8%AD%E7%9A%84%E6%B5%81/"/>
      <url>/2019/03/01/Java8%E4%B8%AD%E7%9A%84%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h4 id="什么是流？"><a href="#什么是流？" class="headerlink" title="什么是流？"></a>什么是流？</h4><p>流是Java8引入的全新概念，它用来处理集合中的数据，暂且可以把它理解为一种高级集合。 众所周知，集合操作非常麻烦，若要对集合进行筛选、投影，需要写大量的代码，而流是以声明的形式操作集合，它就像SQL语句，我们只需告诉流需要对集合进行什么操作，它就会自动进行操作，并将执行结果交给你，无需我们自己手写代码。 因此，流的集合操作对我们来说是透明的，我们只需向流下达命令，它就会自动把我们想要的结果给我们。由于操作过程完全由Java处理，因此它可以根据当前硬件环境选择最优的方法处理，我们也无需编写复杂又容易出错的多线程代码了。</p><a id="more"></a><h4 id="流的特点"><a href="#流的特点" class="headerlink" title="流的特点"></a>流的特点</h4><p>1.只能遍历一次 我们可以把流想象成一条流水线，流水线的源头是我们的数据源(一个集合)，数据源中的元素依次被输送到流水线上，我们可以在流水线上对元素进行各种操作。 一旦元素走到了流水线的另一头，那么这些元素就被“消费掉了”，我们无法再对这个流进行操作。当然，我们可以从数据源那里再获得一个新的流重新遍历一遍。<br>2.采用内部迭代方式 若要对集合进行处理，则需我们手写处理代码，这就叫做外部迭代。 而要对流进行处理，我们只需告诉流我们需要什么结果，处理过程由流自行完成，这就称为内部迭代。</p><h4 id="流的操作种类"><a href="#流的操作种类" class="headerlink" title="流的操作种类"></a>流的操作种类</h4><p>流的操作分为两种，分别为中间操作和终端操作。</p><p>1.中间操作 当数据源中的数据上了流水线后，这个过程对数据进行的所有操作都称为“中间操作”。 中间操作仍然会返回一个流对象，因此多个中间操作可以串连起来形成一个流水线。<br>2.终端操作 当所有的中间操作完成后，若要将数据从流水线上拿下来，则需要执行终端操作。 终端操作将返回一个执行结果，这就是你想要的数据。</p><h4 id="流的操作过程"><a href="#流的操作过程" class="headerlink" title="流的操作过程"></a>流的操作过程</h4><p>使用流一共需要三步：</p><p>准备一个数据源<br>1.执行中间操作 中间操作可以有多个，它们可以串连起来形成流水线。<br>2.执行终端操作 执行终端操作后本次流结束，你将获得一个执行结果。</p><h4 id="使用流"><a href="#使用流" class="headerlink" title="使用流"></a>使用流</h4><h5 id="创建流"><a href="#创建流" class="headerlink" title="创建流"></a>创建流</h5><p>在使用流之前，首先需要拥有一个数据源，并通过StreamAPI提供的一些方法获取该数据源的流对象。数据源可以有多种形式：</p><ol><li>集合</li></ol><p>这种数据源较为常用，通过stream()方法即可获取流对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; list = new ArrayList&lt;Person&gt;();</span><br><span class="line">Stream&lt;Person&gt; stream = list.stream();</span><br></pre></td></tr></table></figure><ol start="2"><li>数组</li></ol><p>通过Arrays类提供的静态函数stream()获取数组的流对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String[] names = &#123;&quot;chaimm&quot;,&quot;peter&quot;,&quot;john&quot;&#125;;</span><br><span class="line">Stream&lt;String&gt; stream = Arrays.stream(names);</span><br></pre></td></tr></table></figure><ol start="3"><li>值</li></ol><p>直接将几个值变成流对象：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Stream&lt;String&gt; stream = Stream.of(&quot;chaimm&quot;,&quot;peter&quot;,&quot;john&quot;);</span><br></pre></td></tr></table></figure><ol start="4"><li><p>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">try(Stream lines = Files.lines(Paths.get(“文件路径名”),Charset.defaultCharset()))&#123;</span><br><span class="line">    //可对lines做一些操作</span><br><span class="line">&#125;catch(IOException e)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>iterator</p></li></ol><p>创建无限流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stream.iterate(0, n -&gt; n + 2)</span><br><span class="line">      .limit(10)</span><br><span class="line">      .forEach(System.out::println);</span><br></pre></td></tr></table></figure><blockquote><p>PS：Java7简化了IO操作，把打开IO操作放在try后的括号中即可省略关闭IO的代码。</p></blockquote><h4 id="筛选-filter"><a href="#筛选-filter" class="headerlink" title="筛选 filter"></a>筛选 filter</h4><p>filter 函数接收一个Lambda表达式作为参数，该表达式返回boolean，在执行过程中，流将元素逐一输送给filter，并筛选出执行结果为true的元素。 如，筛选出所有学生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; result = list.stream()</span><br><span class="line">                    .filter(Person::isStudent)</span><br><span class="line">                    .collect(toList());</span><br></pre></td></tr></table></figure><h4 id="去重distinct"><a href="#去重distinct" class="headerlink" title="去重distinct"></a>去重distinct</h4><p>去掉重复的结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; result = list.stream()</span><br><span class="line">                    .distinct()</span><br><span class="line">                    .collect(toList());</span><br></pre></td></tr></table></figure><h4 id="截取"><a href="#截取" class="headerlink" title="截取"></a>截取</h4><p>截取流的前N个元素：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; result = list.stream()</span><br><span class="line">                    .limit(3)</span><br><span class="line">                    .collect(toList());</span><br></pre></td></tr></table></figure><h4 id="跳过"><a href="#跳过" class="headerlink" title="跳过"></a>跳过</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; result = list.stream()</span><br><span class="line">                    .skip(3)</span><br><span class="line">                    .collect(toList());</span><br><span class="line">`</span><br></pre></td></tr></table></figure><h4 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h4><p>对流中的每个元素执行一个函数，使得元素转换成另一种类型输出。流会将每一个元素输送给map函数，并执行map中的Lambda表达式，最后将执行结果存入一个新的流中。 如，获取每个人的姓名(实则是将Perosn类型转换成String类型)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Person&gt; result = list.stream()</span><br><span class="line">                    .map(Person::getName)</span><br><span class="line">                    .collect(toList());</span><br></pre></td></tr></table></figure><h4 id="合并多个流"><a href="#合并多个流" class="headerlink" title="合并多个流"></a>合并多个流</h4><p>例：列出List中各不相同的单词，List集合如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</span><br><span class="line">list.add(&quot;I am a boy&quot;);</span><br><span class="line">list.add(&quot;I love the girl&quot;);</span><br><span class="line">list.add(&quot;But the girl loves another girl&quot;);</span><br></pre></td></tr></table></figure><p>思路如下：</p><p>首先将list变成流：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.stream();</span><br></pre></td></tr></table></figure><p>按空格分词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.stream()</span><br><span class="line">            .map(line-&gt;line.split(&quot; &quot;));</span><br></pre></td></tr></table></figure><p>分完词之后，每个元素变成了一个String[]数组。</p><p>将每个 String[] 变成流：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.stream()</span><br><span class="line">            .map(line-&gt;line.split(&quot; &quot;))</span><br><span class="line">            .map(Arrays::stream)</span><br></pre></td></tr></table></figure><p>此时一个大流里面包含了一个个小流，我们需要将这些小流合并成一个流。</p><p>将小流合并成一个大流：用 flatMap 替换刚才的 map</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.stream()</span><br><span class="line">    .map(line-&gt;line.split(&quot; &quot;))</span><br><span class="line">    .flatMap(Arrays::stream)</span><br></pre></td></tr></table></figure><p>去重</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list.stream()</span><br><span class="line">    .map(line-&gt;line.split(&quot; &quot;))</span><br><span class="line">    .flatMap(Arrays::stream)</span><br><span class="line">    .distinct()</span><br><span class="line">    .collect(toList());</span><br></pre></td></tr></table></figure><h4 id="是否匹配任一元素：anyMatch"><a href="#是否匹配任一元素：anyMatch" class="headerlink" title="是否匹配任一元素：anyMatch"></a>是否匹配任一元素：anyMatch</h4><p>anyMatch用于判断流中是否存在至少一个元素满足指定的条件，这个判断条件通过Lambda表达式传递给anyMatch，执行结果为boolean类型。 如，判断list中是否有学生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boolean result = list.stream()</span><br><span class="line">            .anyMatch(Person::isStudent);</span><br></pre></td></tr></table></figure><h4 id="是否匹配所有元素：allMatch"><a href="#是否匹配所有元素：allMatch" class="headerlink" title="是否匹配所有元素：allMatch"></a>是否匹配所有元素：allMatch</h4><p>allMatch用于判断流中的所有元素是否都满足指定条件，这个判断条件通过Lambda表达式传递给anyMatch，执行结果为boolean类型。 如，判断是否所有人都是学生：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boolean result = list.stream()</span><br><span class="line">            .allMatch(Person::isStudent);</span><br></pre></td></tr></table></figure><h4 id="是否未匹配所有元素：noneMatch"><a href="#是否未匹配所有元素：noneMatch" class="headerlink" title="是否未匹配所有元素：noneMatch"></a>是否未匹配所有元素：noneMatch</h4><p>noneMatch与allMatch恰恰相反，它用于判断流中的所有元素是否都不满足指定条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boolean result = list.stream()</span><br><span class="line">            .noneMatch(Person::isStudent);</span><br></pre></td></tr></table></figure><h4 id="获取任一元素findAny"><a href="#获取任一元素findAny" class="headerlink" title="获取任一元素findAny"></a>获取任一元素findAny</h4><p>findAny能够从流中随便选一个元素出来，它返回一个Optional类型的元素。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Person&gt; person = list.stream().findAny();</span><br></pre></td></tr></table></figure><h4 id="获取第一个元素findFirst"><a href="#获取第一个元素findFirst" class="headerlink" title="获取第一个元素findFirst"></a>获取第一个元素findFirst</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional&lt;Person&gt; person = list.stream().findFirst();</span><br></pre></td></tr></table></figure><h4 id="归约"><a href="#归约" class="headerlink" title="归约"></a>归约</h4><p>归约是将集合中的所有元素经过指定运算，折叠成一个元素输出，如：求最值、平均数等，这些操作都是将一个集合的元素折叠成一个元素输出。</p><p>在流中，reduce函数能实现归约。 reduce函数接收两个参数：</p><p>1.初始值<br>2.进行归约操作的Lambda表达式<br>元素求和：自定义Lambda表达式实现求和</p><p>例：计算所有人的年龄总和</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int age = list.stream().reduce(0, (person1,person2)-&gt;person1.getAge()+person2.getAge());</span><br></pre></td></tr></table></figure><p>1.reduce的第一个参数表示初试值为0；<br>2.reduce的第二个参数为需要进行的归约操作，它接收一个拥有两个参数的Lambda表达式，reduce会把流中的元素两两输给Lambda表达式，最后将计算出累加之和。<br>元素求和：使用Integer.sum函数求和</p><p>上面的方法中我们自己定义了Lambda表达式实现求和运算，如果当前流的元素为数值类型，那么可以使用Integer提供了sum函数代替自定义的Lambda表达式，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int age = list.stream().reduce(0, Integer::sum);</span><br></pre></td></tr></table></figure><p>Integer类还提供了 min、max 等一系列数值操作，当流中元素为数值类型时可以直接使用。</p><h4 id="数值流的使用"><a href="#数值流的使用" class="headerlink" title="数值流的使用"></a>数值流的使用</h4><p>采用reduce进行数值操作会涉及到基本数值类型和引用数值类型之间的装箱、拆箱操作，因此效率较低。 当流操作为纯数值操作时，使用数值流能获得较高的效率。</p><p>将普通流转换成数值流</p><p>StreamAPI提供了三种数值流：IntStream、DoubleStream、LongStream，也提供了将普通流转换成数值流的三种方法：mapToInt、mapToDouble、mapToLong。 如，将Person中的age转换成数值流：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IntStream stream = list.stream().mapToInt(Person::getAge);</span><br></pre></td></tr></table></figure><p>数值计算</p><p>每种数值流都提供了数值计算函数，如max、min、sum等。如，找出最大的年龄：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OptionalInt maxAge = list.stream()</span><br><span class="line">                                .mapToInt(Person::getAge)</span><br><span class="line">                                .max();</span><br></pre></td></tr></table></figure><p>由于数值流可能为空，并且给空的数值流计算最大值是没有意义的，因此max函数返回OptionalInt，它是Optional的一个子类，能够判断流是否为空，并对流为空的情况作相应的处理。 此外，mapToInt、mapToDouble、mapToLong进行数值操作后的返回结果分别为：OptionalInt、OptionalDouble、OptionalLong</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> stream </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更改Docker自定义网络的默认子网</title>
      <link href="/2019/02/09/%E6%9B%B4%E6%94%B9Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E7%BB%9C%E7%9A%84%E9%BB%98%E8%AE%A4%E5%AD%90%E7%BD%91/"/>
      <url>/2019/02/09/%E6%9B%B4%E6%94%B9Docker%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BD%91%E7%BB%9C%E7%9A%84%E9%BB%98%E8%AE%A4%E5%AD%90%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi  /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><a id="more"></a><p>添加行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;default-address-pools&quot;:</span><br><span class="line">  [</span><br><span class="line">    &#123;&quot;base&quot;:&quot;10.10.0.0/16&quot;,&quot;size&quot;:24&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启dockerd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure><p>检查结果,它也适用于docker-compose:</p><pre><code>docker network create foodocker network inspect foo | grep Subnet                  </code></pre><p>输出</p><blockquote><p>“Subnet”: “10.10.1.0/24”</p></blockquote><p>你的“bip”：“10.10.1.0/24”仅适用于bridge0.这意味着任何没有–network运行的容器都将使用此默认网络.</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 子网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hutool工具类</title>
      <link href="/2019/01/21/Hutool%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
      <url>/2019/01/21/Hutool%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h4 id="统一工具类的意义"><a href="#统一工具类的意义" class="headerlink" title="统一工具类的意义"></a>统一工具类的意义</h4><p>Hutool帮助我们简化每一行代码，减少每一个方法，然代码可读性、容错性更高。完整文档地址： <a href="https://hutool.cn/docs/index.html#/" target="_blank" rel="noopener">https://hutool.cn/docs/index.html#/</a> ,避免每个开发乱引入造成辣鸡代码。</p><p>强制使用hutool工具类</p><a id="more"></a><h4 id="hutool-提供类哪些功能"><a href="#hutool-提供类哪些功能" class="headerlink" title="hutool 提供类哪些功能"></a>hutool 提供类哪些功能</h4><p>一个Java基础工具类，对文件、流、加密解密、转码、正则、线程、XML等JDK方法进行封装，组成各种Util工具类，同时提供以下组件：</p><ul><li>hutool-aop JDK动态代理封装，提供非IOC下的切面支持</li><li>hutool-bloomFilter 布隆过滤，提供一些Hash算法的布隆过滤</li><li>hutool-cache 缓存</li><li>hutool-core 核心，包括Bean操作、日期、各种Util等</li><li>hutool-cron 定时任务模块，提供类Crontab表达式的定时任务</li><li>hutool-crypto 加密解密模块</li><li>hutool-db JDBC封装后的数据操作，基于ActiveRecord思想</li><li>hutool-dfa 基于DFA模型的多关键字查找</li><li>hutool-extra 扩展模块，对第三方封装（模板引擎、邮件、Servlet、二维码等）</li><li>hutool-http 基于HttpUrlConnection的Http客户端封装</li><li>hutool-log 自动识别日志实现的日志门面</li><li>hutool-script 脚本执行封装，例如Javascript</li><li>hutool-setting 功能更强大的Setting配置文件和Properties封装</li><li>hutool-system 系统参数调用封装（JVM信息等）</li><li>hutool-json JSON实现</li><li>hutool-captcha 图片验证码实现</li><li>hutool-poi 针对POI中Excel的封装<br>可以根据需求对每个模块单独引入，也可以通过引入hutool-all方式引入所有模块。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">    &lt;hutool.version&gt;4.5.17&lt;/hutool.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--hutool--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;$&#123;hutool.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>比如记录日志时候，从request获取参数的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpUtil.toParams(request.getParameterMap())</span><br></pre></td></tr></table></figure><p>获取当前时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//当前时间，格式 yyyy-MM-dd HH:mm:ss</span><br><span class="line">DateUtil.now()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> hutool </tag>
            
            <tag> utils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用Dockerfile</title>
      <link href="/2019/01/07/%E5%B8%B8%E7%94%A8Dockerfile/"/>
      <url>/2019/01/07/%E5%B8%B8%E7%94%A8Dockerfile/</url>
      
        <content type="html"><![CDATA[<p>常用Dockerfile</p><a id="more"></a><h4 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">FROM anapsix/alpine-java:8_server-jre_unlimited</span><br><span class="line"></span><br><span class="line">MAINTAINER tfss &lt;1255791430@qq.com&gt;</span><br><span class="line"></span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line">RUN mkdir -p /xxx</span><br><span class="line"></span><br><span class="line">WORKDIR /xxx</span><br><span class="line"></span><br><span class="line">EXPOSE 28089</span><br><span class="line"></span><br><span class="line">ADD ./target/xxx.jar ./</span><br><span class="line"></span><br><span class="line">CMD java -Djava.security.egd=file:/dev/./urandom -jar xxx.jar</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  xxx:</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: Dockerfile</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 28089:28089</span><br><span class="line">    container_name: xxx</span><br><span class="line">    hostname: xxx</span><br><span class="line">    image: xxx</span><br></pre></td></tr></table></figure><h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM node:10.10.0-alpine as build-stage</span><br><span class="line"></span><br><span class="line">RUN npm config set registry https://registry.npm.taobao.org</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY xxx/package*.json ./</span><br><span class="line"></span><br><span class="line">RUN npm install</span><br><span class="line">COPY xxx .</span><br><span class="line">RUN npm run build</span><br><span class="line"></span><br><span class="line">FROM nginx:1.15.3-alpine as production-stage</span><br><span class="line">MAINTAINER tfss &lt;1255791430@qq.com&gt;</span><br><span class="line">COPY nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">COPY --from=build-stage /app/dist/ /usr/share/nginx/html/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_read_timeout 3600s;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        #    proxy_set_header  X-real-ip $remote_addr;</span><br><span class="line">            try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">        # concurs with nginx&apos;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> springboot </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用compose汇总</title>
      <link href="/2018/11/27/%E5%B8%B8%E7%94%A8compose%E6%B1%87%E6%80%BB/"/>
      <url>/2018/11/27/%E5%B8%B8%E7%94%A8compose%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>常用的一些compose，作为临时测试使用的应用</p><a id="more"></a><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3.0&apos;</span><br><span class="line">services:</span><br><span class="line">    mysql:</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        container_name: mysql</span><br><span class="line">#        build:</span><br><span class="line">#            context: .</span><br><span class="line">#            dockerfile: Dockerfile.mysql</span><br><span class="line">        hostname: mysql</span><br><span class="line">        privileged: true</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">            - 3306:3306/tcp</span><br><span class="line">        environment:</span><br><span class="line">            - MYSQL_ROOT_PASSWORD=root</span><br><span class="line">        volumes:</span><br><span class="line">            - ./data/mysql:/var/lib/mysql</span><br><span class="line">            - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span><br><span class="line">        logging:</span><br><span class="line">            driver: json-file</span><br><span class="line">            options:</span><br><span class="line">                max-file: &apos;3&apos;</span><br><span class="line">                max-size: 100m</span><br></pre></td></tr></table></figure><h4 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3.0&apos;</span><br><span class="line">services:</span><br><span class="line">    redis:</span><br><span class="line">        image: redis:4.0.6</span><br><span class="line">        container_name: redis</span><br><span class="line">        hostname: redis</span><br><span class="line">        privileged: true</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">            - 6379:6379/tcp</span><br><span class="line">        volumes:</span><br><span class="line">            - ./data/redis:/data:rw</span><br><span class="line">            - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span><br><span class="line">        logging:</span><br><span class="line">            driver: json-file</span><br><span class="line">            options:</span><br><span class="line">                max-file: &apos;3&apos;</span><br><span class="line">                max-size: 100m</span><br></pre></td></tr></table></figure><h4 id="MySQL-Redis"><a href="#MySQL-Redis" class="headerlink" title="MySQL+Redis"></a>MySQL+Redis</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3.0&apos;</span><br><span class="line">services:</span><br><span class="line">    mysql:</span><br><span class="line">        image: mysql:5.7</span><br><span class="line">        container_name: mysql</span><br><span class="line">#        build:</span><br><span class="line">#            context: .</span><br><span class="line">#            dockerfile: Dockerfile.mysql</span><br><span class="line">        hostname: mysql</span><br><span class="line">        privileged: true</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">            - 3306:3306/tcp</span><br><span class="line">        networks:</span><br><span class="line">            mysql_redis:</span><br><span class="line">                aliases:</span><br><span class="line">                    - mysql</span><br><span class="line">        environment:</span><br><span class="line">            - MYSQL_ROOT_PASSWORD=root</span><br><span class="line">        volumes:</span><br><span class="line">            - ./data/mysql:/var/lib/mysql</span><br><span class="line">            - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span><br><span class="line">        logging:</span><br><span class="line">            driver: json-file</span><br><span class="line">            options:</span><br><span class="line">                max-file: &apos;3&apos;</span><br><span class="line">                max-size: 100m</span><br><span class="line">    redis:</span><br><span class="line">        image: redis:4.0.6</span><br><span class="line">        container_name: redis</span><br><span class="line">        hostname: redis</span><br><span class="line">        privileged: true</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">            - 6379:6379/tcp</span><br><span class="line">        networks:</span><br><span class="line">            mysql_redis:</span><br><span class="line">                aliases:</span><br><span class="line">                    - redis</span><br><span class="line">        volumes:</span><br><span class="line">            - ./data/redis:/data:rw</span><br><span class="line">            - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span><br><span class="line">        logging:</span><br><span class="line">            driver: json-file</span><br><span class="line">            options:</span><br><span class="line">                max-file: &apos;3&apos;</span><br><span class="line">                max-size: 100m</span><br><span class="line">networks:</span><br><span class="line">    mysql_redis:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装脚本</title>
      <link href="/2018/11/02/Python%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
      <url>/2018/11/02/Python%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>Python安装脚本</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;</span><br><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line"></span><br><span class="line">author: tfss</span><br><span class="line">e-mail: 1255791430@qq.com</span><br><span class="line">desc: python自动化安装用户指定版本的python环境:2.7或者3.6</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">#导入Python的系统编程操作模块</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">#导入用来处理Python运行时配置以及资源，与前当程序之外的系统环境交互的模块</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">#判断当前用户是否是root用户</span><br><span class="line">if os.getuid() == 0:</span><br><span class="line">  pass</span><br><span class="line">else:</span><br><span class="line">  print &apos;Not under root mode, please switch user!&apos;</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line">#获取用户输入的python安装版本</span><br><span class="line">version = raw_input(&apos;Please input wanted python version(2.7/3.6)&apos;)</span><br><span class="line"></span><br><span class="line">#如果嫌官网下载速度太慢可以指定python3.6.5的链接地址为本人上传资源地址</span><br><span class="line">#根据用户输入的python版本选择源码包下载地址</span><br><span class="line">if version == &apos;2.7&apos;:</span><br><span class="line">  package_version = &apos;Python-2.7.13&apos;</span><br><span class="line">  url = &apos;https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz&apos;</span><br><span class="line">elif version == &apos;3.6&apos;:</span><br><span class="line">  package_version = &apos;Python-3.6.5&apos;</span><br><span class="line">  url = &apos;https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz&apos;</span><br><span class="line">else:</span><br><span class="line">  print &apos;Please input given version number(2.7/3.6)&apos;</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line">#拼接源码包下载地址并执行下载命令</span><br><span class="line">cmd = &apos;wget &apos; + url</span><br><span class="line">package_tgz = package_version + &apos;.tgz&apos;</span><br><span class="line"></span><br><span class="line">if os.path.exists(package_tgz) != True:</span><br><span class="line">    res = os.system(cmd)</span><br><span class="line">    if res != 0 :</span><br><span class="line">      print &apos;Failed to download python source package, please inspect your network!&apos;</span><br><span class="line">      sys.exit(1)</span><br><span class="line"></span><br><span class="line">if os.path.exists(package_version) != True:</span><br><span class="line">    #解压下载的源码包</span><br><span class="line">    cmd = &apos;tar zxvf &apos; + package_tgz</span><br><span class="line">    res = os.system(cmd)</span><br><span class="line">    #如果解压失败则删除下载的源码包并且提示用户重新执行脚本</span><br><span class="line">    if res != 0:</span><br><span class="line">      os.system(&apos;rm -rf &apos; + package_tgz)</span><br><span class="line">      print &apos;Please reexcute the script to install python&apos;</span><br><span class="line">      sys.exit(1)</span><br><span class="line"></span><br><span class="line">#解压成功则进入解压后的源码目录中依次执行配置、编译、安装过程</span><br><span class="line">cmd = &apos;cd &apos; + package_version + &apos; &amp;&amp; ./configure --prefix=/usr/local/python &amp;&amp; make &amp;&amp; make install&apos;</span><br><span class="line"></span><br><span class="line">res = os.system(cmd)</span><br><span class="line"></span><br><span class="line">#安装失败则提示用户安装失败了，让用户检查环境依赖</span><br><span class="line">if res != 0:</span><br><span class="line">  print &apos;Failed to install python, please inspect dependencies for python install!&apos;</span><br><span class="line">  sys.exit(1)</span><br><span class="line"></span><br><span class="line"># 创建软连接</span><br><span class="line">if version == &apos;2.7&apos;:</span><br><span class="line">  print(&quot;版本为2.7，不需要配置软连接！&quot;)</span><br><span class="line">else:</span><br><span class="line">  cmd = &apos;ln -s /usr/local/python/bin/python3.6 /usr/local/bin/python3&apos;</span><br><span class="line">  res = os.system(cmd)</span><br><span class="line">  if res != 0:</span><br><span class="line">    print &apos;软连接失败，请手动软连(ln -s /usr/local/python/bin/python3.6 /usr/bin/local/python3)&apos;</span><br><span class="line">    sys.exit(1)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> python </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot集成swagger2</title>
      <link href="/2018/11/01/Spring%20Boot%E9%9B%86%E6%88%90swagger2/"/>
      <url>/2018/11/01/Spring%20Boot%E9%9B%86%E6%88%90swagger2/</url>
      
        <content type="html"><![CDATA[<p>Spring Boot集成swagger2</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line">import springfox.documentation.builders.PathSelectors;</span><br><span class="line">import springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line">import springfox.documentation.service.ApiInfo;</span><br><span class="line">import springfox.documentation.service.Contact;</span><br><span class="line">import springfox.documentation.spi.DocumentationType;</span><br><span class="line">import springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line">import springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">@ConditionalOnExpression(&quot;$&#123;swagger.enable: true &#125;&quot;)</span><br><span class="line">public class SwaggerConfig &#123;</span><br><span class="line">public static final String SWAGGER_SCAN_BASE_PACKAGE = &quot;com.xxx.controller&quot;;</span><br><span class="line">  /**</span><br><span class="line">   * buildDocket() 用于创建 Docket 的 Bean，</span><br><span class="line">   * buildApiInfo() 创建 Api 的基本信息，用于显示在文档页面上。</span><br><span class="line">   * select() 函数返回一个 `ApiSelectorBuilder` 实例，用来控制哪些接口暴露给 Swagger2 来展现。</span><br><span class="line">   * 一般采用指定扫描的包路径来定义，本例中 Swagger 会扫描 controller 包下所有定义的API，</span><br><span class="line">   * 并产生文档内容（除了被 @ApiIgnore 指定的请求）。</span><br><span class="line">   * @return</span><br><span class="line">   */</span><br><span class="line">  @Bean</span><br><span class="line">  public Docket buildDocket() &#123;</span><br><span class="line">    Docket docket = new Docket(DocumentationType.SWAGGER_2).apiInfo(buildApiInfo())</span><br><span class="line">        .select()</span><br><span class="line">        .apis(RequestHandlerSelectors.basePackage(SWAGGER_SCAN_BASE_PACKAGE))</span><br><span class="line">        .paths(PathSelectors.any())</span><br><span class="line">        .build();</span><br><span class="line">    return docket;</span><br><span class="line">  &#125;</span><br><span class="line">  private Contact contact() &#123;</span><br><span class="line">    return new Contact(&quot;xxx系统&quot;,&quot;http://xxx.xxx.xxx.xxx:xxxx&quot;, &quot;1255791430@qq.com&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  private ApiInfo buildApiInfo() &#123;</span><br><span class="line">    return new ApiInfoBuilder()</span><br><span class="line">        .title(&quot;xx APIS&quot;)</span><br><span class="line">        .description(&quot;xx接口信息&quot;)</span><br><span class="line">        .version(&quot;1.0.0&quot;)</span><br><span class="line">        .contact(contact())</span><br><span class="line">        .build();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正文</p><p>图片引入<br><img src="../../../../images/logo.jpg" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MybatisGenerator自动生成代码</title>
      <link href="/2018/09/02/MybatisGenerator%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/"/>
      <url>/2018/09/02/MybatisGenerator%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>  自动生成Dao层代码。<br></p><a id="more"></a><h4 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--mybatis自动生成代码插件--&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.2&lt;/version&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;!--允许移动生成的文件 --&gt;</span><br><span class="line">                    &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">                    &lt;!-- 是否覆盖，true表示会替换生成的JAVA文件，false则不覆盖 --&gt;</span><br><span class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">                    &lt;!-- 自动生成的配置 --&gt;</span><br><span class="line">                    &lt;configurationFile&gt;src/main/resources/generatorConfig.xml&lt;/configurationFile&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">                &lt;dependencies&gt;</span><br><span class="line">                    &lt;!--mysql驱动包--&gt;</span><br><span class="line">                    &lt;dependency&gt;</span><br><span class="line">                        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">                        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">                        &lt;version&gt;5.1.45&lt;/version&gt;</span><br><span class="line">                    &lt;/dependency&gt;</span><br><span class="line">                &lt;/dependencies&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br></pre></td></tr></table></figure><h4 id="配置-generatorConfig-xml"><a href="#配置-generatorConfig-xml" class="headerlink" title="配置 generatorConfig.xml"></a>配置 generatorConfig.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot; &gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 一个数据库一个context --&gt;</span><br><span class="line">    &lt;context id=&quot;infoGuardian&quot;&gt;</span><br><span class="line">        &lt;!-- 控制实体类生成toString()方法 --&gt;</span><br><span class="line">        &lt;plugin type=&quot;org.mybatis.generator.plugins.ToStringPlugin&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 注释 --&gt;</span><br><span class="line">        &lt;commentGenerator &gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;false&quot;/&gt;&lt;!-- 是否取消注释 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;false&quot; /&gt; &lt;!-- 是否生成注释代时间戳--&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- jdbc连接 --&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span><br><span class="line">                        connectionURL=&quot;jdbc:mysql://172.0.0.1:3306/db_demo?useSSL=false&quot;</span><br><span class="line">                        userId=&quot;root&quot;</span><br><span class="line">                        password=&quot;root&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 类型转换 --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） --&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成实体类地址 --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.demo.model&quot; targetProject=&quot;src/main/java&quot; &gt;</span><br><span class="line">            &lt;!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">            &lt;!-- 是否针对string类型的字段在set的时候进行trim调用 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成sqlmapxml文件 --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;generator&quot; targetProject=&quot;src/main/resources/mapper&quot; &gt;</span><br><span class="line">            &lt;!-- 是否在当前路径下新加一层schema,eg：fase路径$&#123;sqlMapTargetPackage&#125;， true:$&#123;sqlMapTargetPackage&#125;.[schemaName] --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 生成mapxml对应client，也就是接口dao --&gt;</span><br><span class="line">        &lt;javaClientGenerator targetPackage=&quot;com.demo.mapper.generator&quot; targetProject=&quot;src/main/java&quot; type=&quot;XMLMAPPER&quot; &gt;</span><br><span class="line">            &lt;!-- 是否在当前路径下新加一层schema,eg：fase路径$&#123;javaClientTargetPackage&#125;， true:$&#123;javaClientTargetPackage&#125;.[schemaName] --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 配置表信息 --&gt;</span><br><span class="line">        &lt;!-- &lt;table schema=&quot;$&#123;jdbc_user&#125;&quot; tableName=&quot;s_user&quot; --&gt;</span><br><span class="line">        &lt;!-- domainObjectName=&quot;UserEntity&quot; enableCountByExample=&quot;false&quot; --&gt;</span><br><span class="line">        &lt;!-- enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; --&gt;</span><br><span class="line">        &lt;!-- enableUpdateByExample=&quot;false&quot;&gt; --&gt;</span><br><span class="line">        &lt;!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample</span><br><span class="line">            是否生成 example类   --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 忽略列，不生成bean 字段 --&gt;</span><br><span class="line">        &lt;!-- &lt;ignoreColumn column=&quot;FRED&quot; /&gt; --&gt;</span><br><span class="line">        &lt;!-- 指定列的java数据类型 --&gt;</span><br><span class="line">        &lt;!--       &lt;columnOverride column=&quot;LONG_VARCHAR_FIELD&quot; jdbcType=&quot;VARCHAR&quot; /&gt; --&gt;</span><br><span class="line">        &lt;!-- &lt;/table&gt; --&gt;</span><br><span class="line">        &lt;!--&lt;table tableName=&quot;t_admin&quot; domainObjectName=&quot;Admin&quot;/&gt;--&gt;</span><br><span class="line">&lt;!--        &lt;table tableName=&quot;ALLTYPES&quot; domainObjectName=&quot;Customer&quot; enableCountByExample=&quot;false&quot;--&gt;</span><br><span class="line">&lt;!--               enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;  &gt;--&gt;</span><br><span class="line">&lt;!--            &lt;property name=&quot;useActualColumnNames&quot; value=&quot;true&quot;/&gt;--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--        &lt;/table&gt;--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;table tableName=&quot;t_menu&quot; domainObjectName=&quot;Menu&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><h4 id="application-yml中添加以下内容"><a href="#application-yml中添加以下内容" class="headerlink" title="application.yml中添加以下内容"></a>application.yml中添加以下内容</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mapper/**/*.xml</span><br><span class="line">  type-aliases-package: com.chinaentropy.netmonitorin.model</span><br><span class="line">  configuration:</span><br><span class="line">    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl</span><br><span class="line">    map-underscore-to-camel-case: true</span><br></pre></td></tr></table></figure><p>可以直接在<code>eclipse</code>下执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/tfssweb/MybatisGenerator.git</span><br></pre></td></tr></table></figure><p>即可运行。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Idea常用插件汇总</title>
      <link href="/2018/08/09/Idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB/"/>
      <url>/2018/08/09/Idea%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>Idea插件</p><a id="more"></a><h5 id="括号高亮"><a href="#括号高亮" class="headerlink" title="括号高亮"></a>括号高亮</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HighlightBracketPair</span><br></pre></td></tr></table></figure><h5 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Lombok</span><br></pre></td></tr></table></figure><h5 id="Mybatis中mapper互跳"><a href="#Mybatis中mapper互跳" class="headerlink" title="Mybatis中mapper互跳"></a>Mybatis中mapper互跳</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free-mybatis-plugin</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费CDN加速</title>
      <link href="/2018/06/26/%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F/"/>
      <url>/2018/06/26/%E5%85%8D%E8%B4%B9CDN%E5%8A%A0%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<p>什么是 CloudFlare <br><br>CloudFlare 是通过反向代理（reverse proxy）提供网站加速服务，为站长解决了 jpg/JS/CSS 这些静态文件到 CDN 上的问题，并且通过它部署在全球各大洲的缓存结点服务器（详细列表），提供高效的加速服务。</p><a id="more"></a><p>CloudFlare 除了基本的把网页的静态文件（jpg/JS/CSS）推送到它的服务器上之外，还提供了详细的网站流量报表，网站攻击的基本防御，JS 和 CSS 文件的自动 minify，以及其他许多方便的功能，并且这些服务都是免费的。</p><p>当然 CloudFlare 也有 PRO 收费版，相比免费版 24 小时才能看到报表，PRO 版的报表几乎是实时的，每 15 分钟就有一次统计，PRO 版还提供 SSL 连接等，不过对于普通用户来说，免费版本已经足够用了。这一切，完全免费哦！无限流量！<br><br><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">CloudFlare官网</a><br><br><a href="https://www.youngfree.cn/share/1108.html" target="_blank" rel="noopener">CloudFlare配置步骤</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> cdn </tag>
            
            <tag> 加速 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lombok使用及其技巧说明</title>
      <link href="/2018/06/12/Lombok%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%85%B6%E6%8A%80%E5%B7%A7%E8%AF%B4%E6%98%8E/"/>
      <url>/2018/06/12/Lombok%E4%BD%BF%E7%94%A8%E5%8F%8A%E5%85%B6%E6%8A%80%E5%B7%A7%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h4 id="为什么使用lombok"><a href="#为什么使用lombok" class="headerlink" title="为什么使用lombok"></a>为什么使用lombok</h4><p>还在编写无聊枯燥又难以维护的POJO吗？ 洁癖者的春天在哪里？请看Lombok！在过往的Java项目中，充斥着太多不友好的代码：POJO的getter/setter/toString；异常处理；I/O流的关闭操作等等，这些样板代码既没有技术含量，又影响着代码的美观，Lombok应运而生。首先说明一下：任何技术的出现都是为了解决某一类问题的，如果在此基础上再建立奇技淫巧，不如回归Java本身。应该保持合理使用而不滥用。</p><p>Lombok 常用的注解就那么几个，@Data 、@Getter/Setter</p><a id="more"></a><h4 id="AllArgsConstructor-替代-Autowired构造注入-多个bean-注入时更加清晰L"><a href="#AllArgsConstructor-替代-Autowired构造注入-多个bean-注入时更加清晰L" class="headerlink" title="@AllArgsConstructor 替代@Autowired构造注入,多个bean 注入时更加清晰L"></a>@AllArgsConstructor 替代@Autowired构造注入,多个bean 注入时更加清晰L</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Configuration</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">public class RouterFunctionConfiguration &#123;</span><br><span class="line">   private final HystrixFallbackHandler hystrixFallbackHandler;</span><br><span class="line">   private final ImageCodeHandler imageCodeHandler;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Slf4j</span><br><span class="line">@Configuration</span><br><span class="line">public class RouterFunctionConfiguration &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   private  HystrixFallbackHandler hystrixFallbackHandler;</span><br><span class="line">   @Autowired</span><br><span class="line">   private  ImageCodeHandler imageCodeHandler;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a>@SneakyThrows</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@SneakyThrows</span><br><span class="line">private void checkCode(ServerHttpRequest request) &#123;</span><br><span class="line">   String code = request.getQueryParams().getFirst(&quot;code&quot;);</span><br><span class="line"></span><br><span class="line">   if (StrUtil.isBlank(code)) &#123;</span><br><span class="line">   throw new ValidateCodeException(&quot;验证码不能为空&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   redisTemplate.delete(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 不使用就要加这个抛出</span><br><span class="line">private void checkCode(ServerHttpRequest request) throws ValidateCodeException &#123;</span><br><span class="line">   String code = request.getQueryParams().getFirst(&quot;code&quot;);</span><br><span class="line"></span><br><span class="line">   if (StrUtil.isBlank(code)) &#123;</span><br><span class="line">   throw new ValidateCodeException(&quot;验证码不能为空&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UtilityClass-工具类再也不用定义static的方法了，直接就可以Class-Method-使用"><a href="#UtilityClass-工具类再也不用定义static的方法了，直接就可以Class-Method-使用" class="headerlink" title="@UtilityClass 工具类再也不用定义static的方法了，直接就可以Class.Method 使用"></a>@UtilityClass 工具类再也不用定义static的方法了，直接就可以Class.Method 使用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@UtilityClass</span><br><span class="line">public class Utility &#123;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return &quot;name&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    System.out.println(Utility.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CleanUp-清理流对象-不用手动去关闭流，多么优雅"><a href="#CleanUp-清理流对象-不用手动去关闭流，多么优雅" class="headerlink" title="@CleanUp: 清理流对象,不用手动去关闭流，多么优雅"></a>@CleanUp: 清理流对象,不用手动去关闭流，多么优雅</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Cleanup</span><br><span class="line">OutputStream outStream = new FileOutputStream(new File(&quot;text.txt&quot;));</span><br><span class="line">@Cleanup</span><br><span class="line">InputStream inStream = new FileInputStream(new File(&quot;text2.txt&quot;));</span><br><span class="line">byte[] b = new byte[65536];</span><br><span class="line">while (true) &#123;</span><br><span class="line">   int r = inStream.read(b);</span><br><span class="line">   if (r == -1) break;</span><br><span class="line">   outStream.write(b, 0, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> lombok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf</title>
      <link href="/2018/06/09/Thymeleaf/"/>
      <url>/2018/06/09/Thymeleaf/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h5 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--thymeleaf--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="application-properties"><a href="#application-properties" class="headerlink" title="application.properties"></a>application.properties</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">##配置thymeleaf</span><br><span class="line">spring.thymeleaf.cache=true</span><br><span class="line">spring.thymeleaf.check-template=true</span><br><span class="line">spring.thymeleaf.check-template-location=true</span><br><span class="line">spring.thymeleaf.enabled=true</span><br><span class="line">spring.thymeleaf.encoding=UTF-8</span><br><span class="line">spring.thymeleaf.excluded-view-names=</span><br><span class="line">spring.thymeleaf.mode=HTML5</span><br><span class="line">spring.thymeleaf.prefix=classpath:/templates/</span><br><span class="line">spring.thymeleaf.reactive.max-chunk-size=</span><br><span class="line">spring.thymeleaf.reactive.media-types=</span><br><span class="line">spring.thymeleaf.servlet.content-type=text/html</span><br><span class="line">spring.thymeleaf.suffix=.html</span><br><span class="line">spring.thymeleaf.template-resolver-order=</span><br></pre></td></tr></table></figure><h5 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h5><h6 id="th-each"><a href="#th-each" class="headerlink" title="th:each"></a>th:each</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&quot; th:each=&quot;team,teamStat:$&#123;projectTeams&#125;&quot;&gt;</span><br><span class="line">&lt;div class=&quot;lecturer-card-container&quot; th:style=&quot;$&#123;(teamStat.count) % 5==0&#125;?&apos;margin-right: 0px;&apos;:&apos;&apos;&quot;&gt;</span><br><span class="line">&lt;div class=&quot;lecturer-item&quot;&gt;</span><br><span class="line">&lt;img class=&quot;lecturer-uimg&quot; src=&quot;../res/i/header.jpg&quot; th:src=&quot;$&#123;team.getImageUrl()&#125;&quot;&gt;</span><br><span class="line">&lt;span class=&quot;lecturer-name&quot; th:text=&quot;$&#123;team.getUsername()&#125;&quot;&gt;颓废书生&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;lecturer-title&quot; th:text=&quot;$&#123;team.getTitle()&#125;&quot;&gt;一本大学-计算机专业&lt;/span&gt;</span><br><span class="line">&lt;span class=&quot;lecturer-p&quot; th:text=&quot;$&#123;team.getBrief()&#125;&quot;&gt;擅长前端、Java后端、Python爬虫、运维&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><h6 id="th-style"><a href="#th-style" class="headerlink" title="th:style"></a>th:style</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;lecturer-card-container&quot; th:style=&quot;$&#123;(teamStat.count) % 5==0&#125;?&apos;margin-right: 0px;&apos;:&apos;&apos;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用dwr时session error错误</title>
      <link href="/2018/06/01/%E4%BD%BF%E7%94%A8dwr%E6%97%B6session%20error%E9%94%99%E8%AF%AF/"/>
      <url>/2018/06/01/%E4%BD%BF%E7%94%A8dwr%E6%97%B6session%20error%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>在web.xml中添加如下配置：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">  &lt;servlet-name&gt;dwr-invoker&lt;/servlet-name&gt;</span><br><span class="line">  &lt;servlet-class&gt;org.directwebremoting.servlet.DwrServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;init-param&gt;</span><br><span class="line">    &lt;param-name&gt;debug&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;true&lt;/param-value&gt;</span><br><span class="line">  &lt;/init-param&gt;</span><br><span class="line">  &lt;init-param&gt;</span><br><span class="line">    &lt;param-name&gt;crossDomainSessionSecurity&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;false&lt;/param-value&gt;</span><br><span class="line">  &lt;/init-param&gt;</span><br><span class="line">&lt;/servlet&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> dwr </tag>
            
            <tag> session </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis之RDB与AOF</title>
      <link href="/2018/05/06/Redis%E4%B9%8BRDB%E4%B8%8EAOF/"/>
      <url>/2018/05/06/Redis%E4%B9%8BRDB%E4%B8%8EAOF/</url>
      
        <content type="html"><![CDATA[<h2 id="官方使用建议"><a href="#官方使用建议" class="headerlink" title="官方使用建议"></a>官方使用建议</h2><p>  <code>RDB持久化方式</code>能够在指定的时间间隔内对你的数据进行快照存储；<br><br>  <code>AOF持久化方式</code>记录每次对服务器的写操作，当服务器重启的时候会重新执行这些命令来恢复原始的数据，<code>AOF</code>命令以<code>redis</code>协议追加保存每次“写”操作到文件的末尾。</p><p><code>Redis</code>还能对<code>AOF</code>文件进行后台重写，使得<code>AOF</code>文件的体积不至于过大。</p><a id="more"></a><h2 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h2><p>只做缓存：</p><ul><li>如果你希望你的数据在服务器运行的时候存在，你也可以不使用任何持久化方式;</li></ul><p>同时开启两种持久化方式:</p><ul><li>在这种情况下，当<code>Redis</code>重启的时候会优先载入<code>AOF</code>文件来恢复原始数据，因为在通常情况下<code>AOF</code>文件保存的数据集要比<code>RDB</code>文件保存的数据集要完整（也可以这样理解：<code>redis.conf</code>文件默认情况下<code>AOF</code>持久化方式是关闭的，那么手动开启必然是使用者自己的选择，<code>Redis</code>理应做出响应先加载<code>AOF</code>。）。</li><li><code>RDB</code>的数据不实时，同时使用两者时，服务器重启也会找<code>AOF</code>文件。那要不要只使用<code>AOF</code>？建议不要，因为<code>RDB</code>更适合用于备份数据库（<code>AOF</code>在不断变化，不好备份），快速重启，而且不会有<code>AOF</code>可能潜在的bug，留着作为一个万一的手段。</li></ul><h2 id="性能建议"><a href="#性能建议" class="headerlink" title="性能建议"></a>性能建议</h2><ul><li>如果<code>RDB</code>文件只是作后备用途，建议只在<code>Slave</code>上持久化<code>RDB</code>文件，而且只要15分钟备份一次就够了，即只保留<code>save 900 1</code>这条规则；</li><li>如果激活<code>AOF</code>，好处是在最恶劣的情况下也只会丢失不超过两秒的数据，启动脚本比较简单，只需要加载自己的<code>AOF</code>文件就可以了，代价是带来了持续的IO；二是<code>AOF rewrite</code>的最后将<code>rewrite</code>过程中产生的新数据写到新文件造成的阻塞几乎是不可避免的，只要硬盘许可，应该尽量减少<code>AOF rewrite</code>的频率，<code>AOF</code>重写的基础大小是64M太小了，可以设置5G以上。默认超过原大小100%时重写，可以改到适当的数值；</li><li>如果不激活<code>AOF</code>，仅靠<code>Master-Slave Replication</code>实现高可用性也可以，能省掉一大笔IO，也可以减少<code>rewrite</code>时带来的系统波动。代价是如果<code>Master/Slave</code>同时宕机，会丢失十几分钟的数据，启动脚本也要比比较两个<code>Master/Slave</code>中的<code>RDB</code>文件，载入较新的那个。</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> redis </tag>
            
            <tag> rdb </tag>
            
            <tag> aof </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装Mysql</title>
      <link href="/2018/04/26/Linux%E5%AE%89%E8%A3%85Mysql/"/>
      <url>/2018/04/26/Linux%E5%AE%89%E8%A3%85Mysql/</url>
      
        <content type="html"><![CDATA[<p>  此文搭建环境为centos7。</p><h2 id="第一步：配置YUM源"><a href="#第一步：配置YUM源" class="headerlink" title="第一步：配置YUM源"></a>第一步：配置YUM源</h2><p>  在<code>MySql</code>官网，下载<code>YUM</code>源<code>rpm</code>安装包<a href="http://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">传送门</a>，如下图：</p><p>依次执行以下命令来安装：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</span><br><span class="line">yum localinstall mysql57-community-release-el7-8.noarch.rpm</span><br></pre></td></tr></table></figure><p>检查mysql源是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist enabled | grep &quot;mysql.*-community.*&quot;</span><br></pre></td></tr></table></figure><p>  可以修改<code>vim /etc/yum.repos.d/mysql-community.repo</code>源，改变默认安装的mysql版本。比如要安装5.6版本，将5.7源的<code>enabled=1</code>改成<code>enabled=0</code>。然后再将5.6源的<code>enabled=0</code>改成<code>enabled=1</code>即可。改完之后的效果如下所示：</p><h2 id="第二步：安装MySql"><a href="#第二步：安装MySql" class="headerlink" title="第二步：安装MySql"></a>第二步：安装MySql</h2><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure><p>安装<code>MySql</code>。</p><h2 id="第三步：启动MySql服务"><a href="#第三步：启动MySql服务" class="headerlink" title="第三步：启动MySql服务"></a>第三步：启动MySql服务</h2><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h2 id="第四步：配置开机启动"><a href="#第四步：配置开机启动" class="headerlink" title="第四步：配置开机启动"></a>第四步：配置开机启动</h2><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable mysqld</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="第五步：修改root本地登录密码"><a href="#第五步：修改root本地登录密码" class="headerlink" title="第五步：修改root本地登录密码"></a>第五步：修改root本地登录密码</h2><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/mysqladmin -u root password root</span><br></pre></td></tr></table></figure><p>即可。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="编码设置"><a href="#编码设置" class="headerlink" title="编码设置"></a>编码设置</h3><p>修改<code>vim /etc/my.cnf</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">init_connect=&apos;SET collation_connection = utf8_unicode_ci&apos;</span><br><span class="line">init_connect=&apos;SET NAMES utf8&apos;</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_unicode_ci</span><br><span class="line">skip-character-set-client-handshake</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql之索引</title>
      <link href="/2018/04/23/MySql%E4%B9%8B%E7%B4%A2%E5%BC%95/"/>
      <url>/2018/04/23/MySql%E4%B9%8B%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是索引？"><a href="#什么是索引？" class="headerlink" title="什么是索引？"></a>什么是索引？</h2><p>  <code>MySql</code>官方定义为：索引（Index）是帮助<code>MySql</code>高效获取数据的数据结构。所以说，我们可以得到‘索引’的本质：索引是数据结构。<br><br>  更通俗的讲，索引的目的是在于提高查询效率，可以类比字典：假如要查“mysql”这个单词，我们肯定定位到“m”字母，然后接着找“y”字母以及“s”“q”“l”。如果没有索引，那么我们只能从字母“a”开始找了。</p><a id="more"></a><h2 id="手写与机读"><a href="#手写与机读" class="headerlink" title="手写与机读"></a>手写与机读</h2><p>  程序员自己写的sql顺序与MySql执行的sql顺序是有些不一样的；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">手写：</span><br><span class="line">SELECT DISTINCT</span><br><span class="line">&lt;select_list&gt;</span><br><span class="line">FROM</span><br><span class="line">&lt;left_table&gt;</span><br><span class="line">    &lt;join_type&gt; JOIN &lt;right_table&gt; on &lt;join_condition&gt;</span><br><span class="line">WHERE</span><br><span class="line">&lt;where_condition&gt;</span><br><span class="line">GROUP BY</span><br><span class="line">&lt;group_by_list&gt;</span><br><span class="line">HAVING</span><br><span class="line">&lt;having_condition&gt;</span><br><span class="line">ORDER BY</span><br><span class="line">&lt;order_by_condition&gt;</span><br><span class="line">LIMIT</span><br><span class="line">&lt;limit_number&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">机读：</span><br><span class="line">FROM &lt;left_table&gt;</span><br><span class="line">ON &lt;join_condition&gt;</span><br><span class="line">&lt;join_type&gt; JOIN &lt;right_table&gt;</span><br><span class="line">WHERE &lt;where_condition&gt;</span><br><span class="line">GROUP BY &lt;group_by_list&gt;</span><br><span class="line">HAVING &lt;having_condition&gt;</span><br><span class="line">SELECT</span><br><span class="line">DISTINCT &lt;select_list&gt;</span><br><span class="line">ORDER BY &lt;order_by_condition&gt;</span><br><span class="line">LIMIT &lt;limit_number&gt;</span><br></pre></td></tr></table></figure><p>所以总结下，可以用下图表示：<br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/069.png" alt="mysql"></p><h2 id="索引的创建"><a href="#索引的创建" class="headerlink" title="索引的创建"></a>索引的创建</h2><p>  <code>MySql</code>的<code>单值索引</code>与<code>复合索引</code>，可分别由下列语句创建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">单值索引：</span><br><span class="line">create index idx_&lt;table&gt;_&lt;column&gt; on &lt;table&gt;(&lt;column&gt;);</span><br><span class="line">alter &lt;table&gt; add index idx_&lt;table&gt;_&lt;column&gt; on &lt;table&gt;(&lt;column&gt;);</span><br><span class="line"></span><br><span class="line">复合索引：</span><br><span class="line">create index idx_&lt;table&gt;_&lt;column1&gt;&lt;column2&gt; on &lt;table&gt;(&lt;column1,column2&gt;);</span><br><span class="line">alter &lt;table&gt; add index idx_&lt;table&gt;_&lt;column1&gt;&lt;column2&gt; on &lt;table&gt;(&lt;column1,column2&gt;);</span><br></pre></td></tr></table></figure><p>删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop index &lt;index_name&gt; on &lt;table&gt;;</span><br></pre></td></tr></table></figure><p>查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show index from &lt;table&gt;;</span><br><span class="line">或者</span><br><span class="line">show index from &lt;table&gt;\G</span><br></pre></td></tr></table></figure><h2 id="索引创建与否的条件"><a href="#索引创建与否的条件" class="headerlink" title="索引创建与否的条件"></a>索引创建与否的条件</h2><ul><li>主键自动建立唯一索引；</li><li>频繁作为查询条件的字段应该创建索引；</li><li>查询中与其他表关联的字段，外键关系建立索引；</li><li>where条件里用不到的字段不创建索引；</li><li>在高并发下倾向创建复合索引；</li><li>查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度；</li><li>查询中统计或者分组字段；</li><li>表中数据较少的情况下，不适合创建索引；</li><li>经常有增删改操作的表，不适合创建索引；</li><li>频繁更新的字段，不适合创建索引；</li><li>数据重复且分布平均的表字段，不适合创建索引；</li></ul><h2 id="索引优化分析"><a href="#索引优化分析" class="headerlink" title="索引优化分析"></a>索引优化分析</h2><p>  <code>MySql</code>性能分析及<code>explain</code>的使用。<br><code>explain</code>的相关属性，如下图：<br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/070.png" alt="explain"></p><ul><li><code>id</code>：select查询的序列号，表示查询中执行select子句或操作表的顺序。<ul><li>id相同：执行顺序自上而下；</li><li>id不同：如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行。</li></ul></li><li><code>select_type</code>：查询语句的类型。<ul><li>SIMPLE</li><li>PRIMARY</li><li>SUBQUERY</li><li>DERIVED</li><li>UNION</li><li>UNION RESULT</li></ul></li><li><code>table</code>:查询的表。</li><li><code>type</code>:访问类型，显示查询使用了何种类型，常见如下：<ul><li>system：表只有一行记录（等价于系统表），这是const类型的特例，平时不会出现，可忽略；</li><li>const：表示通过索引一次就找到了，const用于比较primary或者unique索引，因为只匹配一行记录；</li><li>eq_ref：唯一性索引扫描，对于没个索引键，表中只有一条记录与之匹配，常见于主键或唯一性索引扫描；</li><li>ref：非唯一性索引扫描，返回匹配某个单独值的所有行；</li><li>range：只检索给定范围的行，一般就是where语句中使用了“&lt;”、“&gt;”、“between”、“in”等；</li><li>index：与all的区别就是只遍历索引树，通常比all快；</li><li>all：全表扫描；</li></ul></li><li><code>possible_keys</code>:mysql认为可能用到的索引；</li><li><code>key</code>:实际用到的索引；</li><li><code>key_len</code>:长度；</li><li><code>ref</code>:引用；</li><li><code>rows</code>:扫描的行；</li><li><code>Extra</code>:常用Using filesort、Using temporary、Using index、Using where</li></ul><p>  以上最重要的几个指标是：<code>id</code>、<code>type</code>、<code>key</code>、<code>rows</code>、<code>Extra</code>，其中<code>type</code>指标中，结果值从最好到最坏依次是：<code>system</code>&gt;<code>const</code>&gt;<code>eq_ref</code>&gt;<code>ref</code>&gt;<code>range</code>&gt;<code>index</code>&gt;<code>all</code>，一般来说，得保证查询至少达到<code>range</code>级别，最好能达到<code>ref</code>级别；其中<code>Extra</code>指标中，出现<code>Using index</code>很不错，但是出现<code>Using filesort</code>或者<code>Using temporary</code>那你就得小心了。</p><h2 id="索引失效原因及建议"><a href="#索引失效原因及建议" class="headerlink" title="索引失效原因及建议"></a>索引失效原因及建议</h2><p>索引失效原因：</p><ol><li>全值匹配不当；</li><li>没有遵循最佳左前缀法则；</li><li>在索引列上进行各种操作（如：计算、函数、自动或手动类型转换）；</li><li>存储引擎不能使用索引中范围条件右边的列（范围之后的索引会失效）；</li><li>尽量使用覆盖索引（只访问索引的查询（索引列与查询列一致）），减少select *；</li><li>mysql在使用不等于（!=或者&lt;&gt;）的时候，不能使用索引；</li><li>is null，is not null 无法使用索引；</li><li>like以通配符%开头，索引失效；</li><li>字符串不加单引号，索引失效；</li><li>少用or，用or做连接的时候，索引失效；</li></ol><p>优化建议：<br>  在使用<code>join</code>的时候，永远使用小结果集驱动大结果集，减少NestedLoop的循环次数，保证<code>join</code>语句中被驱动表上的<code>join</code>条件字段已经被索引；</p><p>下面口诀不错:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">【优化总结口诀】</span><br><span class="line"></span><br><span class="line">全值匹配我最爱，最左前缀要遵守；</span><br><span class="line">带头大哥不能死，中间兄弟不能断；</span><br><span class="line">索引列上少计算，范围之后全失效；</span><br><span class="line">like百分写最右，覆盖索引不写星；</span><br><span class="line">不等空值还有or，索引失效要少用；</span><br><span class="line">VAR引号不可丢，SQL高级也不难！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> mysql </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper集群搭建</title>
      <link href="/2018/04/09/Zookeeper%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/04/09/Zookeeper%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h3 id="Zookeeper集群搭建"><a href="#Zookeeper集群搭建" class="headerlink" title="Zookeeper集群搭建"></a>Zookeeper集群搭建</h3><h4 id="一、集群规划与环境配置"><a href="#一、集群规划与环境配置" class="headerlink" title="一、集群规划与环境配置"></a>一、集群规划与环境配置</h4><ul><li>环境准备</li></ul><table><thead><tr><th align="center">序号</th><th align="center">IP</th><th align="center">主机名</th><th align="center">软件</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">192.168.14.64 / 172.16.1.30</td><td align="center">zookeeper1</td><td align="center">jdk、zookeeper</td></tr><tr><td align="center">2</td><td align="center">192.168.14.32 / 172.16.1.34</td><td align="center">zookeeper2</td><td align="center">jdk、zookeeper</td></tr><tr><td align="center">3</td><td align="center">192.168.14.49 / 172.16.1.10</td><td align="center">zookeeper3</td><td align="center">jdk、zookeeper</td></tr></tbody></table><a id="more"></a><ul><li>修改<code>hosts</code>文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">172.16.1.30 zookeeper1</span><br><span class="line">172.16.1.34 zookeeper2</span><br><span class="line">172.16.1.10 zookeeper3</span><br></pre></td></tr></table></figure><h4 id="二、安装Zookeeper集群"><a href="#二、安装Zookeeper集群" class="headerlink" title="二、安装Zookeeper集群"></a>二、安装Zookeeper集群</h4><ul><li>解压<code>tar</code>包</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf zookeeper_3_4_9.tar.gz</span><br></pre></td></tr></table></figure><ul><li>创建数据目录<code>data</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure><ul><li>配置主机<code>ID</code>(三台)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd data</span><br><span class="line">echo 1 &gt; myid</span><br><span class="line">echo 2 &gt; myid</span><br><span class="line">echo 3 &gt; myid</span><br></pre></td></tr></table></figure><ul><li>修改<code>zoo.cfg</code>配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dataDir=/opt/zookeeper-3.4.9/data</span><br><span class="line"></span><br><span class="line">server.1=zookeeper1:2888:3888</span><br><span class="line">server.2=zookeeper2:2888:3888</span><br><span class="line">server.3=zookeeper3:2888:3888</span><br></pre></td></tr></table></figure><ul><li>配置环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export ZOOKEEPER_HOME=/opt/zookeeper-3.4.9</span><br><span class="line">export PATH=$ZOOKEEPER_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$ZOOKEEPER_HOME/lib/dt.jar:$ZOOKEEPER_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><ul><li>服务器分发</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/hosts zookeeper2:/etc/</span><br><span class="line">scp /etc/hosts zookeeper3:/etc/</span><br><span class="line"></span><br><span class="line">scp zoo.cfg zookeeper2:$ZOOKEEPER_HOME/conf/</span><br><span class="line">scp zoo.cfg zookeeper3:$ZOOKEEPER_HOME/conf/</span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> zookeeper </tag>
            
            <tag> 集群 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis的工作原理</title>
      <link href="/2018/03/31/mybatis%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2018/03/31/mybatis%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><code>MyBatis</code>应用程序根据XML配置文件创建<code>SqlSessionFactory</code>，<code>SqlSessionFactory</code>在根据配置，配置来源于两个地方，一处是配置文件，一处是<code>Java</code>代码的注解，获取一个<code>SqlSession</code>。<code>SqlSession</code>包含了执行sql所需要的所有方法，可以通过<code>SqlSession</code>实例直接运行映射的<code>sql</code>语句，完成对数据的增删改查和事务提交等，用完之后关闭<code>SqlSession</code>。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hibernate的工作原理</title>
      <link href="/2018/03/29/Hibernate%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2018/03/29/Hibernate%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>1.通过<code>Configuration().configure();</code>//读取并解析<code>hibernate.cfg.xml</code>配置文件</p><p>2.由<code>hibernate.cfg.xml</code>中的<code>&lt;mapping resource=&quot;com/xx/User.hbm.xml&quot;/&gt;</code>读取并解析映射信息</p><a id="more"></a><p>3.通过<code>config.buildSessionFactory();</code> //创建<code>SessionFactory</code></p><p>4.<code>sessionFactory.openSession();</code> //打开<code>Sesssion</code></p><p>5.<code>session.beginTransaction();</code> //创建事务<code>Transation</code></p><p>6.<code>persistent operate</code>持久化操作</p><p>7.<code>session.getTransaction().commit();</code>  //提交事务</p><p>8.关闭<code>Session</code></p><p>9.关闭<code>SesstionFactory</code></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> hibernate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Struts2的工作原理？</title>
      <link href="/2018/03/20/Struts2%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%EF%BC%9F/"/>
      <url>/2018/03/20/Struts2%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>1 客户端初始化一个指向Servlet容器（例如<code>Tomcat</code>）的请求 </p><p>2 这个请求经过一系列的过滤器（<code>Filter</code>）（这些过滤器中有一个叫做<code>ActionContextCleanUp</code>的可选过滤器，这个过滤器对于<code>Struts2</code>和其他框架的集成很有帮助，例如：<code>SiteMesh Plugin</code>） </p><a id="more"></a><p>3 接着<code>FilterDispatcher</code>被调用，<code>FilterDispatcher</code>询问<code>ActionMapper</code>来决定这个请是否需要调用某个<code>Action</code></p><p>4 如果<code>ActionMapper</code>决定需要调用某个<code>Action</code>，<code>FilterDispatcher</code>把请求的处理交给<code>ActionProxy</code></p><p>5 <code>ActionProxy</code>通过<code>Configuration Manager</code>询问框架的配置文件，找到需要调用的<code>Action</code>类 </p><p>6 <code>ActionProxy</code>创建一个<code>ActionInvocation</code>的实例。 </p><p>7 <code>ActionInvocation</code>实例使用命名模式来调用，在调用<code>Action</code>的过程前后，涉及到相关拦截器（<code>Intercepter</code>）的调用。 </p><p>8 一旦<code>Action</code>执行完毕，<code>ActionInvocation</code>负责根据<code>struts.xml</code>中的配置找到对应的返回结果。返回结果通常是（但不总是，也可 能是另外的一个<code>Action</code>链）一个需要被表示的<code>JSP</code>或者<code>FreeMarker</code>的模版。在表示的过程中可以使用<code>Struts2</code>框架中继承的标签。在这个过程中需要涉及到<code>ActionMapper</code></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> struts2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC工作原理？</title>
      <link href="/2018/03/19/SpringMVC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
      <url>/2018/03/19/SpringMVC%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>1、用户发送请求至前端控制器<code>DispatcherServlet</code></p><p>2、<code>DispatcherServlet</code>收到请求调用<code>HandlerMapping</code>处理器映射器。 </p><a id="more"></a><p>3、处理器映射器找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给<code>DispatcherServlet</code>。 </p><p>4、<code>DispatcherServlet</code>调用<code>HandlerAdapter</code>处理器适配器 </p><p>5、<code>HandlerAdapter</code>经过适配调用具体的处理器(<code>Controller</code>，也叫后端控制器)。 </p><p>6、<code>Controller</code>执行完成返回<code>ModelAndView</code></p><p>7、<code>HandlerAdapter</code>将<code>controller</code>执行结果<code>ModelAndView</code>返回给<code>DispatcherServlet</code></p><p>8、<code>DispatcherServlet</code>将<code>ModelAndView</code>传给<code>ViewReslover</code>视图解析器 </p><p>9、<code>ViewReslover</code>解析后返回具体<code>View</code></p><p>10、<code>DispatcherServlet</code>根据<code>View</code>进行渲染视图（即将模型数据填充至视图中）。 </p><p>11、<code>DispatcherServlet</code>响应用户</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springmvc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx企业级rewrite 实战操作</title>
      <link href="/2018/03/13/Nginx%E4%BC%81%E4%B8%9A%E7%BA%A7rewrite%20%E5%AE%9E%E6%88%98%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/03/13/Nginx%E4%BC%81%E4%B8%9A%E7%BA%A7rewrite%20%E5%AE%9E%E6%88%98%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>一、访问<code>http://www.abc.com</code>正常，现在需要访问<code>abc.com</code>，直接跳转到<code>http://www.abc.com</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name abc.com;</span><br><span class="line">access_log off;</span><br><span class="line">rewrite (.+) $scheme://www.$host$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>二、如果你们域名是<code>http://www.abc.com</code>，现在想换一个域名<code>http://www.def.com</code>了，又不想失去之前域名的访问量，需要配置跳转。 首先需要在你的server_name里面把<code>www.abc.com</code>和<code>www.def.cn</code>都写上。 然后做如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">if ($host = &apos;www.abc.com&apos;)</span><br><span class="line">&#123;</span><br><span class="line">rewrite ^/(.*)$ http://www.def.com/$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三、跳转维护页面，比如今天维护，想挂一个维护页面，希望除某些特定的IP地址能正常访问，因为需要测试。其余所以的IP地址都是访问维护页面，这个需求我之前好像写过，但是今天写的有点不一样。在server里面添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">set $rewrite true;</span><br><span class="line">if ($remote_addr = &quot;xxx.xxx.xxx.xxx&quot;) &#123;</span><br><span class="line">set $rewrite false;</span><br><span class="line">&#125;</span><br><span class="line">if ($rewrite = true) &#123;</span><br><span class="line">rewrite (.+) http://www.abc.com/maintenance.html;</span><br><span class="line">&#125;</span><br><span class="line">location = /maintenance.html &#123;</span><br><span class="line">  root /var/vhost;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四、比如现在你的域名是<a href="http://bbs.abc.com，现在将这个域名下面的帖子访问都跳转到http://www.abc.com/bbs，注意跳转后的参数也要保持一致。" target="_blank" rel="noopener">http://bbs.abc.com，现在将这个域名下面的帖子访问都跳转到http://www.abc.com/bbs，注意跳转后的参数也要保持一致。</a> 比如：<code>http://bbs.abc.com/post/addpost/913.shtml</code>跳转到<code>http://www.abc.com/bbs/post/addpost/913.shtml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /post &#123;</span><br><span class="line">rewrite (.+) http://www.abc.com/bbs$1 permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>五、基于uri的跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if ($request_uri ~* ^/note\.php\?product_code=(.*)$) &#123;</span><br><span class="line">rewrite (.*) http://www.abc.com permanent;</span><br><span class="line">&#125;</span><br><span class="line">if ($request_uri ~ ^/forum-(140|141|142|143|144|145|150|151|152|153|154|155|156|157|158|159|200|222|223|224|225|226|227|228)-(\d+).html$) &#123;</span><br><span class="line">rewrite (.*) http://www.abc.com/list permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>六、基于目录下面文件的跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~* /upload/.*\.php$ &#123;</span><br><span class="line">return 404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>七、最普通的url到url跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~* ^/ab/maintain/main.html &#123;</span><br><span class="line">rewrite (.+) http://www.abc.com/maintain/main.html permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>八、目录后的参数保持不变的跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rewrite ^/assets/upload/(.*)$ http://assets.kgc.cn/upload/$1 permanent;</span><br></pre></td></tr></table></figure><p>九、多次匹配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ($request_uri ~ ^/baseuiue(.shtml)|^/zhuanti/baseuiue(.shtml)) &#123;</span><br><span class="line">    rewrite (.+) http://123.abc.cn/zhuanti/baseuiue.shtml permanent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一位Java工程师的阶段性工作总结</title>
      <link href="/2018/03/10/%E4%B8%80%E4%BD%8DJava%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E9%98%B6%E6%AE%B5%E6%80%A7%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
      <url>/2018/03/10/%E4%B8%80%E4%BD%8DJava%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E9%98%B6%E6%AE%B5%E6%80%A7%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="一、技术积累"><a href="#一、技术积累" class="headerlink" title="一、技术积累"></a>一、技术积累</h3><h4 id="（1）代码规范"><a href="#（1）代码规范" class="headerlink" title="（1）代码规范"></a>（1）代码规范</h4><p>1.1.1、通常的模块分布：一般如果你要实现一个web应用，你从后台将数据展示到前端页面，在一个比较大的公司，你少不了跟其他项目有交集（你调用他的接口，他依赖你的接口），这样下来，整个公司有很多个模块，怎么做到很好的联系。回到刚刚的模块分布，你的一个web应用，应当需要分成三个模块：core模块、service模块、web模块。web模块就是展示到页面，后台代码而言主要就controller层了，其他逻辑基本都放在core了，service模块就是一些接口类和参数dto等等，接口的实现类在core模块。这样下来，web模块只需要依赖service模块，同样的其他系统依赖你的接口也仅仅是依赖service模块，然后利用远程调用方式消费你的接口服务。</p><a id="more"></a><p>1.1.2、代码层级结构：针对后台服务项目，一般分为对外接口层、service层、Dao层。Dao层就是与数据库交接的接口层，service层主要调用Dao或者外部系统的接口，复杂的逻辑基本都放在service层；一些方法需要提供给其他模块调用的时候，就封装在对外接口层，只有对外接口层是暴露。这里说的只是层级结构，还有与层级结构无关的，也是需要归类的，比如对外部系统接口方法封装的我们放在一个目录下面，一些常量和工具类等我们放在common目录下面。当然还有其他考虑，尽量让整个模块有层次感，代码才不会太乱，更好的维护。</p><p>1.1.3、总结上面两点：可能不少猿友觉得上面啰嗦又不像代码规范，其实这两点也是代码规范的一部分，主要引导大家往结构清晰好维护的思维方向走，多思考吧。</p><p>1.1.4、对于一些需要异步处理的，不要直接new一个thread，应当使用线程池。使用线程池的时候应当对线程数量大小合理设置，一般最大不超过50个，当然还需要考虑你的IO和CPU，怎么分析网上搜搜吧。</p><p>1.1.5、容器类变量，如果变化比较大且频繁，尽量定义的时候设置初始容量大小，减少扩容带来的消耗。</p><p>1.1.6、分支判断if…else的时候，最常符合的条件处理放在前面。</p><p>1.1.7、对象比较的时候常量放前面，养成好习惯，减少空指针的出现。</p><p>1.1.8、减少synchronized中等待处理的代码，能放在外面就尽量放在外面。</p><p>1.1.9、下面到数据库了，我觉得还是在这里说了好点，一般查询比较慢，很有可能是没有建索引或者索引没用到，多去检查一下。</p><p>1.1.10、两个大表的关联查询，可以使用二次访问数据库替代，先查出A表的数据，利用关联字段再查B表的。不要一味想着一条sql搞定最好。</p><p>1.1.11、坚决避免，查全表数据或者数量大的数据，返回list加载到内存中，一不小心查了100w数据，又查得比较频繁，内存的爆了。有这种风险的改成分页查询。</p><p>1.1.12、不要select *，按需取列。</p><p>1.1.13、多考虑避免事务里面有长连接或者长事务，如果大量这种情况出现占用数据连接，会影响性能。一些无必要的逻辑可以放到事务外执行。</p><p>1.1.14、对字段的加减乘除处理放到sql，严格避免先get处理，然后运算在set到数据库里面，并发情况非常容易导致失真。</p><p>1.1.15、方法里面代码不要太长，注意封装，命名语义化，代码整洁。常挂嘴边的，没放心上，一如既往的给自己埋坑，举个博主的例子，那会刚毕业也是没放心上，最近把我们组长不写代码，一到代码评审我就害怕，检视到有问题的代码，毕业生吧就说这代码以前就是这样写的，问题最终肯定都落我身上，现在感觉代码是自己的孩子，只能有空自己偷偷的优化一下，怕出问题还得非常仔细。</p><h4 id="（2）SQL规范与性能优化"><a href="#（2）SQL规范与性能优化" class="headerlink" title="（2）SQL规范与性能优化"></a>（2）SQL规范与性能优化</h4><p>1.2.1、先提前声明，博主工作用到是MySQL，可能有些场景只针对MySQL。说到SQL优化，一些概念必须要理解，不然死记硬背一两天就忘记了。特别是执行计划的概念。</p><p>1.2.2、什么是执行计划：a.决定如何访问表数据，是否通过索引，是否排序等。b.多表关联是先访问哪个表。c.多表关联时，使用哪种连接方式，不过现在MySQL只有嵌套连接（嵌套循环，顾名思义就是将一个表为出发点，将该表全部记录逐条去遍历另外一张表的记录）。</p><p>1.2.3、SQL执行顺序：a.检查语法是否正确。b.检查表是否存在、权限是否满足等。c.根据统计信息(如data length,rows,index length、索引唯一度)，生成较优的执行计划。d.根据执行计划，进行数据检索、过滤、合并、排序等操作。访问数据时，内存中如存在表数据，则直接进行操作；否则，从磁带读取表数据，放入内存，再进行操作；如内存不足，则内存中较冷数据涮出内存，再从内存中读取数据。</p><p>1.2.4、索引：查询的时候如果使用上了索引，可以提高效率，因为建立了索引后，可以理解为数据字典的结构存储，因此根据条件查询的时候更加高效。下面看一下MySQL常用的索引类型的概念。<br>a．普通索引：在创建普通索引时，不附加任何限制条件。这类索引可以创建在任何数据类型中，其值是否唯一和非空由字段本身的完整性约束条件决定。建立索引以后，查询时可以通过索引进行查询。例如，在student表的stu_id字段上建立一个普通索引。查询记录时，就可以根据该索引进行查询。</p><p>b．唯一性索引:使用UNIQUE参数可以设置索引为唯一性索引。在创建唯一性索引时，限制该索引的值必须是唯一的。例如，在student表的stu_name字段中创建唯一性索引，那么stu_name字段的值就必需是唯一的。通过唯一性索引，可以更快速地确定某条记录。主键就是一种特殊唯一性索引。</p><p>c．单列索引:在表中的单个字段上创建索引。单列索引只根据该字段进行索引。单列索引可以是普通索引，也可以是唯一性索引，还可以是全文索引。只要保证该索引只对应一个字段 即可。</p><p>d．多列索引：多列索引是在表的多个字段上创建一个索引。该索引指向创建时对应的多个字段，可以通过这几个字段进行查询。但是，只有查询条件中使用了这些字段中第一个字段时，索引才会被使用。例如，在表中的id、name和sex字段上建立一个多列索引，那么，只有查询条件使用了id字段时该索引才会被使用。</p><p>e . 全文索引：使用FULLTEXT参数可以设置索引为全文索引。全文索引只能创建在CHAR、VARCHAR或TEXT类型的字段上。查询数据量较大的字符串类型的字段时，使用全文索引可以提高查询速度。例如，student表的information字段是TEXT类型，该字段包含了很多的文字信息。在information字段上建立全文索引后，可以提高查询information字段的速度。MySQL数据库从3.23.23版开始支持全文索引，但只有MyISAM存储引擎支持全文检索。在默认情况下，全文索引的搜索执行方式不区分大小写。但索引的列使用二进制排序后，可以执行区分大小写的全文索引。</p><p>还有空间索引，平时也比较少用。目前只有MyISAM存储引擎支持空间检索。目前博主也只接触过InnoDB存储引擎。</p><p>1.2.5、一般一张表索引不要超过5个，而且避免重复索引，而且也不是建了索引，根据索引字段条件查询，索引就会起作用。</p><p>1.2.6、一般哪些场景会导致索引失效：a.使用like关键字匹配字符串第一个为”%”的场景。b.条件中包含or、in、not in、&lt;&gt;关键字，默认不走索引的。c.访问表上的数据行超出表总记录数30%，变成全表扫描。d.查询条件使用函数在索引列上，或者对索引列进行运算。e.多列索引中，第一个索引列使用范围查询，只能用到部份或无法使用索引。f.多列索引中，第一个查询条件不是最左索引列，上面多列索引概念中也有提到。肯定还有更多的场景，但是博主现在能想到的场景就这些了。</p><p>1.2.7、不能同时使用两个索引，一个过滤数据，一个用于排序（主键除外）。</p><p>1.2.8、DML语句如果使用索引，会导致lock全表；如果使用了非唯一索引，可能只是锁住一定范围。对此，建议更新/删除数据尽量用上索引，如果可以最好用上主键或唯一索引，另外事务要及时提交。</p><p>1.2.9、最后一点，如何看执行计划，分析SQL的性能。这个吧，三言两语说不清楚，直接看其他博主的博文吧：<a href="http://www.cnblogs.com/xiaoboluo768/p/5400990.html。一定要看！！！" target="_blank" rel="noopener">http://www.cnblogs.com/xiaoboluo768/p/5400990.html。一定要看！！！</a></p><h4 id="（3）关于事务的一些建议"><a href="#（3）关于事务的一些建议" class="headerlink" title="（3）关于事务的一些建议"></a>（3）关于事务的一些建议</h4><p>如果没有听过事务这么个概念，网上了解学习一下，先理解一下各个事务类型的含义吧：a.日志记录尽量放在独立事务里面，避免后面的异常发生导致日志丢失。b.上面已经几次提到，尽早提交事务，避免事务过长，因此写代码的时候，一些可以不放到事务的逻辑可以移到外面，长事务看能否拆成两个事务。</p><h4 id="（4）关于数据库连接池"><a href="#（4）关于数据库连接池" class="headerlink" title="（4）关于数据库连接池"></a>（4）关于数据库连接池</h4><p>可能一些猿友都少去注意吧。先来看看一些参数，这里只罗列了博主比较关注的，更多的可以自行查看一下配置。<br>initialSize ： 默认值是 0, 连接池创建连接的初始连接数目。<br>minIdle : 默认是 0, 连接数中最小空闲连接数。<br>maxIdle : 默认是 8 ，连接池中最大空闲连接数。<br>maxActive : 默认值是 8, 连接池中同时可以分派的最大活跃连接数。<br>maxWait : 默认值是无限大，当连接池中连接已经用完了，等待建立一个新连接的最大毫秒数 ( 在抛异常之前 )。<br>validationQuery : 一条 sql 语句，用来验证数据库连接是否正常。这条语句必须是一个查询模式，并至少返回一条数据。一般用“ select 1 ”。<br>minEvictableIdleTimeMilis : 默认值是 1000 * 60 * 30(30 分钟 ) 单位也是毫秒，连接池中连接可空闲的时间。<br>timeBetweenEvictionRunsMilis : 默认值是 -1 ，每隔一段多少毫秒跑一次回收空闲线程的线程。</p><p>对于minEvictableIdleTimeMilis、timeBetweenEvictionRunsMilis这两个参数，timeBetweenEvictionRunsMilis必须大于1且小于minEvictableIdleTimeMilis，建议是minEvictableIdleTimeMilis的五分之一或十分之一。</p><h4 id="（5）对于前端的几点建议"><a href="#（5）对于前端的几点建议" class="headerlink" title="（5）对于前端的几点建议"></a>（5）对于前端的几点建议</h4><p>1.7.1、一些图片压缩后再使用，性能方面提高不小吧（可以使用熊猫图片压缩）。虽然自己前端比较菜，但是估计也有不少猿友跟我一样偶尔需要兼顾前端吧。毕竟刚毕业不久。</p><p>1.7.2、关于移动端页面重构兼容不同屏幕大小的问题，建议doc的fontSize，实时获取屏幕的宽度，然后除以320再乘以16，当然16可以根据自己情况去调。然后其他一些单位尽量用rem，这样无论什么大小的屏幕都等比例缩放。感觉比@media效果好很多。</p><p>关于技术积累这一块，之前罗列的提纲还挺多的，写到后面感觉没什么精力了，有些三言两语似乎说不清楚啊。</p><h3 id="二、工作心得"><a href="#二、工作心得" class="headerlink" title="二、工作心得"></a>二、工作心得</h3><p>（1）沟通协作第一：</p><p>工作中必然少不了团队协作，积极主动去沟通的人做事总是更加靠谱。道理大家都懂。但是我们需要把想法问题，简洁明确的表达给对方。另外总是以沟通的心态面对问题，而不是抱怨。如果觉得上级分配的任务难度太大了，你可以尝试跟他沟通，获取他有很好的建议或解决方案。</p><p>（2）谨慎记录与排漏：</p><p>感觉现在挺经常是开一两个会，测试同时偶尔找你排查一下环境问题，一天下来其实写代码的时间并不多。一些关键点，非常建议提前记录下来，方便接回被打断的思路，同时避免一些逻辑或功能点的遗漏。</p><p>（3）思路清晰与效率：</p><p>建议动手写代码之前，建议先理清思路，关键逻辑，需求细节，这样后面写代码的时候效率比较高，而且质量也比较好。</p><p>（4）主动与多管闲事：</p><p>清楚自己的工作范围，自己心里有个界限，有些属于别人工作范围的事情，可以你提出的建议是好的，但是最好还是在合适的场景和时机提出。</p><p>（5）心态与工作状态：</p><p>程序员，总会有被坑的时候，或者不顺心的时候，尽量尝试控制一下自己的心态。</p><p>（6）可持续发展观看待技术与业务：</p><p>这点是我自己希望做到的。对于责任心而言，或者是说一个优秀的程序员。很多时候并不是完成产品提的需求就好了。多为它着想，代码可维护性和扩展性高不高。一些功能点也可以提出自己的想法，不要总是被动的接受产品的需求，业务功能拓展性好的话，可以减少产品改动需求。</p><h3 id="三、学习方向与职业发展"><a href="#三、学习方向与职业发展" class="headerlink" title="三、学习方向与职业发展"></a>三、学习方向与职业发展</h3><p>（1）先广后深还是先深后广：</p><p>对于博主而言，其实接触的技术点还算比较多的，但是了解的都不深入，个人性格而言，比较偏向于实用驱动，如果在实际使用场景有用到再去深入学习，这样边学边用才能比较集中注意力。像一些同事，他们喜欢把一样东西研究得很深。</p><p>（2）业务经验也应当注重：</p><p>技术人员必然是技术优先，但是等你到了一定工作年限，其实业务经验也是非常重要了。之前领导找我年度工作谈话就有说过他们招高级工程师的时候对业务经验也非常看重，是否有自己独特的见解。相信道理大家都懂，但是平时有没有这样的意识，有没有去做又是另外一方面了。平时也可以多学习业务方面的知识。</p><p>（3）相同的工作年限为什么当过项目经理的人更吃香：</p><p>因为他们对业务理解更加深入，代码质量问题落在他头上，项目的人员协调与时间安排规划，责任越大，思考的问题就越多，遇到的问题处理经验就越丰富。把控能力也比较强。</p><p>（4）怎样能进入学习状态，并且坚持：</p><p>要想集中注意力学习技术，需要安静的环境，需要耐得住寂寞，因此你需要没有人打扰的环境，比如在一个集体居住环境，几个朋友一起住，一般多数回想着去哪玩，朋友在玩游戏，估计也是对你的一种诱惑吧。可以早点到办公室学习或下班学习一段时间再回去。或者选择自己一个人住。</p><p>（5）如何把握住学习的时机：</p><p>学习最能集中注意力的情况是有着比较强的好奇心和求知欲。所以一般一些技术分享或者老员工讨论的问题，可能很多概念知识你都不懂，这时候你就可以去学习了解这些知识。或者你工作中遇到的问题，尽量刨根问底的去弄清楚是什么原因导致的，不要一些老司机帮忙解决了就一了了之。或者是其他同事遇到的问题，你都可以去了解一下。</p><p>（6）你更适合走一条怎样的职业道路：</p><p>刚毕业不久的猿友，一般都是会比较心浮气躁的，对技术求知欲很强，特别是一些高大上的技术，什么大数据、云计算、架构等等，有些偏向于技术研究，有些偏向于业务。大部分程序员可能都会选择偏向于技术研究的，于是乎对偏向业务的不怎么感冒，因此觉得天天做这些东西没什么意思。这时候，静下来分析一下，你到底适合哪种方向。你能否静下心来对技术研究很深入，能否耐得住寂寞。</p><h3 id="四、关于生活"><a href="#四、关于生活" class="headerlink" title="四、关于生活"></a>四、关于生活</h3><p>（1）良好与糟糕的生活状态的区别：</p><p>需要警惕一下自己是否进入了一种糟糕的生活状态，工作上不温不火，似乎现在的技术已经足够用了，完全没有目标没有计划，无法集中注意力学习，日子就这样一天天过去。</p><p>（2）自己的一些期望：</p><p>希望活得更坚定些，保持着一定的求知欲和规划，向成为自己希望成为的人努力吧，包括一些习惯、处事方式等等。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java线程池</title>
      <link href="/2018/03/03/Java%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
      <url>/2018/03/03/Java%E7%BA%BF%E7%A8%8B%E6%B1%A0/</url>
      
        <content type="html"><![CDATA[<ul><li><p>corePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()或者prestartCoreThread()方法，从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，当线程池中的线程数目达到corePoolSize后，就会把到达的任务放到缓存队列当中；</p></li><li><p>maximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；</p></li></ul><a id="more"></a><ul><li><p>keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，keepAliveTime参数也会起作用，直到线程池中的线程数为0；</p></li><li><p>unit：参数keepAliveTime的时间单位，有7种取值，在TimeUnit类中有7种静态属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TimeUnit.DAYS;               //天</span><br><span class="line">TimeUnit.HOURS;             //小时</span><br><span class="line">TimeUnit.MINUTES;           //分钟</span><br><span class="line">TimeUnit.SECONDS;           //秒</span><br><span class="line">TimeUnit.MILLISECONDS;      //毫秒</span><br><span class="line">TimeUnit.MICROSECONDS;      //微妙</span><br><span class="line">TimeUnit.NANOSECONDS;       //纳秒</span><br></pre></td></tr></table></figure></li><li><p>workQueue：一个阻塞队列，用来存储等待执行的任务，这个参数的选择也很重要，会对线程池的运行过程产生重大影响，一般来说，这里的阻塞队列有以下几种选择：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayBlockingQueue;</span><br><span class="line">LinkedBlockingQueue;</span><br><span class="line">SynchronousQueue;</span><br><span class="line">ArrayBlockingQueue和PriorityBlockingQueue使用较少，一般使用LinkedBlockingQueue和Synchronous。线程池的排队策略与BlockingQueue有关。</span><br></pre></td></tr></table></figure></li><li><p>threadFactory：线程工厂，主要用来创建线程；</p></li><li><p>handler：表示当拒绝处理任务时的策略，有以下四种取值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。</span><br><span class="line">ThreadPoolExecutor.DiscardPolicy：也是丢弃任务，但是不抛出异常。</span><br><span class="line">ThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新尝试执行任务（重复此过程）</span><br><span class="line">ThreadPoolExecutor.CallerRunsPolicy：由调用线程处理该任务</span><br></pre></td></tr></table></figure></li></ul><p>继承关系：<br>ThreadPoolExecutor-&gt;AbstractExecutorService-&gt;ExecutorService-&gt;Executor</p><p>　Executor是一个顶层接口，在它里面只声明了一个方法execute(Runnable)，返回值为void，参数为Runnable类型，从字面意思可以理解，就是用来执行传进去的任务的；</p><p>　　然后ExecutorService接口继承了Executor接口，并声明了一些方法：submit、invokeAll、invokeAny以及shutDown等；</p><p>　　抽象类AbstractExecutorService实现了ExecutorService接口，基本实现了ExecutorService中声明的所有方法；</p><p>　　然后ThreadPoolExecutor继承了类AbstractExecutorService。</p><p>在ThreadPoolExecutor类中有几个非常重要的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">execute()</span><br><span class="line">submit()</span><br><span class="line">shutdown()</span><br><span class="line">shutdownNow()</span><br></pre></td></tr></table></figure><p>execute()方法实际上是Executor中声明的方法，在ThreadPoolExecutor进行了具体的实现，这个方法是ThreadPoolExecutor的核心方法，通过这个方法可以向线程池提交一个任务，交由线程池去执行。</p><p>　　submit()方法是在ExecutorService中声明的方法，在AbstractExecutorService就已经有了具体的实现，在ThreadPoolExecutor中并没有对其进行重写，这个方法也是用来向线程池提交任务的，但是它和execute()方法不同，它能够返回任务执行的结果，去看submit()方法的实现，会发现它实际上还是调用的execute()方法，只不过它利用了Future来获取任务执行结果（Future相关内容将在下一篇讲述）。</p><p>　　shutdown()和shutdownNow()是用来关闭线程池的。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 线程池 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java8语法</title>
      <link href="/2018/03/01/Java8%E8%AF%AD%E6%B3%95/"/>
      <url>/2018/03/01/Java8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="filter—-接收Lambda，从流中排除某些元素"><a href="#filter—-接收Lambda，从流中排除某些元素" class="headerlink" title="filter—-接收Lambda，从流中排除某些元素"></a>filter—-接收Lambda，从流中排除某些元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list = Arrays.asList(1,2,3,523,21,55);</span><br><span class="line">Stream&lt;Integer&gt; stream1 = list.stream().filter(x -&gt; x &gt; 10);</span><br><span class="line">stream1.forEach(System.out::println);</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="distinct—-筛选，通过流所所生成元素的hashCode-和equals-去除重复元素"><a href="#distinct—-筛选，通过流所所生成元素的hashCode-和equals-去除重复元素" class="headerlink" title="distinct—-筛选，通过流所所生成元素的hashCode()和equals()去除重复元素"></a>distinct—-筛选，通过流所所生成元素的hashCode()和equals()去除重复元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list2 = Arrays.asList(1,2,3,3,2,4);</span><br><span class="line">Stream&lt;Integer&gt; stream2 = list2.stream().distinct();</span><br><span class="line">stream2.forEach(System.out::println);</span><br></pre></td></tr></table></figure><h4 id="skip—-跳过元素返回一个抛弃了前n个元素的流，若流中元素不满足n个，则返回一个空流，与limit形成互补"><a href="#skip—-跳过元素返回一个抛弃了前n个元素的流，若流中元素不满足n个，则返回一个空流，与limit形成互补" class="headerlink" title="skip—-跳过元素返回一个抛弃了前n个元素的流，若流中元素不满足n个，则返回一个空流，与limit形成互补"></a>skip—-跳过元素返回一个抛弃了前n个元素的流，若流中元素不满足n个，则返回一个空流，与limit形成互补</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list3 = Arrays.asList(1,2,3,523,21,55);</span><br><span class="line">Stream&lt;Integer&gt; stream3 = list3.stream().skip(3);</span><br><span class="line">stream3.forEach(System.out::println);</span><br></pre></td></tr></table></figure><h4 id="limit—-截断流，使其元素不超过给定数量"><a href="#limit—-截断流，使其元素不超过给定数量" class="headerlink" title="limit—-截断流，使其元素不超过给定数量"></a>limit—-截断流，使其元素不超过给定数量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Integer&gt; list4 = Arrays.asList(1,2,3,523,21,55);</span><br><span class="line">Stream&lt;Integer&gt; stream4 = list4.stream().limit(3);</span><br><span class="line">stream4.forEach(System.out::println);</span><br></pre></td></tr></table></figure><h4 id="filter—-接收Lambda，从流中排除某些元素-1"><a href="#filter—-接收Lambda，从流中排除某些元素-1" class="headerlink" title="filter—-接收Lambda，从流中排除某些元素"></a>filter—-接收Lambda，从流中排除某些元素</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//filter()中需要使用断言型接口（Predicate）</span><br><span class="line">List&lt;Integer&gt; list5 = Arrays.asList(1,2,3,523,21,55);</span><br><span class="line">Stream&lt;Integer&gt; stream5 = list5.stream().filter(x -&gt; x &gt; 10);</span><br><span class="line">stream5.forEach(System.out::println);</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">#### map----接收Lambda，将元素转换为其他形式或提取信息时，接收一个函数作为参数，该函数被应用到每个元素上，并将其映射成一个新的元素</span><br></pre></td></tr></table></figure><p>//map()里面使用函数型接口（Function）<br>//集合里的每一个元素都会使用到String.toUpperCase（）方法<br>//它是以aa作为一个元素,bb作为一个元素<br>List<string> list6 = Arrays.asList(“aa”,”bb”,”cc”);<br>Stream<string> stream6 = list6.stream().map(String::toUpperCase);<br>stream6.forEach(System.out::println);</string></string></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### flatMap----接收一个函数作为参数，将流中的每个值都换成另一个流，然后把所有流连接一个流</span><br></pre></td></tr></table></figure><p>List<string> list7 = Arrays.asList(“aa”,”bb”,”cc”);<br>    Stream<string> stream7 = list7.stream().flatMap(l -&gt; {<br>        String[] strings = l.split(“”);<br>        return Arrays.stream(strings);<br>    });<br>    stream7.forEach(System.out::println);</string></string></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### sorted() 自然排序 按照Comparable的方式</span><br></pre></td></tr></table></figure><p>List<string> list8 = Arrays.asList(“aa”,”cc”,”bb”);<br>Stream<string> stream8 = list8.stream().sorted();<br>stream8.forEach(System.out::println);</string></string></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### sorted( Comparator com)定制排序</span><br></pre></td></tr></table></figure><p>List<integer> list9 = Arrays.asList(1,3,2,6,8,3,9);<br>Stream<integer> stream9 = list9.stream().sorted(Integer::compare);<br>stream9.forEach(System.out::println);</integer></integer></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### allMatch----检查是否匹配所有元素</span><br></pre></td></tr></table></figure><p>//allMatch()里面的时断言型接口(Predicate)<br>  List<integer> list10 = Arrays.asList(1,3,2,6,8,3,9);<br>  boolean b10 = list10.stream().allMatch(x -&gt; x &gt; 3);<br>  System.out.println(b10);</integer></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### anyMatch----检查是否有匹配至少一个元素</span><br></pre></td></tr></table></figure><p>//anyMatch()里面的时断言型接口(Predicate)<br>  List<integer> list11 = Arrays.asList(1,3,2,6,8,3,9);<br>  boolean b11 = list11.stream().anyMatch(x -&gt; x &gt; 3);<br>  System.out.println(b11);</integer></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### noneMatch----检查是否没有匹配的元素</span><br></pre></td></tr></table></figure><p>//noneMatch()里面的时断言型接口(Predicate)<br>  List<integer> list12 = Arrays.asList(1,3,2,6,8,3,9);<br>  boolean b12 = list12.stream().noneMatch(x -&gt; x &gt; 3);<br>  System.out.println(b12);</integer></p><pre><code></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> java8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为网站添加计时器</title>
      <link href="/2018/02/22/%E8%AE%A1%E6%97%B6%E5%99%A8%E4%BB%A3%E7%A0%81/"/>
      <url>/2018/02/22/%E8%AE%A1%E6%97%B6%E5%99%A8%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>为网站添加计时器：<br></p><a id="more"></a><p>代码如下：<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&quot;copyright text-muted&quot; id=&quot;count&quot;&gt;&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">  window.setInterval(&apos;counter()&apos;,1000);</span><br><span class="line">  function counter()&#123;</span><br><span class="line">    var date=new Date();</span><br><span class="line">    var startDate=new Date(2016,12,07,0,0,0);</span><br><span class="line">    var time=(date-startDate)/1000;</span><br><span class="line">    var day=Math.floor(time/(24*60*60));</span><br><span class="line">    var hour=Math.floor(time%(24*60*60)/(60*60));</span><br><span class="line">    var minute=Math.floor(time%(24*60*60)%(60*60)/60);</span><br><span class="line">    var second=Math.floor(time%(24*60*60)%(60*60)%60);</span><br><span class="line">    var str=&quot;我的博客已默默运行了&quot; + day + &quot;天&quot; + hour +&quot;时&quot; + minute + &quot;分&quot; + second + &quot;秒&quot;;</span><br><span class="line">    document.getElementById(&apos;count&apos;).innerHTML=str;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 多宿主网络怎么配置？</title>
      <link href="/2018/02/12/Docker%20%E5%A4%9A%E5%AE%BF%E4%B8%BB%E7%BD%91%E7%BB%9C%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE%EF%BC%9F/"/>
      <url>/2018/02/12/Docker%20%E5%A4%9A%E5%AE%BF%E4%B8%BB%E7%BD%91%E7%BB%9C%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>Docker 跨节点容器网络互联，最通用的是使用 overlay 网络。</p><a id="more"></a><p>一代 Swarm 已经不再使用，它要求使用 overlay 网络前先准备好分布式键值库，比如 etcd, consul 或 zookeeper。然后在每个节点的 Docker 引擎中，配置 –cluster-store 和 –cluster-advertise 参数。这样才可以互连。可以参考我写的 LNMP 容器互联例子中的 run1.sh 这个脚本，这个脚本是利用 docker-machine自动建立 Swarm 并且配置好 overlay 的脚本，可以分析其流程。</p><p>现在都在使用二代 Swarm，也就是 Docker Swarm Mode，非常简单，只要 docker swarm init 建立集群，其它节点 docker swarm join 加入集群后，集群内的服务就自动建立了 overlay 网络互联能力。</p><p>需要注意的是，如果是多网卡环境，无论是 docker swarm init 还是 docker swarm join，都不要忘记使用参数 –advertise-addr 指定宣告地址，否则自动选择的地址很可能不是你期望的，从而导致集群互联失败。格式为 –advertise-addr &lt;地址&gt;:&lt;端口&gt;，地址可以是 IP 地址，也可以是网卡接口，比如 eth0。端口默认为 2377，如果不改动可以忽略。</p><p>此外，这是供服务使用的 overlay，因此所有 docker service create 的服务容器可以使用该网络，而 docker run 不可以使用该网络，除非明确该网络为 –attachable。</p><p>关于 overlay 网络的进一步信息，可以参考官网文档：<a href="https://docs.docker.com/engine/userguide/networking/get-started-overlay/" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/networking/get-started-overlay/</a></p><p>虽然默认使用的是 overlay 网络，但这并不是唯一的多宿主互联方案。Docker 内置了一些其它的互联方案，比如效率比较高的 macvlan。如果在局域网络环境下，对 overlay 的额外开销不满意，那么可以考虑 macvlan 以及 ipvlan，这是比较好的方案。<br><a href="https://docs.docker.com/engine/userguide/networking/get-started-macvlan/" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/networking/get-started-macvlan/</a></p><p>此外，还有很多第三方的网络可以用来进行跨宿主互联，可以访问官网对应文档进一步查看：<a href="https://docs.docker.com/engine/extend/legacy_plugins/#/network-plugins" target="_blank" rel="noopener">https://docs.docker.com/engine/extend/legacy_plugins/#/network-plugins</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker迁移数据盘</title>
      <link href="/2018/02/09/Docker%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%98/"/>
      <url>/2018/02/09/Docker%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker</span><br><span class="line"></span><br><span class="line">mv /var/lib/docker /data/docker</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -s /data/docker /var/lib/docker</span><br><span class="line"></span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven</title>
      <link href="/2018/01/22/Maven/"/>
      <url>/2018/01/22/Maven/</url>
      
        <content type="html"><![CDATA[<p>Maven</p><a id="more"></a><p><img src="../../../../images/java/maven.png" alt="avatar"></p><p>```</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让一个容器连接两个网络？</title>
      <link href="/2018/01/12/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8%E8%BF%9E%E6%8E%A5%E4%B8%A4%E4%B8%AA%E7%BD%91%E7%BB%9C%EF%BC%9F/"/>
      <url>/2018/01/12/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8%E8%BF%9E%E6%8E%A5%E4%B8%A4%E4%B8%AA%E7%BD%91%E7%BB%9C%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>如果是使用 docker run，那很不幸，一次只可以连接一个网络，因为 docker run 的 –network 参数只可以出现一次（如果出现多次，最后的会覆盖之前的）。不过容器运行后，可以用命令 docker network connect 连接多个网络。</p><p>假设我们创建了两个网络：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker network create mynet1</span><br><span class="line">$ docker network create mynet2</span><br></pre></td></tr></table></figure><p>然后，我们运行容器，并连接这两个网络。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name web --network mynet1 nginx</span><br><span class="line">$ docker network connect mynet2 web</span><br></pre></td></tr></table></figure><p>但是如果使用 docker-compose 那就没这个问题了。因为实际上，Docker Remote API 是支持一次性指定多个网络的，但是估计是命令行上不方便，所以 docker run 限定为只可以一次连一个。docker-compose 直接就可以将服务的容器连入多个网络，没有问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;2&apos;</span><br><span class="line">services:</span><br><span class="line">    web:</span><br><span class="line">        image: nginx</span><br><span class="line">        networks:</span><br><span class="line">            - mynet1</span><br><span class="line">            - mynet2</span><br><span class="line">networks:</span><br><span class="line">    mynet1:</span><br><span class="line">    mynet2:</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么 -p 后还是无法通过映射端口访问容器里面的服务？</title>
      <link href="/2018/01/10/%E4%B8%BA%E4%BB%80%E4%B9%88%20-p%20%E5%90%8E%E8%BF%98%E6%98%AF%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87%E6%98%A0%E5%B0%84%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE%E5%AE%B9%E5%99%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%9F/"/>
      <url>/2018/01/10/%E4%B8%BA%E4%BB%80%E4%B9%88%20-p%20%E5%90%8E%E8%BF%98%E6%98%AF%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87%E6%98%A0%E5%B0%84%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE%E5%AE%B9%E5%99%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>首先，当然是检查这个 docker 的容器是否启动正常： docker ps、docker top &lt;容器ID&gt;、docker logs &lt;容器ID&gt;、docker exec -it &lt;容器ID&gt; bash等，这是比较常用的排障的命令；如果是 docker-compose 也有其对应的这一组命令，所以排障很容易。</p><a id="more"></a><p>如果确保服务一切正常，甚至在容器里，可以访问到这些服务，docker ps 也显示出了端口映射成功，那么就需要检查防火墙了。</p><p>本机防火墙<br>在 Docker 运行的系统上不应该运行任何防火墙……没错，说你呢，CentOS 的 firewalld 和 Ubuntu 的 ufw 同学。由于 Docker 使用 iptables 规则来进行网络数据流的控制，而那些防火墙总以为只有自己撰写 iptables，从而经常会导致 Docker 设置了一些规则，然后转眼就被 firewalld 或 ufw 给清了，特别是起、停防火墙服务的时候。从而导致 Docker 的网络从外界无法访问。</p><p>为了避免 iptables 的规则干扰，不要在运行 Docker 的服务器上，运行任何防火墙或配置自定义的 iptables 规则，除非你非常清楚你在做什么，并且知道会产生什么后果。另外，关闭防火墙后，记得重启系统，至少是重启 Docker 服务。否则防火墙的起、停、刷新这类行为会导致清空 Docker 设置的网络规则，而导致容器内的网络无法和外部互联。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本文采用Ubuntu16.04 64位操作系统搭建科学上网服务器</title>
      <link href="/2018/01/02/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%91%E5%AD%A6%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2018/01/02/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E7%A7%91%E5%AD%A6%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>本文采用Ubuntu16.04 64位操作系统搭建科学上网服务器</p><h1 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h1><p>搭建自己的翻墙代理首先得需要有自己的服务器，既然翻墙所以服务器尽量选择国外的，本人使用的是Vultr服务器，好处是一旦被封了，可以销毁服务重新创建，【<a href="https://www.vultr.com/?ref=7206361" target="_blank" rel="noopener">点击链接地址</a>】，，<strong>使用此链接地址，首次充值新用户可以得到额外10美元奖励，够你玩几个月，当然我也会有相应奖励，如果你自己都懒得搭建，那么可以通过底部QQ加我好友，向我索要账号</strong>。好了，闲话少说进入正题：</p><a id="more"></a><h1 id="第一步：安装GCC-及pip"><a href="#第一步：安装GCC-及pip" class="headerlink" title="第一步：安装GCC 及pip"></a>第一步：安装GCC 及pip</h1><p>依次执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install build-essential</span><br><span class="line">apt-get install python-pip</span><br></pre></td></tr></table></figure><p>为了在安装代理的时候出现版本问题错误，执行完以上命令，再执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade setuptools</span><br></pre></td></tr></table></figure><h1 id="第二步：安装Python"><a href="#第二步：安装Python" class="headerlink" title="第二步：安装Python"></a>第二步：安装Python</h1><p>首先得保证你的服务器上有Python，且Python版本为2.6或者2.7，如果你服务器已经安装有Python，可使用命令：python –version 查看Python版本</p><p>本人使用的是Python2.7.11，如果符合条件，可略过以下安装步骤：</p><h2 id="（1）、下载Python安装包"><a href="#（1）、下载Python安装包" class="headerlink" title="（1）、下载Python安装包"></a>（1）、下载Python安装包</h2><p>在python 官网上下载2.7 版本的source code 。<a href="https://www.python.org/downloads/release/python-2711/" target="_blank" rel="noopener">传送门</a></p><p>下载完成后，是一个Python-2.7.11.tar.xz；</p><h2 id="（2）、上传Python-2-7-11-tgz"><a href="#（2）、上传Python-2-7-11-tgz" class="headerlink" title="（2）、上传Python-2.7.11.tgz"></a>（2）、上传Python-2.7.11.tgz</h2><p>将Python-2.7.11.tar.xz 上传到你服务器某一目录如：/usr/local/shadowsocket/，当然在终端用wget下载，可省略此步骤；</p><h2 id="（3）、解压Python-2-7-11-tgz"><a href="#（3）、解压Python-2-7-11-tgz" class="headerlink" title="（3）、解压Python-2.7.11.tgz"></a>（3）、解压Python-2.7.11.tgz</h2><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python-2.7.11.tar.xz</span><br></pre></td></tr></table></figure><h2 id="（4）、进入解压目录，依次执行以下命令："><a href="#（4）、进入解压目录，依次执行以下命令：" class="headerlink" title="（4）、进入解压目录，依次执行以下命令："></a>（4）、进入解压目录，依次执行以下命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="（5）、以上步骤执行完，验证是否安装成功："><a href="#（5）、以上步骤执行完，验证是否安装成功：" class="headerlink" title="（5）、以上步骤执行完，验证是否安装成功："></a>（5）、以上步骤执行完，验证是否安装成功：</h2><p>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python –version</span><br></pre></td></tr></table></figure><p>出现上图，则为成功，完成第二步；</p><h1 id="第三步：安装shadowsocks代理"><a href="#第三步：安装shadowsocks代理" class="headerlink" title="第三步：安装shadowsocks代理"></a>第三步：安装shadowsocks代理</h1><h2 id="（1）、安装shadowsocks"><a href="#（1）、安装shadowsocks" class="headerlink" title="（1）、安装shadowsocks"></a>（1）、安装shadowsocks</h2><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><h2 id="配置单用户或者多用户，编写json文件"><a href="#配置单用户或者多用户，编写json文件" class="headerlink" title="配置单用户或者多用户，编写json文件"></a>配置单用户或者多用户，编写json文件</h2><p>执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>单用户配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;你的服务器IP&quot;,</span><br><span class="line">    &quot;server_port&quot;:8388,</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;password&quot;:&quot;设置密码&quot;,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本文不做多用户配置说明，有兴趣的可以自行google。</p><h2 id="（3）、安装m2crypto"><a href="#（3）、安装m2crypto" class="headerlink" title="（3）、安装m2crypto"></a>（3）、安装m2crypto</h2><p>安装m2crypto可以加快一点加密速度，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-m2crypto</span><br></pre></td></tr></table></figure><h2 id="（4）、启动服务"><a href="#（4）、启动服务" class="headerlink" title="（4）、启动服务"></a>（4）、启动服务</h2><p>前台执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json</span><br></pre></td></tr></table></figure><p>后台启动/停止命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /etc/shadowsocks.json -d start</span><br><span class="line">ssserver -c /etc/shadowsocks.json -d stop</span><br></pre></td></tr></table></figure><p>启动后，你就可以科学上网了。<br><br><br>YOUTUBE 1080P 视频无卡顿！</p><h1 id="第四步：配置加速器"><a href="#第四步：配置加速器" class="headerlink" title="第四步：配置加速器"></a>第四步：配置加速器</h1><p>将在之后博文中说明。</p><p>由于工作需要，爬墙是必须的，但请勿作他用，不参与黄赌毒，不发表不正当言论，请自重！<br><br>不明白地方，请留言。</p>]]></content>
      
      
      <categories>
          
          <category> vpn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> vpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven知识点</title>
      <link href="/2018/01/02/Maven%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
      <url>/2018/01/02/Maven%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="指定Maven打包名称"><a href="#指定Maven打包名称" class="headerlink" title="指定Maven打包名称"></a>指定Maven打包名称</h2><p>  在你项目的<code>pom.xml</code>中配置以下节点即可：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;!--maven打包后的名称  --&gt;</span><br><span class="line">  &lt;finalName&gt;your package name&lt;/finalName&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows关闭端口占用</title>
      <link href="/2017/12/28/Windows%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
      <url>/2017/12/28/Windows%E5%85%B3%E9%97%AD%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>Windows关闭端口占用</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -a -o -n</span><br><span class="line">taskkill /F /PID 8316</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量提取文件名字到记事本</title>
      <link href="/2017/12/08/%E6%89%B9%E9%87%8F%E6%8F%90%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97%E5%88%B0%E8%AE%B0%E4%BA%8B%E6%9C%AC%20/"/>
      <url>/2017/12/08/%E6%89%B9%E9%87%8F%E6%8F%90%E5%8F%96%E6%96%87%E4%BB%B6%E5%90%8D%E5%AD%97%E5%88%B0%E8%AE%B0%E4%BA%8B%E6%9C%AC%20/</url>
      
        <content type="html"><![CDATA[<p>批量提取文件名字到记事本</p><a id="more"></a><p>第一步，新建一个<code>txt</code>格式的记事本文件。</p><p>第二步，在记事本文件中输入：<code>DIR *.* /B &gt;LIST.TXT</code></p><p>第三步，将此记事本文件后辍名，由txt改为bat。会弹出重命名对话框，单击“是”。</p>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 批量 </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cron</title>
      <link href="/2017/11/21/Cron/"/>
      <url>/2017/11/21/Cron/</url>
      
        <content type="html"><![CDATA[<p>关于cron表达式（参考资料）：<br>Cron 表达式包括以下 7 个字段：</p><p>秒、分、小时、月内日期、月、周内日期、年（可选字段）<br>特殊字符<br>Cron 触发器利用一系列特殊字符，如下所示：</p><a id="more"></a><p>反斜线（/）字符表示增量值。例如，在秒字段中“5/15”代表从第 5 秒开始，每 15 秒一次。<br>问号（?）字符和字母 L 字符只有在月内日期和周内日期字段中可用。问号表示这个字段不包含具体值。所以，如果指定月内日期，可以在周内日期字段中插入“?”，表示周内日期值无关紧要。字母 L 字符是 last 的缩写。放在月内日期字段中，表示安排在当月最后一天执行。在周内日期字段中，如果“L”单独存在，就等于“7”，否则代表当月内周内日期的最后一个实例。所以“0L”表示安排在当月的最后一个星期日执行。<br>在月内日期字段中的字母（W）字符把执行安排在最靠近指定值的工作日。把“1W”放在月内日期字段中，表示把执行安排在当月的第一个工作日内。<br>井号（#）字符为给定月份指定具体的工作日实例。把“MON#2”放在周内日期字段中，表示把任务安排在当月的第二个星期一。<br>星号（*）字符是通配字符，表示该字段可以接受任何可能的值。<br>字段 允许值 允许的特殊字符<br>秒 0-59 , - * /<br>分 0-59 , - * /<br>小时 0-23 , - * /<br>日期 1-31 , - * ? / L W C<br>月份 1-12 或者 JAN-DEC , - * /<br>星期 1-7 或者 SUN-SAT , - * ? / L C #<br>年（可选） 留空, 1970-2099 , - * / 表达式意义<br>“0 0 12 * * ?” 每天中午12点触发<br>“0 15 10 ? * *” 每天上午10:15触发<br>“0 15 10 * * ?” 每天上午10:15触发<br>“0 15 10 * * ? *” 每天上午10:15触发<br>“0 15 10 * * ? 2005” 2005年的每天上午10:15触发<br>“0 * 14 * * ?” 在每天下午2点到下午2:59期间的每1分钟触发<br>“0 0/5 14 * * ?” 在每天下午2点到下午2:55期间的每5分钟触发<br>“0 0/5 14,18 * * ?” 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发<br>“0 0-5 14 * * ?” 在每天下午2点到下午2:05期间的每1分钟触发<br>“0 10,44 14 ? 3 WED” 每年三月的星期三的下午2:10和2:44触发<br>“0 15 10 ? * MON-FRI” 周一至周五的上午10:15触发<br>“0 15 10 15 * ?” 每月15日上午10:15触发<br>“0 15 10 L * ?” 每月最后一日的上午10:15触发<br>“0 15 10 ? * 6L” 每月的最后一个星期五上午10:15触发<br>“0 15 10 ? * 6L 2002-2005” 2002年至2005年的每月的最后一个星期五上午10:15触发<br>“0 15 10 ? * 6#3” 每月的第三个星期五上午10:15触发<br>每天早上6点<br>0 6 * * *<br>每两个小时<br>0 */2 * * *<br>晚上11点到早上8点之间每两个小时，早上八点<br>0 23-7/2，8 * * *<br>每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点<br>0 11 4 * 1-3<br>1月1日早上4点</p><p>0 4 1 1 *</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容器怎么取宿主机 IP 啊？</title>
      <link href="/2017/11/08/%E5%AE%B9%E5%99%A8%E6%80%8E%E4%B9%88%E5%8F%96%E5%AE%BF%E4%B8%BB%E6%9C%BA%20IP%20%E5%95%8A%EF%BC%9F/"/>
      <url>/2017/11/08/%E5%AE%B9%E5%99%A8%E6%80%8E%E4%B9%88%E5%8F%96%E5%AE%BF%E4%B8%BB%E6%9C%BA%20IP%20%E5%95%8A%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<ul><li>单机环境<br>如果是单机环境，很简单，不必琢磨怎么突破命名空间限制，直接用环境变量送进去即可。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -e HOST_IP=&lt;宿主的IP地址&gt; nginx</span><br></pre></td></tr></table></figure><p>然后容器内直接读取 HOST_IP 环境变量即可。</p><ul><li>集群环境<br>集群环境相对比较复杂，docker service create 中的 -e 以及 –env-file是在服务创建时指定、读取环境变量内容，而不是运行时，因此对于每个节点都是一样的。而且目前不存在 dockerd -e 选项，所以直接使用这些选项达不到我们想要的效果。</li></ul><a id="more"></a><p>不过有变通的办法，可以在宿主上建立一个 /etc/variables 文件（名字随意，这里用这个文件举例）。其内容为：</p><p>HOST_IP=1.2.3.4<br>其中 1.2.3.4 是这个节点的宿主 IP，因此每个节点的 /etc/variables 的内容不同。</p><p>而在启动服务时，指定挂载这个服务端本地文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker service create --name app \</span><br><span class="line">    --mount type=bind,source=/etc/variables,target=/etc/variables:ro \</span><br><span class="line">    myapp</span><br></pre></td></tr></table></figure><p>由于 –mount 是发生于容器运行时，因此所加载的是所运行的服务器的 /etc/variables，里面所包含的也是该服务器的 IP 地址。</p><p>在 myapp 这个镜像的入口脚本加入加载该环境变量文件的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/variables</span><br></pre></td></tr></table></figure><p>这样 app 这个服务容器就会拥有 HOST_IP 环境变量，其值为所运行的宿主 IP。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> ip </tag>
            
            <tag> 宿主机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何修改容器的 /etc/hosts 文件？</title>
      <link href="/2017/10/23/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8%E7%9A%84hosts%20%E6%96%87%E4%BB%B6%EF%BC%9F/"/>
      <url>/2017/10/23/%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%AE%B9%E5%99%A8%E7%9A%84hosts%20%E6%96%87%E4%BB%B6%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>容器内的 /etc/hosts 文件不应该被随意修改，如果必须添加主机名和 IP 地址映射关系，应该在 docker run 时使用 –add-host 参数，或者在 docker-compose.yml 中添加 extra_hosts 项。</p><a id="more"></a><p>不过在用之前，应该再考虑一下真的需要修改 /etc/hosts 么？如果只是为了容器间互相访问，应该建立自定义网络，并使用 Docker 内置的 DNS 服务。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> hosts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么固定容器 IP 地址？每次重启容器都要变化 IP 地址怎么办？</title>
      <link href="/2017/10/15/%E6%80%8E%E4%B9%88%E5%9B%BA%E5%AE%9A%E5%AE%B9%E5%99%A8%20IP%20%E5%9C%B0%E5%9D%80%EF%BC%9F%E6%AF%8F%E6%AC%A1%E9%87%8D%E5%90%AF%E5%AE%B9%E5%99%A8%E9%83%BD%E8%A6%81%E5%8F%98%E5%8C%96%20IP%20%E5%9C%B0%E5%9D%80%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/"/>
      <url>/2017/10/15/%E6%80%8E%E4%B9%88%E5%9B%BA%E5%AE%9A%E5%AE%B9%E5%99%A8%20IP%20%E5%9C%B0%E5%9D%80%EF%BC%9F%E6%AF%8F%E6%AC%A1%E9%87%8D%E5%90%AF%E5%AE%B9%E5%99%A8%E9%83%BD%E8%A6%81%E5%8F%98%E5%8C%96%20IP%20%E5%9C%B0%E5%9D%80%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>一般情况是不需要指定容器 IP 地址的。这不是虚拟主机，而是容器。其地址是供容器间通讯的，容器间则不用 IP 直接通讯，而使用容器名、服务名、网络别名。</p><a id="more"></a><p>为了保持向后兼容，docker run 在不指定 –network 时，所在的网络是 default bridge，在这个网络下，需要使用 –link 参数才可以让两个容器找到对方。</p><p>这是有局限性的，因为这个时候使用的是 /etc/hosts 静态文件来进行的解析，比如一个主机挂了后，重新启动IP可能会改变。虽然说这种改变Docker是可能更新/etc/hosts文件，但是这有诸多问题，可能会因为竞争冒险导致 /etc/hosts 文件损毁，也可能还在运行的容器在取得 /etc/hosts 的解析结果后，不再去监视该文件是否变动。种种原因都可能会导致旧的主机无法通过容器名访问到新的主机。</p><p>参考官网文档：<a href="https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/networking/default_network/dockerlinks/</a></p><p>如果可能不要使用这种过时的方式，而是用下面说的自定义网络的方式。</p><p>而对于新的环境（Docker 1.10以上），应该给容器建立自定义网络，同一个自定义网络中，可以使用对方容器的容器名、服务名、网络别名来找到对方。这个时候帮助进行服务发现的是Docker 内置的DNS。所以，无论容器是否重启、更换IP，内置的DNS都能正确指定到对方的位置。</p><p>参考官网文档：<a href="https://docs.docker.com/engine/userguide/networking/work-with-networks/#linking-containers-in-user-defined-networks" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/networking/work-with-networks/#linking-containers-in-user-defined-networks</a></p><p>建议参考一下我写的 LNMP 的例子：<br><a href="https://coding.net/u/twang2218/p/docker-lnmp/git" target="_blank" rel="noopener">https://coding.net/u/twang2218/p/docker-lnmp/git</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL Server配置</title>
      <link href="/2017/10/11/SQL%20Server%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/10/11/SQL%20Server%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">username=sa</span><br><span class="line">password=root</span><br><span class="line">#driverClassName=net.sourceforge.jtds.jdbc.Driver</span><br><span class="line">driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver</span><br><span class="line">#url=dburl\=jdbc\:jtds\:sqlserver\://localhost\:1433;DatabaseName\=qinviteappn;User\=sa;Password\=root</span><br><span class="line">url=jdbc:sqlserver://localhost:1433;DatabaseName=qinviteappn;User=sa;Password=root</span><br><span class="line"></span><br><span class="line">Class.forName(&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;);</span><br><span class="line">conn = DriverManager.getConnection(&quot;jdbc:sqlserver://localhost:1433;DatabaseName=qinviteappn;User=sa;Password=root&quot;);</span><br></pre></td></tr></table></figure><a id="more"></a><p><img src="../../../../images/java/sqlserver.png" alt="avatar"><br><img src="../../../../images/java/sqlserver2.png" alt="avatar"><br><img src="../../../../images/java/sqlserver3.png" alt="avatar"><br><img src="../../../../images/java/sqlserver4.png" alt="avatar"><br><img src="../../../../images/java/sqlserver5.png" alt="avatar"><br><img src="../../../../images/java/sqlserver6.png" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 常用命令</title>
      <link href="/2017/09/08/Linux%E5%AE%89%E8%A3%85Redis/"/>
      <url>/2017/09/08/Linux%E5%AE%89%E8%A3%85Redis/</url>
      
        <content type="html"><![CDATA[<p>  <code>Redis</code>是一个开源的使用<code>ANSI</code> C语言编写、支持网络、可基于内存亦可持久化的日志型、<code>Key-Value</code>数据库，并提供多种语言的API。</p><p>  下面将介绍如何在<code>linux（此文以ubuntu为准）</code>机器上安装<code>redis</code>。</p><a id="more"></a><h2 id="第一步：下载Redis安装包"><a href="#第一步：下载Redis安装包" class="headerlink" title="第一步：下载Redis安装包"></a>第一步：下载Redis安装包</h2><p>下载<code>Redis</code>安装包：<a href="下载Redis安装包">下载链接</a>，然后上传服务器。或者执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-4.0.2.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/059.png" alt="redis"><br>点击即可下载。</p><h2 id="第二步：解压redis-4-0-2-tar-gz"><a href="#第二步：解压redis-4-0-2-tar-gz" class="headerlink" title="第二步：解压redis-4.0.2.tar.gz"></a>第二步：解压redis-4.0.2.tar.gz</h2><p>解压<code>redis-4.0.2.tar.gz</code> 并且进入解压目录，依次执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis-4.0.2.tar.gz</span><br></pre></td></tr></table></figure><h2 id="第三步：安装gcc编译器"><a href="#第三步：安装gcc编译器" class="headerlink" title="第三步：安装gcc编译器"></a>第三步：安装gcc编译器</h2><p>  <code>GCC</code>是一个用于<code>linux</code>系统下编程的编译器，在安装<code>redis</code>的时候需要<code>GCC</code>去编译。<br>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gcc</span><br><span class="line">或：</span><br><span class="line">apt-get install build-essential</span><br></pre></td></tr></table></figure><p>安装好了<code>GCC</code>，可以执行<code>gcc -v</code>查看版本，如下图：<br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/060.png" alt="gcc"><br>成功之后就可以安装<code>redis</code>了，在解压目录中依次执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h2 id="第四步：修改配置文件"><a href="#第四步：修改配置文件" class="headerlink" title="第四步：修改配置文件"></a>第四步：修改配置文件</h2><p>  在修改配置文件的时候，保险做法就是先备份，那么这里将<code>redis.conf</code>文件（如下图）备份到<code>myredis</code>(我创建在了根目录下)文件夹下，执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf /myredis/</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/061.png" alt="redis"><br>现在我这里来执行<code>vim /myredis/redis.conf</code>来修改<code>redis.conf</code>配置文件，如下图<br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/062.png" alt="redis"></p><p>将<code>daemonize no</code>改为<code>daemonize yes</code>。</p><h2 id="第五步：启动服务"><a href="#第五步：启动服务" class="headerlink" title="第五步：启动服务"></a>第五步：启动服务</h2><p>  <code>linux</code>系统默认安装软件，一般都会安装在<code>/usr/local/bin</code>目录，所以执行<code>cd /usr/local/bin</code>，进入到该目录，如下图：<br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/063.png" alt="redis"></p><p>依次执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-server /myredis/redis.conf</span><br><span class="line">redis-cli -p 6379</span><br></pre></td></tr></table></figure><p>即可启动服务，并且进入交互界面。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门级简易手册</title>
      <link href="/2017/08/22/Docker%E5%85%A5%E9%97%A8%E7%BA%A7%E7%AE%80%E6%98%93%E6%89%8B%E5%86%8C/"/>
      <url>/2017/08/22/Docker%E5%85%A5%E9%97%A8%E7%BA%A7%E7%AE%80%E6%98%93%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker入门级简易手册"><a href="#Docker入门级简易手册" class="headerlink" title="Docker入门级简易手册"></a>Docker入门级简易手册</h1><p>本篇经作为新手入门使用，大神们可以指导小弟修正，不喜勿喷，谢谢</p><p>本篇主要讲解如下几个知识点：</p><ol><li><p>CentOS7与Ubuntu下安装Docker，配置加速器</p></li><li><p>常见Dockerfile命令讲解</p></li><li><p>docker-compo安装与常见命令讲解</p></li><li><p>根据项目如何使用Docker部署应用</p><ol><li>Swarm集群下发布基于LNMP的WordPress应用发布</li><li>NodeJS应用发布</li><li>Flask应用发布</li><li>基于Tomcat定制封装Jenkins镜像</li></ol></li><li><p>搭建私有仓库</p></li><li><p>每次代码写好了都要自己构建觉得麻烦怎么办？</p></li></ol><a id="more"></a><h1 id="Docker入门级简易手册-1"><a href="#Docker入门级简易手册-1" class="headerlink" title="Docker入门级简易手册"></a>Docker入门级简易手册</h1><p>本篇经作为新手入门使用，大神们可以指导小弟修正，不喜勿喷，谢谢</p><p>本篇主要讲解如下几个知识点：</p><ol><li><p>CentOS7与Ubuntu下安装Docker，配置加速器</p></li><li><p>常见Dockerfile命令讲解</p></li><li><p>docker-compo安装与常见命令讲解</p></li><li><p>根据项目如何使用Docker部署应用</p><ol><li>Swarm集群下发布基于LNMP的WordPress应用发布</li><li>NodeJS应用发布</li><li>Flask应用发布</li><li>基于Tomcat定制封装Jenkins镜像</li></ol></li><li><p>搭建私有仓库</p></li><li><p>每次代码写好了都要自己构建觉得麻烦怎么办？</p></li></ol><h2 id="CentOS7与Ubuntu下安装Docker"><a href="#CentOS7与Ubuntu下安装Docker" class="headerlink" title="CentOS7与Ubuntu下安装Docker"></a>CentOS7与Ubuntu下安装Docker</h2><p>​    这里应该有人会有一个疑问，为什么软件包名是docker-ce而不是docker-engine。docker版本在1.13以后有两个版本，分别是ce和ee版本，ce是开源社区办，ee是收费版，所以改了。</p><h3 id="CentOS7"><a href="#CentOS7" class="headerlink" title="CentOS7"></a>CentOS7</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2 curl</span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line">yum -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装指定版本</span></span><br><span class="line">DOCKER_VERSION=17.03.1.ce</span><br><span class="line">yum install docker-engine-selinux-$&#123;DOCKER_VERSION&#125;* docker-engine-$&#123;DOCKER_VERSION&#125;* -y</span><br></pre></td></tr></table></figure><h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove docker docker-engine docker.io -y</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y</span><br><span class="line"></span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">apt-key fingerprint 0EBFCD88</span><br><span class="line"></span><br><span class="line">add-apt-repository "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"</span><br><span class="line"></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">apt-get install docker-ce -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装指定版本</span></span><br><span class="line">DOCKER_VERSION=17.03.1*</span><br><span class="line">apt-get install docker-ce=$&#123;DOCKER_VERSION&#125; -y</span><br></pre></td></tr></table></figure><h3 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h3><p>​    不想申请加速器的朋友可以使用我的，也可以自己去申请阿里云或者Daocloud的加速器。docker版本不同配置文件路径存在差异，具体请查询官网，本篇针对17.*的版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker</span><br><span class="line"></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;registry-mirrors&quot; : [</span><br><span class="line">    &quot;https://i3jtbyvy.mirror.aliyuncs.com&quot;</span><br><span class="line">],</span><br><span class="line">&quot;debug&quot; : true,</span><br><span class="line">&quot;experimental&quot; : true</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="常见Dockerfile命令讲解"><a href="#常见Dockerfile命令讲解" class="headerlink" title="常见Dockerfile命令讲解"></a>常见Dockerfile命令讲解</h2><p>​    Dockerfile简单一点就是描述你这个镜像安装了哪些软件包，有哪些操作，创建了什么东西。有些人喜欢用 <code>docker commit</code> 命令去打包镜像，这样是不好的，首先commit出来的镜像比你使用Dockerfile构建出来的体积大，而且commit出来的镜像属于黑盒镜像，除了制作者，谁都不知道你在里面干了什么，属于不安全的镜像，很少会有人使用，最后就是不便于你最终的管理和更新。所以推荐使用Dockerfile去管理你的镜像，下面将简单介绍Dockerfile常见的指令和注意事项：</p><h3 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a><code>FROM</code></h3><p>​    FROM命令是指定你所使用的基础镜像，一般写在文件开头，对于官方没给出Dockerfile的软件想Docker化，那么引用的镜像一般是<code>debian:jessie</code>、<code>alpine</code>、<code>ubuntu</code>，如果官方已经有了，比如nginx、php、mysql这写，那么基本直接引用即可。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM &lt;image&gt;</span><br><span class="line">FROM &lt;image&gt;:&lt;tag&gt;</span><br><span class="line">FROM &lt;image&gt;:&lt;digest&gt;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">FROM debian:jessie</span><br><span class="line">FROM alpine:3.6</span><br><span class="line">FROM ubuntu:16.04</span><br><span class="line">FROM mysql:5.7</span><br><span class="line">FROM python:2.7</span><br></pre></td></tr></table></figure><h3 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a><code>MAINTAINER</code></h3><p>​    MAINTAINER命令一般是描述这个Dockerfile的作者信息，</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MAINTAINER &lt;name&gt;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">MAINTAINER &quot;MoMo&quot; &lt;95112082@qq.com&gt;</span><br></pre></td></tr></table></figure><h3 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a><code>RUN</code></h3><p>​    运行指定的命令，此命令只有在执行<code>docker build</code>时才会执行，其他情况下不会执行。这时候有很多初学者会以为在写SHELL，那么在一个Dockerfile里面会出现很多不合理的RUN指令，了解过Docker的朋友应该都知道Docker的镜像是分层结构，说白了就是Dockerfile里面一个指令的操作就是一层。比如下面的操作，一条RUN命令包含了更新源缓存，安装openjdk，清理垃圾，这样的好处是最终这一层会很小，假设你分开写，四个命令四个RUN指令，但是只有第二条命令才是你想要的，那么第一条产生的缓存垃圾就不发删除掉。这也算是优化的一部分。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这里只写第一种格式，有兴趣的朋友可以去官网看看其他的方式</span><br><span class="line">RUN &lt;command&gt;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; apt-get install openjdk-8-jdk --no-install-recommends -y \</span><br><span class="line">    &amp;&amp; apt-get clean all \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br></pre></td></tr></table></figure><h3 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a><code>CMD</code></h3><p>​    设置容器启动时要运行的命令只有在你执行 <code>docker run</code> 或者 <code>docker start</code> 命令是才会运行，其他情况下不运行。如果一个Dockerfile里面有多条CMD指令，那么只有文件最后一行的 <code>CMD</code> 指令才会生效，其他的全部没用，还有一点，还有一点 <code>CMD</code> 指令是可以在你执行 <code>docker run</code> 的时候覆盖的。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">CMD [&quot;python&quot;,&quot;flask.py&quot;]</span><br></pre></td></tr></table></figure><h3 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a><code>EXPOSE</code></h3><p>​    设置暴露的容器端口，注意是容器端口。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE port</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">EXPOSE 80</span><br><span class="line">EXPOSE 80 443</span><br></pre></td></tr></table></figure><h3 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a><code>ENV</code></h3><p>​    功能为设置环境变量，此环节变量可以是在构建镜像时使用，也可以在运行中的容器使用。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ENV &lt;key&gt; &lt;value&gt;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">一种写法</span><br><span class="line">ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line"></span><br><span class="line">另一种写法</span><br><span class="line">ENV JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64 \</span><br><span class="line">    CLASSPATH=$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \</span><br><span class="line">    PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br></pre></td></tr></table></figure><h3 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a><code>ADD</code></h3><p>​    复制命令，把本机的文件复制到镜像中，如果dest是目录则会帮你创建出这个目录，如果src是压缩文件会帮你解压出来。当然ADD指令中的src也可以是URL链接，还有另外一个指令（<code>COPY</code>），请注意区别！！！</p><p>​    另外，src部分是是你Dockerfile的相对路径，这个请注意！！！</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ADD &lt;src&gt; &lt;dest&gt;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">ADD nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">ADD app.tar.gz /app/app.tar.gz</span><br></pre></td></tr></table></figure><h3 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a><code>COPY</code></h3><p>​    与ADD指令一样，但是COPY的src部分只能是本地文件，文件路径是Dockerfile的相对路径。如果dest是目录并且目录不存在，会帮你创建，如果是压缩文件不会帮你解压。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COPY &lt;src&gt; &lt;dest&gt;</span><br><span class="line"></span><br><span class="line">COPY app.tar.gz /app/</span><br></pre></td></tr></table></figure><h3 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a><code>ENTRYPOINT</code></h3><p>​    启动时的默认命令，此指令设置的命令不可修改。与CMD是有区别的。此命令在Dockerfile只能有一个，若有多个，则以文件最后一个出现的才生效。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">ENTRYPOINT [&quot;nginx&quot;]</span><br><span class="line">CMD [&quot;-g&quot;,&quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure><p>​    如上，如果执行 <code>docker run -d --name nginx -P nginx</code> 则最终容器内执行的命令是<code>nginx -g daemon off;</code> ，如果你执行的命令是 <code>docker run -d --name nginx -P nginx bash</code> 则最终容器内执行的命令是<code>nginx bash</code> 注意区别，细心体会。</p><h3 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a><code>VOLUME</code></h3><p>​    设置你的卷，在启动容器的时候Docker会在/var/lib/docker的下一级目录下创建一个卷，以保存你在容器中产生的数据。若没有申明则不会创建。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">VOLUME [&quot;/path/to/directory&quot;]</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">VOLUME [&quot;/data&quot;]</span><br><span class="line">VOLUME [&quot;/data&quot;,&quot;/app/etc&quot;]</span><br></pre></td></tr></table></figure><h3 id="USER"><a href="#USER" class="headerlink" title="USER"></a><code>USER</code></h3><p>​    指定容器运行的用户是谁，前提条件，用户必须<strong>存在</strong>。此指令可以在构建镜像是使用或指定容器中进程的运行用户是谁。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">USER daemo</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">USER nginx</span><br></pre></td></tr></table></figure><h3 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a><code>WORKDIR</code></h3><p>​    指定容器中的工作目录，可以在构建时使用，也可以在启动容器时使用，构建使用就是通过 <code>WORKDIR</code> 将当前目录切换到指定的目录中，容器中使用的意思则是在你使用 <code>docker run</code> 命令启动容器时，默认进入的目录是 <code>WORKDIR</code> 指定的，下面的example中我使用环境变量。</p><p>指令语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /path/to/workdir</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line">WORKDIR /usr/local/zookeeper-$&#123;ZOOKEEPER_VERSION&#125;</span><br></pre></td></tr></table></figure><p>以上为常用的Dockerfile指令，详细文档请参考官方文档：<a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/builder/</a></p><h2 id="docker-compose安装与常见命令讲解"><a href="#docker-compose安装与常见命令讲解" class="headerlink" title="docker-compose安装与常见命令讲解"></a>docker-compose安装与常见命令讲解</h2><h3 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker-compose安装"></a>docker-compose安装</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.18.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta">#</span><span class="bash">查看版本</span></span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CentOS:</span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install python-pip -y</span><br><span class="line"></span><br><span class="line">Ubuntu:</span><br><span class="line">apt-get install python-pip -y</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通用命令</span></span><br><span class="line">pip --version</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install -U -i https://pypi.tuna.tsinghua.edu.cn/simple docker-compose</span><br><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h3 id="常见命令讲解"><a href="#常见命令讲解" class="headerlink" title="常见命令讲解"></a>常见命令讲解</h3><h4 id="单机docker-compose模版"><a href="#单机docker-compose模版" class="headerlink" title="单机docker-compose模版"></a>单机docker-compose模版</h4><p>注意nginx、php、mysql、redis这几个容器的网络是怎么通讯的。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义docker-compose版本，有些参数只有高版本才有，底版本没有</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">'3.4'</span></span><br><span class="line"><span class="comment"># 定义服务，可以是一个，也可以是多个</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="comment"># 具体的服务名，其他的服务可以用过这个名字访问</span></span><br><span class="line"><span class="attr">    nginx:</span></span><br><span class="line">    <span class="comment"># 定义这个服务所使用的镜像以及进项版本，若不指定版本默认是latest，生产环境不建议使用latest</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:1.13.6-alpine</span></span><br><span class="line">        <span class="comment"># 定义容器启动后的主机名，其他的服务可以用过这个名字访问</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="comment"># 定义暴露端口，若写成 '80:80/tcp' 的格式则表示指定宿主机的80转发到容器的80，若写成 '80/tcp' 则表示Docker将随机分配一个宿主机端口给容器内的80端口，tcp表示协议类型，也可以是udp</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">80</span><span class="string">:80/tcp</span></span><br><span class="line">        <span class="comment"># 网络定义部分</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line">        <span class="comment"># 定义这个容器运行在哪个虚拟网络里面</span></span><br><span class="line"><span class="attr">            wordpress:</span></span><br><span class="line">            <span class="comment"># 设置这个容器在网络中的别名，可以是一个，可以是多个，其他的服务可以用过这个名字访问</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">nginx</span></span><br><span class="line">        <span class="comment"># 定义卷，可以是卷，也可以是目录，可以设置容器内的权限是什么</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line">        <span class="comment"># 将docker-compose的相对目录下的nginx配置文件挂载到容器内的/etc/nginx/nginx.conf地方去，权限是只读</span></span><br><span class="line">        <span class="comment"># 大致格式：src:dest:mode</span></span><br><span class="line">        <span class="comment"># src: 可以是卷名，宿主机目录等，可以是文件或者目录，若是文件则文件必须存在，否则会是目录的形式挂载</span></span><br><span class="line">        <span class="comment"># dest: 容器内的路径，可以是文件可以是目录，若是文件则文件必须存在，否则会是目录的形式挂载</span></span><br><span class="line">        <span class="comment"># mode: 权限，只读(ro)，可读可写(rw)</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./nginx/nginx.conf:/etc/nginx/nginx.conf:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line">        <span class="comment"># 日志定义</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line">        <span class="comment"># 使用的驱动是什么，官方给出很多方式，具体可以查看官方文档，这里使用的json-file</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line">            <span class="comment"># 定义日志的参数</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line">            <span class="comment"># 设置最大文件数3个，每个文件大小为100MB</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下面的部分我只会将上面没有出现的部分注释出来，有的部分不做说明</span></span><br><span class="line"><span class="attr">    wordpress:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">wordpress:4.9.1-php7.1-fpm-alpine</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">php</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            wordpress:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">wordpress</span></span><br><span class="line">        <span class="comment"># 环境变量设置，key=value</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_HOST=mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_USER=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_PASSWORD=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_NAME=xbclub</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_TABLE_PREFIX=wp_</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">    mysql:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">mysql:5.7.20</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            wordpress:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./mysql:/var/lib/mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">    redis:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">redis:4.0.6</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            wordpress:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">./redis:/data:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="comment"># 定义这个compose文件中使用的网络</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="comment"># 网络名称，和上文中的wordpress一直，这里注意不是上文中出现的wordpress这个服务，而是是网络！！！</span></span><br><span class="line"><span class="attr">    wordpress:</span></span><br><span class="line">    <span class="comment"># 是否是外部网络，这里可以理解为如果是外部网络那么网络的名字就叫wordpress，这样方便其他的服务接入到这个网络，如果不是，在你使用docker-compose up -d 命令的时候他会以你当前的文件夹的名字加上这里定义的网络名作为你这个compose的网络。比如我的这个compose文件在test下面，如果external为true，那么你需要手动创建这个网络然后去指定命令启动这个compose；如果为flase则网络的名字将会以test_wordpress出现在你的docker network ls中。具体可以自己去试一下就知道大概是什么意思了。</span></span><br><span class="line"><span class="attr">        external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="集群docker-compose模版"><a href="#集群docker-compose模版" class="headerlink" title="集群docker-compose模版"></a>集群docker-compose模版</h4><p>以下文件中将只会备注单机版中没有说明的部分。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.4'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    nginx:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:1.13.6-alpine</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">3000</span><span class="string">:80/tcp</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/xbclub/nginx/nginx.conf:/etc/nginx/nginx.conf:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/xbclub/www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line">        <span class="comment"># 定义你这个服务的运行方式</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line">        <span class="comment"># 模式定义，主要两种，全局模式和副本模式(自己翻译的)，全局模式将会在所有的Swarm节点上运行一个实例，副本模式则指定运行你在replicas指定的个数。</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">3</span></span><br><span class="line">            <span class="comment"># 服务的运行规则，下面这部分的意识是“这个Nginx服务将只会匹配集群中的工作节点，但是主机名不是‘Docker-Swarm-MySQL’，‘Docker-Swarm-Redis’，‘Docker-Swarm-NFS’的节点上运行这个Nginx服务”。下面的部分基本大同小异，这里就不啰嗦了。</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-NFS</span></span><br><span class="line"><span class="attr">    wordpress:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">wordpress:4.9.1-php7.1-fpm-alpine</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">php</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_HOST=mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_USER=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_PASSWORD=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_NAME=xbclub</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_TABLE_PREFIX=wp_</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/xbclub/www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/xbclub/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-NFS</span></span><br><span class="line"><span class="attr">    mysql:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">mysql:5.7.20</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/mysql/xbclub:/var/lib/mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">    redis:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">redis:4.0.6</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/redis/xbclub:/data:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="comment"># 这里需要说明，集群环境下你需要执行“docker network create --driver overlay NetworkName”命令创建，网络的SCOPE部分显示的是Swarm才是对的。</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">    xbclub:</span></span><br><span class="line"><span class="attr">        external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这里我只是把我常用的贴出来加以说明，如果各位有想要补充的可以告诉我，我在加上去，详细介绍可以看官网</p><p><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener">https://docs.docker.com/compose/compose-file/</a></p><h2 id="根据项目如何使用Docker部署应用"><a href="#根据项目如何使用Docker部署应用" class="headerlink" title="根据项目如何使用Docker部署应用"></a>根据项目如何使用Docker部署应用</h2><h3 id="Swarm集群下发布基于LRNMP的WordPress应用发布"><a href="#Swarm集群下发布基于LRNMP的WordPress应用发布" class="headerlink" title="Swarm集群下发布基于LRNMP的WordPress应用发布"></a>Swarm集群下发布基于LRNMP的WordPress应用发布</h3><p>​    本实例，默认你已经装好系统，装好Docker并创建好Swarm集群。</p><p>​    集群约定，对于无状态应用如Nginx，WordPress我们使用NFS去实现Web站点的数据保存以及共享服务以保证所有容器（Nginx、WordPress）数据一致性问题，MySQL数据库我将指定单台主机去实现MySQL数据库功能，数据库目录将存放在所在宿主机上，那么存在一个问题，MySQL高可用如何去实现，这里可以基于MySQL的架构去实现数据库这块的高可用性本篇不讨论如何实现。</p><p>应用目录结构：</p><p>站点在NFS主目录位置：/nfs/lnmp</p><p>站点目录：/nfs/lnmp/www</p><p>Nginx配置文件目录：/nfs/lnmp/nginx</p><p>WordPress配合文件目录：/nfs/lnmp/php</p><p>Redis数据目录（Docker-Swarm-Redis主机下）：/redis/lnmp</p><p>MySQL数据目录（Docker-Swarm-MySQL主机下）：/mysql/lnmp</p><p>镜像相关文档：</p><p>Redi：<a href="https://hub.docker.com/_/redis/" target="_blank" rel="noopener">https://hub.docker.com/_/redis/</a></p><p>Nginx：<a href="https://hub.docker.com/_/nginx/" target="_blank" rel="noopener">https://hub.docker.com/_/nginx/</a></p><p>WordPress：<a href="https://hub.docker.com/_/wordpress/" target="_blank" rel="noopener">https://hub.docker.com/_/wordpress/</a></p><p>MySQL：<a href="https://hub.docker.com/_/mysql/" target="_blank" rel="noopener">https://hub.docker.com/_/mysql/</a></p><p>集群节点清单：</p><table><thead><tr><th>主机名</th><th align="center">节点作用</th><th align="right">运行的容器</th></tr></thead><tbody><tr><td>Docker-Swarm-MySQL</td><td align="center">MySQL节点，只跑MySQL不跑其他的应用</td><td align="right">MySQL</td></tr><tr><td>Docker-Swarm-Redis</td><td align="center">Redis节点，只跑Redis不跑其他的应用</td><td align="right">Redis</td></tr><tr><td>Docker-Swarm-NFS</td><td align="center">NFS节点，只用于数据共享，不运行任何应用</td><td align="right">N/A</td></tr><tr><td>Docker-Swarm-Master01</td><td align="center">Swarm集群管理节点</td><td align="right">N/A</td></tr><tr><td>Docker-Swarm-Node01</td><td align="center">Swarm集群工作节点</td><td align="right">Nginx、WordPress</td></tr><tr><td>Docker-Swarm-Node02</td><td align="center">Swarm集群工作节点</td><td align="right">Nginx、WordPress</td></tr></tbody></table><p>准备编排文件，内容如下（docker-compose.yaml）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.4'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    nginx:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">nginx:1.13.6-alpine</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">3000</span><span class="string">:80/tcp</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/lnmp/nginx/nginx.conf:/etc/nginx/nginx.conf:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/lnmp/www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-NFS</span></span><br><span class="line"><span class="attr">    wordpress:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">wordpress:4.9.1-php7.1-fpm-alpine</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">php</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_HOST=mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_USER=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_PASSWORD=root</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_DB_NAME=xbclub</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">WORDPRESS_TABLE_PREFIX=wp_</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/lnmp/www:/var/www/html:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/nfs/lnmp/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:ro</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">worker</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">!=</span> <span class="string">Docker-Swarm-NFS</span></span><br><span class="line"><span class="attr">    mysql:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">mysql:5.7.20</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/mysql/lnmp:/var/lib/mysql</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">Docker-Swarm-MySQL</span></span><br><span class="line"><span class="attr">        logging:</span></span><br><span class="line"><span class="attr">            driver:</span> <span class="string">json-file</span></span><br><span class="line"><span class="attr">            options:</span></span><br><span class="line"><span class="attr">                max-file:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">                max-size:</span> <span class="number">100</span><span class="string">m</span></span><br><span class="line"><span class="attr">    redis:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">redis:4.0.6</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            xbclub:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/redis/lnmp:/data:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro</span></span><br><span class="line"><span class="attr">        deploy:</span></span><br><span class="line"><span class="attr">            mode:</span> <span class="string">replicated</span></span><br><span class="line"><span class="attr">            replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">            placement:</span></span><br><span class="line"><span class="attr">                constraints:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">node.hostname</span> <span class="string">==</span> <span class="string">Docker-Swarm-Redis</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">    xbclub:</span></span><br><span class="line"><span class="attr">        external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>Nginx配置文件（nginx.conf）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">user  nginx nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">worker_rlimit_nofile 51200;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 51200;</span><br><span class="line">    multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;&#123;&quot;remote_addr&quot;:&quot;$remote_addr&quot;,&apos;</span><br><span class="line">                      &apos;&quot;http_x_forwarded_for&quot;:&quot;$http_x_forwarded_for&quot;,&apos;</span><br><span class="line">                      &apos;&quot;remote_user&quot;:&quot;$remote_user&quot;,&apos;</span><br><span class="line">                      &apos;&quot;time_local&quot;:&quot;$time_local&quot;,&apos;</span><br><span class="line">                      &apos;&quot;request&quot;:&quot;$request&quot;,&apos;</span><br><span class="line">                      &apos;&quot;status&quot;:&quot;$status&quot;,&apos;</span><br><span class="line">                      &apos;&quot;request_time&quot;:&quot;$request_time&quot;,&apos;</span><br><span class="line">                      &apos;&quot;body_bytes_sent&quot;:&quot;$body_bytes_sent&quot;,&apos;</span><br><span class="line">                      &apos;&quot;http_referer&quot;:&quot;$http_referer&quot;,&apos;</span><br><span class="line">                      &apos;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;&#125;&apos;;</span><br><span class="line"></span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    large_client_header_buffers 4 32k;</span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line"></span><br><span class="line">    sendfile   on;</span><br><span class="line">    tcp_nopush on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout 60;</span><br><span class="line"></span><br><span class="line">    tcp_nodelay on;</span><br><span class="line"></span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 256k;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied   expired no-cache no-store private auth;</span><br><span class="line">    gzip_disable   &quot;MSIE [1-6]\.&quot;;</span><br><span class="line"></span><br><span class="line">    server_tokens off;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name _;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        location / &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.example.com ;</span><br><span class="line">        server_name _;</span><br><span class="line">        index index.html index.htm index.php default.html default.htm default.php;</span><br><span class="line">        root  /var/www/html;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri $uri/ /index.php?$args;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # Add trailing slash to */wp-admin requests.</span><br><span class="line">        rewrite /wp-admin$ $scheme://$host$uri/ permanent;</span><br><span class="line"></span><br><span class="line">        # Deny access to PHP files in specific directory</span><br><span class="line">        #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ &#123; deny all; &#125;</span><br><span class="line"></span><br><span class="line">        location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">          try_files $uri =404;</span><br><span class="line">          fastcgi_pass  wordpress:9000;</span><br><span class="line">          fastcgi_index index.php;</span><br><span class="line">          include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /.well-known &#123;</span><br><span class="line">            allow all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\. &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WordPress配置文件（uploads.ini）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">file_uploads = On</span><br><span class="line">memory_limit = 64M</span><br><span class="line">upload_max_filesize = 64M</span><br><span class="line">post_max_size = 64M</span><br><span class="line">max_execution_time = 600</span><br></pre></td></tr></table></figure><p>本实例项目地址：<a href="https://github.com/buxiaomo/docker-compose/tree/master/wordpress" target="_blank" rel="noopener">https://github.com/buxiaomo/docker-compose/tree/master/wordpress</a></p><p>总结：</p><p>本实例我们直接使用的是官方的镜像，没有做定制操作，原因如下：</p><p>1、不要重复造轮子，官方有镜像尽量使用官方的镜像不要自己构建</p><p>2、官方镜像有人维护，不需要自己维护，较少成本</p><p>3、官方镜像基本可以满足大部分应用需求，所以基本不需要进行定制化，如果需要定制化可以直接使用FROM BASEIMAGE去做定制化，而不是从头再来。</p><h3 id="NodeJS应用发布"><a href="#NodeJS应用发布" class="headerlink" title="NodeJS应用发布"></a>NodeJS应用发布</h3><p>​    针对自己写Dockerfile构将APP镜像，首先需要有一点，你的APP必须可以前台运行！！！</p><p>​    由于官方有镜像，我们就直接引用即可，不需要自己去构建NodeJS的镜像，这里我一一个NodeJS的WebUI去实现镜像封装以及运行。对于NodeJS应用，大概分为两部分，下载依赖包，运行分为，这里可以更具实际情况决定Dockerfile如何编写，理论上依赖包只需要下载一次就行了，不需要每次运行分为都去下载镜像包，那么针对这种情况可以在构建的时候把依赖包一起打包到镜像中，当然，将依赖包打包到镜像中构建出来的镜像会有点大，但是好处就是启动服务的时候不需要下载依赖包，启动时间会很快，适合离线环境；一种是在启动的时候去下载依赖包，这样的话镜像会小一点，但是启动时会去下载依赖包，启动时间会比较长，具体方式可以自己选。下面简要说一下步骤：</p><p>编写Dockerfile内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">FROM node:9.3.0</span><br><span class="line"></span><br><span class="line">ADD app /app/</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">RUN npm i</span><br><span class="line"></span><br><span class="line">EXPOST 7001</span><br><span class="line"></span><br><span class="line">CMD [&quot;npm&quot;,&quot;run&quot;,&quot;dev&quot;]</span><br></pre></td></tr></table></figure><p>进入Dockerfile所在目录执行<code>docker build -t=nodejs .</code>构建镜像</p><p>待补充</p><h3 id="Flask应用发布"><a href="#Flask应用发布" class="headerlink" title="Flask应用发布"></a>Flask应用发布</h3><p>项目代码：<a href="https://github.com/buxiaomo/dockerfile/tree/master/ssserverweb" target="_blank" rel="noopener">https://github.com/buxiaomo/dockerfile/tree/master/ssserverweb</a></p><p>​    应用简介：应用通过Docker Engine API对基于Docker Swarm提供的SS服务管理用户添加删除和添加节点的小demo项目，本应用通过Swarm实现。Docker化应用类似于NodeJS。通过阿里云的域名API配置主机IP与域名的关系，本篇只针对应用如何使用Docker部署，代码实现不在本篇讨论范围这里不详细说明。</p><p>申明：代码可能存在逻辑问题，不要纠结这个，本篇只讨论如何容器化应用。</p><p>可以直接看GitHub的代码查看详情。准备Dockerfile，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FROM python:2.7.14</span><br><span class="line"></span><br><span class="line">ADD . /app</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">RUN pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line">ENV ALIYUN_ID NULL</span><br><span class="line">ENV ALIYUN_Secret NULL</span><br><span class="line">ENV ALIYUN_RegionId cn-hangzhou</span><br><span class="line"></span><br><span class="line">ENV Domain NULL</span><br><span class="line">ENV ManagerIP NULL</span><br><span class="line"></span><br><span class="line">EXPOSE 8000</span><br><span class="line"></span><br><span class="line">CMD [&quot;python&quot;,&quot;ssserver.py&quot;]</span><br></pre></td></tr></table></figure><p>进入Dockerfile所在目录执行<code>docker build -t=ssserverweb .</code>构建镜像</p><p>启动容器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name ssserverweb</span><br><span class="line">-p 8080:8000 \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock:ro \</span><br><span class="line">-e ALIYUN_ID=*** \</span><br><span class="line">-e ManagerIP=*** \</span><br><span class="line">-e ALIYUN_Secret=**** \</span><br><span class="line">-e DomainName=www.example.com \</span><br><span class="line">ssserverweb:latest</span><br></pre></td></tr></table></figure><p>查看服务，访问链接：<a href="http://IP:8080" target="_blank" rel="noopener">http://IP:8080</a> 即可访问到访问页面</p><h3 id="基于Tomcat封装Jenkins镜像"><a href="#基于Tomcat封装Jenkins镜像" class="headerlink" title="基于Tomcat封装Jenkins镜像"></a>基于Tomcat封装Jenkins镜像</h3><p>待补充</p><h2 id="搭建私有仓库"><a href="#搭建私有仓库" class="headerlink" title="搭建私有仓库"></a>搭建私有仓库</h2><h3 id="无SSL私有仓库搭建"><a href="#无SSL私有仓库搭建" class="headerlink" title="无SSL私有仓库搭建"></a>无SSL私有仓库搭建</h3><p>准备docker-compose.yml文件，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    registry:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">registry:2.6.1</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">registry</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">80</span><span class="string">:5000/tcp</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            registry:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">registry</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/var/lib/registry:/var/lib/registry:rw</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">    registry:</span></span><br><span class="line"><span class="attr">        external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>启动registry容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker-compose -p my up -d</span><br></pre></td></tr></table></figure><p>查看运行的私有仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                          NAMES</span><br><span class="line">e1b3c0551d05        registry:2.6.1      "/entrypoint.sh /e..."   4 seconds ago       Up 3 seconds        0.0.0.0:80-&gt;5000/tcp                           my_registry_1</span><br></pre></td></tr></table></figure><p>测试私有仓库，假设我的私有仓库的IP地址为：192.168.0.10</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# curl http://192.168.0.10/v2/_catalog</span><br><span class="line">&#123;&quot;repositories&quot;:[]&#125;</span><br></pre></td></tr></table></figure><p>PUSH镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker tag nginx:latest 192.168.0.10/my/nginx:latest</span><br><span class="line">root@registry:~# docker push 192.168.0.10/my/nginx:latest</span><br><span class="line">The push refers to a repository [192.168.0.10/my/nginx]</span><br><span class="line">Get https://192.168.0.10/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure><p>上面的问题是因为你没事使用HTTPS，编辑docker配置文件即可，注意文件格式是JSON</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"># ------------增加的部分--------------</span><br><span class="line">    "insecure-registries" : [</span><br><span class="line">        <span class="string">"192.168.0.10"</span></span><br><span class="line">    ],</span><br><span class="line"># ----------------------------------</span><br><span class="line">    "storage-driver": "overlay2",</span><br><span class="line">    "registry-mirrors" : [</span><br><span class="line">        <span class="string">"https://i3jtbyvy.mirror.aliyuncs.com"</span></span><br><span class="line">    ],</span><br><span class="line">    "debug" : true,</span><br><span class="line">    "experimental" : true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次PUSH镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker push 192.168.0.10/my/nginx:latest</span><br><span class="line">The push refers to a repository [192.168.0.10/my/nginx]</span><br><span class="line">352a1fdf8adb: Pushed</span><br><span class="line">8dfa3865d14e: Pushed</span><br><span class="line">8a22ff826675: Pushing [==&gt;                                                ]  4.309MB/103.6MB</span><br><span class="line">676c685b0f6f: Pushed</span><br><span class="line">e27a10675c56: Pushing [=&gt;                                                 ]  2.696MB/100.1MB</span><br></pre></td></tr></table></figure><h3 id="有SSL私有仓库搭建"><a href="#有SSL私有仓库搭建" class="headerlink" title="有SSL私有仓库搭建"></a>有SSL私有仓库搭建</h3><p>准备证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /home/registry</span><br><span class="line">cd /home/registry</span><br><span class="line">HOSTNAME=hub.xmitd.com</span><br><span class="line">openssl req -newkey rsa:4096 -nodes -sha256 -keyout $&#123;HOSTNAME&#125;.key -x509 -days 365 -out $&#123;HOSTNAME&#125;.crt</span><br></pre></td></tr></table></figure><p>准备docker-compose.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    registry:</span></span><br><span class="line"><span class="attr">        image:</span> <span class="attr">registry:2.6.1</span></span><br><span class="line"><span class="attr">        hostname:</span> <span class="string">registry</span></span><br><span class="line"><span class="attr">        ports:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="number">443</span><span class="string">:5000/tcp</span></span><br><span class="line"><span class="attr">        networks:</span></span><br><span class="line"><span class="attr">            registry:</span></span><br><span class="line"><span class="attr">                aliases:</span></span><br><span class="line"><span class="bullet">                    -</span> <span class="string">registry</span></span><br><span class="line"><span class="attr">        volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/var/lib/registry:/var/lib/registry:rw</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/home/registry:/certs</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">REGISTRY_HTTP_TLS_KEY=/certs/hub.xmitd.com.key</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">REGISTRY_HTTP_TLS_CERTIFICATE=/certs/hub.xmitd.com.crt</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">    registry:</span></span><br><span class="line"><span class="attr">        external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>启动registry容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker-compose -p my up -d</span><br></pre></td></tr></table></figure><p>查看运行的私有仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                                          NAMES</span><br><span class="line">a58bb9aa30c0        registry:2.6.1            "/entrypoint.sh /e..."   2 seconds ago       Up 2 seconds        0.0.0.0:443-&gt;5000/tcp                          my_registry_1</span><br></pre></td></tr></table></figure><p>测试私有仓库，假设我的私有仓库的IP地址为：192.168.0.10</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@registry:~# curl -k https://192.168.0.10/v2/_catalog</span><br><span class="line">&#123;"repositories":[]&#125;</span><br></pre></td></tr></table></figure><p>客户端配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/docker/certs.d/hub.xmitd.com</span><br><span class="line">cp /home/registry/hub.xmitd.com.crt /etc/docker/certs.d/hub.xmitd.com/</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>未完待补充</p><h2 id="每次代码写好了都要自己构建觉得麻烦怎么办？"><a href="#每次代码写好了都要自己构建觉得麻烦怎么办？" class="headerlink" title="每次代码写好了都要自己构建觉得麻烦怎么办？"></a>每次代码写好了都要自己构建觉得麻烦怎么办？</h2><p>1、可以结合GitHub与Dockerhub做到持续构建。</p><p>2、使用GitHub代码托管与daocloud的公有云服务，构建速度不错，比Dockerhub快，不用等太久。</p><p>3、Jenkins + github/Gitlab（自己动手丰衣足食）</p><p>摘自陌陌<br>在线版：<a href="https://github.com/buxiaomo/MarkdownBooks" target="_blank" rel="noopener">https://github.com/buxiaomo/MarkdownBooks</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据容器、数据卷、命名卷、匿名卷、挂载目录这些都有什么区别？</title>
      <link href="/2017/08/10/%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E3%80%81%E6%95%B0%E6%8D%AE%E5%8D%B7%E3%80%81%E5%91%BD%E5%90%8D%E5%8D%B7%E3%80%81%E5%8C%BF%E5%90%8D%E5%8D%B7%E3%80%81%E6%8C%82%E8%BD%BD%E7%9B%AE%E5%BD%95%E8%BF%99%E4%BA%9B%E9%83%BD%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2017/08/10/%E6%95%B0%E6%8D%AE%E5%AE%B9%E5%99%A8%E3%80%81%E6%95%B0%E6%8D%AE%E5%8D%B7%E3%80%81%E5%91%BD%E5%90%8D%E5%8D%B7%E3%80%81%E5%8C%BF%E5%90%8D%E5%8D%B7%E3%80%81%E6%8C%82%E8%BD%BD%E7%9B%AE%E5%BD%95%E8%BF%99%E4%BA%9B%E9%83%BD%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>首先，挂载分为挂载本地宿主目录 和 挂载数据卷(<code>Volume</code>)。而数据卷又分为匿名数据卷和命名数据卷。</p><p>绑定宿主目录的概念很容易理解，就是将宿主目录绑定到容器中的某个目录位置。这样容器可以直接访问宿主目录的文件。其形式是</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -v /var/www:/app nginx</span><br></pre></td></tr></table></figure><p>这里注意到 -v 的参数中，前半部分是绝对路径。在 <code>docker run</code> 中必须是绝对路径，而在 <code>docker-compose</code> 中，可以是相对路径，因为 <code>docker-compose</code> 会帮你补全路径。</p><p>另一种形式是使用 <code>Docker Volume</code>，也就是数据卷。这是很多看古董书的人不了解的概念，不要跟数据容器（<code>Data Container</code>）弄混。数据卷是 <code>Docker</code>引擎维护的存储方式，使用 <code>docker volume create</code> 命令创建，可以利用卷驱动支持多种存储方案。其默认的驱动为 <code>local</code>，也就是本地卷驱动。本地驱动支持命名卷和匿名卷。</p><p>顾名思义，命名卷就是有名字的卷，使用 <code>docker volume create --name xxx</code> 形式创建并命名的卷；而匿名卷就是没名字的卷，一般是 <code>docker run -v /data</code> 这种不指定卷名的时候所产生，或者 <code>Dockerfile</code>里面的定义直接使用的。</p><p>有名字的卷，在用过一次后，以后挂载容器的时候还可以使用，因为有名字可以指定。所以一般需要保存的数据使用命名卷保存。</p><p>而匿名卷则是随着容器建立而建立，随着容器消亡而淹没于卷列表中（对于 <code>docker run</code> 匿名卷不会被自动删除）。对于二代 <code>Swarm</code>服务而言，匿名卷会随着服务删除而自动删除。 因此匿名卷只存放无关紧要的临时数据，随着容器消亡，这些数据将失去存在的意义。</p><p>此外，还有一个叫数据容器 (<code>Data Container</code>) 的概念，也就是使用 <code>--volumes-from</code> 的东西。这早就不用了，如果看了书还在说这种方式，那说明书已经过时了。按照今天的理解，这类数据容器，无非就是挂了个匿名卷的容器罢了。</p><p>在 <code>Dockerfile</code>中定义的挂载，是指 匿名数据卷。<code>Dockerfile</code>中指定 <code>VOLUME</code>的目的，只是为了将某个路径确定为卷。</p><p>我们知道，按照最佳实践的要求，不应该在容器存储层内进行数据写入操作，所有写入应该使用卷。如果定制镜像的时候，就可以确定某些目录会发生频繁大量的读写操作，那么为了避免在运行时由于用户疏忽而忘记指定卷，导致容器发生存储层写入的问题，就可以在 <code>Dockerfile</code>中使用 <code>VOLUME</code>来指定某些目录为匿名卷。这样即使用户忘记了指定卷，也不会产生不良的后果。</p><p>这个设置可以在运行时覆盖。通过 <code>docker run</code> 的 <code>-v</code> 参数或者 <code>docker-compose.yml</code> 的 <code>volumes</code>指定。使用命名卷的好处是可以复用，其它容器可以通过这个命名数据卷的名字来指定挂载，共享其内容（不过要注意并发访问的竞争问题）。</p><p>比如，<code>Dockerfile</code>中说 <code>VOLUME /data</code>，那么如果直接 <code>docker run</code>，其 <code>/data</code> 就会被挂载为匿名卷，向 /data 写入的操作不会写入到容器存储层，而是写入到了匿名卷中。但是如果运行时 <code>docker run -v mydata:/data</code>，这就覆盖了 <code>/data</code> 的挂载设置，要求将 <code>/data</code> 挂载到名为 <code>mydata</code>的命名卷中。所以说 <code>Dockerfile</code>中的 <code>VOLUME</code>实际上是一层保险，确保镜像运行可以更好的遵循最佳实践，不向容器存储层内进行写入操作。</p><p>数据卷默认可能会保存于 <code>/var/lib/docker/volumes</code>，不过一般不需要、也不应该访问这个位置。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 数据容器 </tag>
            
            <tag> 数据卷 </tag>
            
            <tag> 命名卷 </tag>
            
            <tag> 匿名卷 </tag>
            
            <tag> 挂载目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么映射宿主端口？Dockerfile 中的EXPOSE和 docker run -p 有啥区别？</title>
      <link href="/2017/07/22/%E6%80%8E%E4%B9%88%E6%98%A0%E5%B0%84%E5%AE%BF%E4%B8%BB%E7%AB%AF%E5%8F%A3%EF%BC%9FDockerfile%20%E4%B8%AD%E7%9A%84EXPOSE%E5%92%8C%20docker%20run%20-p%20%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
      <url>/2017/07/22/%E6%80%8E%E4%B9%88%E6%98%A0%E5%B0%84%E5%AE%BF%E4%B8%BB%E7%AB%AF%E5%8F%A3%EF%BC%9FDockerfile%20%E4%B8%AD%E7%9A%84EXPOSE%E5%92%8C%20docker%20run%20-p%20%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>Docker中有两个概念，一个叫做 EXPOSE ，一个叫做 PUBLISH 。</p><a id="more"></a><p>EXPOSE 是镜像/容器声明要暴露该端口，可以供其他容器使用。这种声明，在没有设定 –icc=false的时候，实际上只是一种标注，并不强制。也就是说，没有声明 EXPOSE 的端口，其它容器也可以访问。但是当强制 –icc=false 的时候，那么只有 EXPOSE 的端口，其它容器才可以访问。<br>PUBLISH 则是通过映射宿主端口，将容器的端口公开于外界，也就是说宿主之外的机器，可以通过访问宿主IP及对应的该映射端口，访问到容器对应端口，从而使用容器服务。<br>EXPOSE 的端口可以不 PUBLISH，这样只有容器间可以访问，宿主之外无法访问。而 PUBLISH 的端口，可以不事先 EXPOSE，换句话说 PUBLISH 等于同时隐式定义了该端口要 EXPOSE。</p><p>docker run 命令中的 -p, -P 参数，以及 docker-compose.yml 中的  ports 部分，实际上均是指 PUBLISH。</p><p>小写 -p 是端口映射，格式为 [宿主IP:]&lt;宿主端口&gt;:&lt;容器端口&gt;，其中宿主端口和容器端口，既可以是一个数字，也可以是一个范围，比如：1000-2000:1000-2000。对于多宿主的机器，可以指定宿主IP，不指定宿主IP时，守护所有接口。</p><p>大写 -P 则是自动映射，将所有定义 EXPOSE 的端口，随机映射到宿主的某个端口。</p><p>我要映射好几百个端口，难道要一个个 -p 么？<br>-p 是可以用范围的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 8001-8010:8001-8010</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> expose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如果 Docker 升级或者重启的话，那容器是不是都会被停掉然后重启啊？</title>
      <link href="/2017/07/17/%E5%A6%82%E6%9E%9C%20Docker%20%E5%8D%87%E7%BA%A7%E6%88%96%E8%80%85%E9%87%8D%E5%90%AF%E7%9A%84%E8%AF%9D%EF%BC%8C%E9%82%A3%E5%AE%B9%E5%99%A8%E6%98%AF%E4%B8%8D%E6%98%AF%E9%83%BD%E4%BC%9A%E8%A2%AB%E5%81%9C%E6%8E%89%E7%84%B6%E5%90%8E%E9%87%8D%E5%90%AF%E5%95%8A%EF%BC%9F/"/>
      <url>/2017/07/17/%E5%A6%82%E6%9E%9C%20Docker%20%E5%8D%87%E7%BA%A7%E6%88%96%E8%80%85%E9%87%8D%E5%90%AF%E7%9A%84%E8%AF%9D%EF%BC%8C%E9%82%A3%E5%AE%B9%E5%99%A8%E6%98%AF%E4%B8%8D%E6%98%AF%E9%83%BD%E4%BC%9A%E8%A2%AB%E5%81%9C%E6%8E%89%E7%84%B6%E5%90%8E%E9%87%8D%E5%90%AF%E5%95%8A%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>在 1.12 以前的版本确实如此，但是从 1.12 开始，Docker 引擎加入了 –live-restore 参数，使用该参数可以避免引擎升级、重启导致容器停止服务的情况。</p><a id="more"></a><p>默认情况该功能不会被启动，如需启动，需要配置 docker 服务配置文件。比如 Ubuntu 16.04 这类 systemd 的系统，可以修改 /etc/systemd/system/multi-user.target.wants/docker.service 文件，在 ExecStart= 后面配置上 –live-restore：</p><p>ExecStart=/usr/bin/dockerd <br>    –registry-mirror=<a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a> <br>    –live-restore<br>上面的格式中使用了行尾 \ 的换行形式，这点和 bash 脚本一样，systemd 支持这种换行形式，如对此不了解可以先去学习 bash 程序设计。</p><p>需要注意的是，–live-restore 和 Swarm Mode 不兼容，所以在集群环境中不要使用。实际上集群环境也不用担心某个服务器重启的问题，因为其上的服务都会被调度到别的节点上，因此服务并不会被中断。</p><p>参考文档：</p><p><a href="https://docs.docker.com/engine/admin/live-restore/" target="_blank" rel="noopener">https://docs.docker.com/engine/admin/live-restore/</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么执行 docker 命令会报 permission denied 没权限的错误啊？</title>
      <link href="/2017/07/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%89%A7%E8%A1%8C%20docker%20%E5%91%BD%E4%BB%A4%E4%BC%9A%E6%8A%A5%20permission%20denied%20%E6%B2%A1%E6%9D%83%E9%99%90%E7%9A%84%E9%94%99%E8%AF%AF%E5%95%8A%EF%BC%9F/"/>
      <url>/2017/07/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%89%A7%E8%A1%8C%20docker%20%E5%91%BD%E4%BB%A4%E4%BC%9A%E6%8A%A5%20permission%20denied%20%E6%B2%A1%E6%9D%83%E9%99%90%E7%9A%84%E9%94%99%E8%AF%AF%E5%95%8A%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>在 Linux 环境下，一些新装了 docker 的用户，特别是使用了 sudo 命令安装好了 Docker 后，发现当前用户一执行 docker 命令，就会报没权限的错误：</p><a id="more"></a><p>dial unix /var/run/docker.sock: permission denied<br>一些来自于 Windows 世界的人，就会蹦出来说，用 root 呀……😓。而另一些有基本常识、知道不应该使用 root 人可能会说，那就用 sudo docker 吧。这两者都是不对的，或者说不合适的。</p><p>说使用 root 的人，应该回去好好学习一下 Linux 权限常识。一般 不应该直接使用 root 用户，直接使用 root 用户不仅仅是严重的违反了安全规范，而且也极容易造成操作事故。这不是 Windows 世界，Linux/Unix 世界是有严格的权限要求的，只应该使用最小的权限做事情。如果还不熟悉 Linux 权限机制，那就去学习一下，不要把 Windows 的坏毛病带过来。</p><p>说使用 sudo docker 的人，思路是对的，因为理解了平时操作应该使用普通用户，只有在需要的时候，才 sudo 提升权限进行操作。但是问题就在这个需要二字上，事实上，不需要 root 权限就可以执行 docker 命令。</p><p>其实如果看过官方安装文档的话都会知道，只需要将操作 docker 的用户，加入 docker 组，那么该用户既拥有了操作 docker 的权限。</p><p>因此，只需要执行：</p><p>sudo usermod -aG docker $USER<br>就可以把当前用户加入 docker 组，退出、重新登录系统后，执行 docker info 看一下，就会发现可以不用 sudo 直接执行 docker 命令了。</p><p>如果需要添加别的用户，将其中的 $USER 换成对应的用户名即可。</p><p>将用户添加到 docker 组，可以避免 root 权限误操作的问题，但是由于 dockerd 引擎是运行在 root 用户下的，而 docker 组成员有权限指挥 dockerd 引擎来做很多事情，因此，该用户实际上是拥有了 root 的权限的。因此不要误解了将当前用户加入 docker 组的初衷，这和赋予用户 sudo 权力是一样的，可不是说这个用户就没有 root 权限了。这样做，只是不再需要使用 sudo 了，也降低了使用 sudo 时误操作的可能。</p><p>此外，这里说的权限问题，全是指使用 docker 命令操作本机 dockerd 引擎，也就是通过 /var/run/docker.sock 来操作 dockerd 引擎的事情，只有这种有之前说的权限类的问题。</p><p>而 docker 命令还可以操作远程 dockerd 的引擎，也就是 -H 参数，或者 DOCKER_HOST 环境变量所指定的 Docker 主机。这种情况通讯走的是网络、HTTP，不会有权限问题。所以，如果不打算操作本机的 dockerd 引擎，则不需要将用户加入 docker 组，也是可以操作远程服务器的。</p><p>服务器上线后，怎么发</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么修改了 docker 服务配置后不起作用？</title>
      <link href="/2017/07/10/%E6%80%8E%E4%B9%88%E4%BF%AE%E6%94%B9%E4%BA%86%20docker%20%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E5%90%8E%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%EF%BC%9F/"/>
      <url>/2017/07/10/%E6%80%8E%E4%B9%88%E4%BF%AE%E6%94%B9%E4%BA%86%20docker%20%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE%E5%90%8E%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>改动真的生效了么？在宿主上运行一下 ps -ef | grep dockerd 看看，自己做的那些配置有么？没有的话就说明没有生效，那么就要检查原因了。</p><a id="more"></a><p>首先，改完配置重启服务了么？虽然这个问题看着很小白，但是确实很多人犯了这个小白的错误。</p><p>Ubuntu 14.04: sudo service docker restart<br>Ubuntu 16.04, CentOS 7: sudo systemctl daemon-reload &amp;&amp; sudo systemctl restart docker<br>另外，你改对了配置文件了么？</p><p>不少人懒得看英文文档，百度个文章就照着配，既不管百度得到的文章所讲的系统，也没注意版本，而且中文文章往往自身表达描述不清楚，很多想当然的东西，结果无数坑。这么百度的人，很有可能压根就改错了文件。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 常用命令</title>
      <link href="/2017/07/08/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2017/07/08/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>Linux 常用命令</p><p>一：命令的基本格式<br>        ~        ：表示当前所在位置；<br>        localhost        :主机名<br>        “#”：超级用户<br>        “$”：普通用户</p><a id="more"></a><p>二：查询目录的内容<br>        命令格式：ls [选项] [文件或目录]<br>        选项：<br>                -a：所有文件<br>                -l:        查看详情<br>                -d: 查看目录属性<br>                -h：显示文件大小</p><p>三：文件处理命令<br>        1、建立目录<br>                命令格式：mkdir -p [目录名]<br>                -p: 表示递归建文件夹<br>                例如：<br>                        mkdir book<br>                        mkdir -p book/book1</p><pre><code>2、切换目录        命令格式：cd [目录]        简化操作：        cd ~: 进入当前用户目录        cd -：进入上次目录        cd ..：进入上一级目录        pwd：查看当前目录所在位置3、删除目录        rmdir [目录]:删除所有目录        rm -rf [目录]：删除目录所有文件4、复制目录        cp [选项] [源文件目录] [目标目录]        选项：                -r：复制目录                -p：连文件属性一起复制                -a：相当于-pdr5、剪切、改名        mv [源文件目录] [目标文件目录]6、常见目录作用        / ：根目录        /bin：命令保存目录        /boot：启动命令目录        /dev：设备文件目录        /etc：配置文件保存目录        /home：家目录        /lib：系统库保存目录        /mnt：系统挂载目录</code></pre><p>四：文件搜索命令<br>        1、local [文件名]<br>                在系统数据库中查找文件<br>                新建的文件，要执行updatedb操作之后才能搜到</p><pre><code>2、命令搜索        whereis [选项] [命令名]        或者        which [选项] [命令名]        选项；        -b：只查找可执行文件        -m：只查找帮助文件3、文件搜索        find [搜索范围] [选项] [条件]        例如：        find / -name test.log        在根目录查找名为test.log的文件        find /root -inname test.log        忽略大小写查找文件        find /var/log -mtime +10        其中        -mtime 文件修改时间        -atime 文件访问时间        -ctime 改变文件属性时间        +10 10天前        10 10天        -10 10天内        find /etc -size +20M        查找文件大于20M的文件</code></pre><p>五、压缩与解压缩命令<br>        常见压缩格式：.zip 、 .gz 、 .bz2、.tar.gz 、 .tar.bz2<br>        1、zip格式<br>                //压缩文件<br>                zip [压缩文件名] [源文件]</p><pre><code>        //压缩目录        zip -r [压缩文件名] [源文件]        //解压        unzip [压缩文件名]2、gz格式        //压缩为gz格式，源文件不保留        gzip [源文件]        //压缩gz格式，源文件保留        gzip -c 源文件 &gt; 压缩文件        //压缩目录        gzip -r 目录        //解压        guzip [文件]        guzip -r [目录]3、tar        //打包        tar -cvf [打包文件名] [源文件]        //解压        tar -xvf [文件名]4、tar.gz        //打包        tar -zcvf [文件名] [源文件]        //解压        tar -zxvf [文件名]</code></pre><p>六、关机和重启<br>        shutdown [选项] [时间]<br>        选项：<br>                -c 取消前一个关机命令<br>                -h 关机<br>                -r 重启<br>                init 6 重启<br>                init 0 关机<br>                logout 退出登陆</p><p>七、查看用户信息<br>        w<br>        who<br>        last<br>        lastlog</p><p>八、shell基础<br>        1、什么是shell<br>                shell是命令行解释器</p><pre><code>2、echo输出命令        echo [选项] [输出内容]        选项：        -e 支持转义3、创建一个脚本        创建hello.sh        vim hello.sh        进入编辑器        #!/bin/bash        echo &quot;hello world !&quot;        依次执行：        chomd 755 hello.sh        ./hello.sh</code></pre><p>九、历史命令<br>        history 查看历史命令<br>        history [选项] [历史保留文件]<br>        选项：<br>                -c 清空历史<br>                -w 把缓存中的历史写入历史命令保存文件</p><p>十、输出重定向<br>        命令&gt;文件：以覆盖的方式，把正确的命令输出到指定文件<br>        命令&gt;&gt;文件：以追加的方式，把正确的命令输出到指定文件<br>        错误命令 2&gt; 文件：以覆盖的方式，把错误的命令输出到指定文件<br>        错误命令 2&gt;&gt; 文件：以追加的方式，把错误的命令输出到指定文件<br>        命令&gt;&gt;文件 2&gt;&amp;1 ：同时追加正确命令和错误命令到指定文件<br>        命令 &gt;&gt; 文件1 2&gt;&gt;文件2 ：把正确的命令输出到文件1，错误的命令到文件2</p><p>十一、网络相关<br>        1、ifconfig查看ip</p><pre><code>2、查看网络状态        netstat [选项]        选项：                -t：列出tcp协议端口                -u：列出udp协议端口                -n：ip地址端口号                -l：列出监听状态的                -a：所有</code></pre><p>补充：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ss -tanp | grep LISTEN</span><br><span class="line">#修改主机名称</span><br><span class="line">hostnamectl set-hostname &lt;host-name&gt;</span><br><span class="line">#永久修改</span><br><span class="line">hostnamectl --static set-hostname &lt;host-name&gt;</span><br><span class="line">#文件顶部</span><br><span class="line">:1</span><br><span class="line">#文件底部</span><br><span class="line">:$</span><br><span class="line">#列出所有网桥</span><br><span class="line">brctl show</span><br><span class="line">#列出路由表</span><br><span class="line">route -n</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker搭建Swarm集群</title>
      <link href="/2017/07/04/Docker%E6%90%AD%E5%BB%BASwarm%E9%9B%86%E7%BE%A4/"/>
      <url>/2017/07/04/Docker%E6%90%AD%E5%BB%BASwarm%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>Docker搭建Swarm集群</p><p>这个图作为一个整体实际上都处于一个所谓的集群中，它可能对应了一到多台的实际服务器。每台服务器上都装有<code>Docker</code>并且开启了基于<code>HTTP</code>的<code>DockerAPI</code>。这个集群中有一个<code>SwarmManager</code>的管理者，用来管理集群中的容器资源。管理者的管理对象不是服务器层面而是集群层面的，也就是说通过<code>Manager</code>，我们只能笼统地向集群发出指令而不能具体到某台具体的服务器上要干什么（这也是<code>Swarm</code>的根本所在）。至于具体的管理实现方式，<code>Manager</code>向外暴露了一个<code>HTTP</code>接口，外部用户通过这个<code>HTTP</code>接口来实现对集群的管理。对于稍微大一点的集群，最好是拿出一台实际的服务器作为专门的管理者，作为学习而言，也可以把管理者和被管理者放在一台服务器上。</p><a id="more"></a><p>关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop NetworkManager</span><br><span class="line">systemctl disable NetworkManager</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">sed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/g&apos; /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>master节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm init --advertise-addr 192.168.1.156</span><br></pre></td></tr></table></figure><p>slave</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker swarm join --token SWMTKN-1-1yiy41eikp4ofrpcqbj73tezigspedv597k5ftxpwm1yxys05b-2vrd75hbs1pgipdefybo7zw8o 192.168.1.156:2377</span><br></pre></td></tr></table></figure><p>master</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker node ls</span><br></pre></td></tr></table></figure><p>创建服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker service create --replicas 15 --publish 80:80 --name nginx nginx</span><br></pre></td></tr></table></figure><p>补充</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker service ls                 #查看所有服务</span><br><span class="line">docker service rm nginx           #删除名为nginx的服务</span><br><span class="line">docker node ls                    # swarm集群node列表</span><br><span class="line">docker swarm join-token worker    #查看以worker身份加入群集的token</span><br><span class="line">docker swarm join-token manager   #查看以manager身份加入群集的token</span><br><span class="line">docker node promote node1         #提升node1为管理节点以防单点故障</span><br><span class="line">docker service ps nginx           #查看nginx服务的容器运行信息</span><br><span class="line">docker service scale nginx=6      #更改nginx服务的容器实例为6</span><br><span class="line">docker exec -ti xxx bash          #进入节点的实例</span><br><span class="line">docker swarm leave                #脱离集群</span><br><span class="line">docker swarm leave --force        #强制脱离集群，当节点为manager的角色时</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> swarm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两行代码，搞定计数</title>
      <link href="/2017/07/02/%E4%B8%A4%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%8C%E6%90%9E%E5%AE%9A%E8%AE%A1%E6%95%B0/"/>
      <url>/2017/07/02/%E4%B8%A4%E8%A1%8C%E4%BB%A3%E7%A0%81%EF%BC%8C%E6%90%9E%E5%AE%9A%E8%AE%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装Docker</p><p>#一个优雅的站点统计方案</p><p>    在自己搭建网站的过程中，为了更直观的看到自己网站的访问情况，无疑是添加站点统计插件了，笔者在众多实验当中，发现了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>，既简单，又优雅！<br>    下面开始介绍，如何添加到自己的网站代码中。</p><a id="more"></a><p>网站访问量：<br><br><img src="https://raw.githubusercontent.com/tfssweb/tfssweb.github.io/master/source/images/jishu/009.png" alt="image"></p><p> 添加方法：<br><br>（1）、引入JS<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>（2）、添加站点访问量统计</p><ul><li><p>pv方式（按量）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">    本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>uv方式（按人）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">  本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ul><p>（3）、添加文章访问量统计</p><ul><li>pv方式（按量）：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">  本文总阅读量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li></ul><p>    个人喜欢，站点统计使用uv方式，文章统计采用pv方式，当然最终还是取决于你！</p><p>    最后，感谢<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>提供的友好服务！！</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> site </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么说数据库不适合放在 Docker 容器里运行？</title>
      <link href="/2017/05/11/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8D%E9%80%82%E5%90%88%E6%94%BE%E5%9C%A8%20Docker%20%E5%AE%B9%E5%99%A8%E9%87%8C%E8%BF%90%E8%A1%8C%EF%BC%9F/"/>
      <url>/2017/05/11/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%AF%B4%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8D%E9%80%82%E5%90%88%E6%94%BE%E5%9C%A8%20Docker%20%E5%AE%B9%E5%99%A8%E9%87%8C%E8%BF%90%E8%A1%8C%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>不为什么，因为这个说法不对，大部分认为数据库必须放到容器外运行的人根本不知道 Docker Volume 为何物。</p><a id="more"></a><p>在早年 Docker 没有 Docker Volume 的时候，其数据持久化是一个问题，但是这已经很多年过去了。现在有 Docker Volume 解决持久化问题，从本地目录绑定、受控存储空间、块设备、网络存储到分布式存储，Docker Volume 都支持，不存在数据读写类的服务不适于运行于容器内的说法。</p><p>Docker 不是虚拟机，使用数据卷是直接向宿主写入文件，不存在性能损耗。而且卷的生存周期独立于容器，容器消亡卷不消亡，重新运行容器可以挂载指定命名卷，数据依然存在，也不存在无法持久化的问题。</p><p>建议去阅读一下官方文档：</p><ul><li><a href="https://docs.docker.com/engine/tutorials/dockervolumes/" target="_blank" rel="noopener">https://docs.docker.com/engine/tutorials/dockervolumes/</a></li><li><a href="https://docs.docker.com/engine/reference/commandline/volume_create/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/commandline/volume_create/</a></li><li><a href="https://docs.docker.com/engine/extend/legacy_plugins/#/volume-plugins" target="_blank" rel="noopener">https://docs.docker.com/engine/extend/legacy_plugins/#/volume-plugins</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宿主如果和容器系统不同的话，那不是和虚拟机一样，一层层的调用，那么 Docker 和虚拟机还有什么差别？</title>
      <link href="/2017/04/15/%E5%AE%BF%E4%B8%BB%E5%A6%82%E6%9E%9C%E5%92%8C%E5%AE%B9%E5%99%A8%E7%B3%BB%E7%BB%9F%E4%B8%8D%E5%90%8C%E7%9A%84%E8%AF%9D%EF%BC%8C%E9%82%A3%E4%B8%8D%E6%98%AF%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%80%E6%A0%B7%EF%BC%8C%E4%B8%80%E5%B1%82%E5%B1%82%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E9%82%A3%E4%B9%88%20Docker%20%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%B7%AE%E5%88%AB%EF%BC%9F/"/>
      <url>/2017/04/15/%E5%AE%BF%E4%B8%BB%E5%A6%82%E6%9E%9C%E5%92%8C%E5%AE%B9%E5%99%A8%E7%B3%BB%E7%BB%9F%E4%B8%8D%E5%90%8C%E7%9A%84%E8%AF%9D%EF%BC%8C%E9%82%A3%E4%B8%8D%E6%98%AF%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%80%E6%A0%B7%EF%BC%8C%E4%B8%80%E5%B1%82%E5%B1%82%E7%9A%84%E8%B0%83%E7%94%A8%EF%BC%8C%E9%82%A3%E4%B9%88%20Docker%20%E5%92%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%B7%AE%E5%88%AB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>要把 Windows 和 Linux 分清楚，更要把内核(kernel)和用户空间(userland)分清楚。</p><p>容器内的进程是直接运行于宿主内核的，这点和宿主进程一致，只是容器的 userland 不同，容器的 userland 由容器镜像提供，也就是说镜像提供了 rootfs。</p><a id="more"></a><p>假设宿主是 Ubuntu，容器是 CentOS。CentOS 容器中的进程会直接向 Ubuntu 宿主内核发送 syscall，而不会直接或间接的使用任何 Ubuntu 的 userland 的库。</p><p>这点和虚拟机有本质的不同，虚拟机是虚拟环境，在现有系统上虚拟一套物理设备，然后在虚拟环境内运行一个虚拟环境的操作系统内核，在内核之上再跑完整系统，并在里面调用进程。</p><p>还以上面的例子去考虑，虚拟机中，CentOS 的进程发送 syscall 内核调用，该请求会被虚拟机内的 CentOS 的内核接到，然后 CentOS 内核访问虚拟硬件时，由虚拟机的服务软件截获，并使用宿主系统，也就是 Ubuntu 的内核及 userland 的库去执行。</p><p>而且，Linux 和 Windows 在这点上非常不同。Linux 的进程是直接发 syscall 的，而 Windows 则把 syscall 隐藏于一层层的 DLL 服务之后，因此 Windows 的任何一个进程如果要执行，不仅仅需要 Windows 内核，还需要一群服务来支撑，所以如果 Windows 要实现类似的机制，容器内将不会像 Linux 这样轻量级，而是非常臃肿。看一下微软移植的 Docker 就非常清楚了。</p><p>所以不要把 Docker 和虚拟机弄混，Docker 容器只是一个进程而已，只不过利用镜像提供的 rootfs 提供了调用所需的 userland 库支持，使得进程可以在受控环境下运行而已，它并没有虚拟出一个机器出来。</p><p>参考：</p><ul><li>(英文): <a href="https://www.docker.com/what-docker" target="_blank" rel="noopener">https://www.docker.com/what-docker</a></li><li>(中文): <a href="https://www.docker-cn.com/what-docker" target="_blank" rel="noopener">https://www.docker-cn.com/what-docker</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何列出容器和所使用的卷的关系？</title>
      <link href="/2017/04/10/%E5%A6%82%E4%BD%95%E5%88%97%E5%87%BA%E5%AE%B9%E5%99%A8%E5%92%8C%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8D%B7%E7%9A%84%E5%85%B3%E7%B3%BB%EF%BC%9F/"/>
      <url>/2017/04/10/%E5%A6%82%E4%BD%95%E5%88%97%E5%87%BA%E5%AE%B9%E5%99%A8%E5%92%8C%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E5%8D%B7%E7%9A%84%E5%85%B3%E7%B3%BB%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>要感谢强大的 Go Template，可以使用下面的命令来显示：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format &apos;&#123;&#123;.Name&#125;&#125; =&gt; &#123;&#123;with .Mounts&#125;&#125;&#123;&#123;range .&#125;&#125;</span><br><span class="line">    &#123;&#123;.Name&#125;&#125;,&#123;&#123;end&#125;&#125;&#123;&#123;end&#125;&#125;&apos; $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>注意这里的换行和空格是有意如此的，这样就可以再返回结果控制缩进格式。其结果将是如下形式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect --format &apos;&#123;&#123;.Name&#125;&#125; =&gt; &#123;&#123;with .Mounts&#125;&#125;&#123;&#123;range .&#125;&#125;</span><br><span class="line">    &#123;&#123;.Name&#125;&#125;&#123;&#123;end&#125;&#125;&#123;&#123;end&#125;&#125;&apos; $(docker ps -aq)</span><br><span class="line">/device_api_1 =&gt;</span><br><span class="line">/device_dashboard-debug_1 =&gt;</span><br><span class="line">/device_redis_1 =&gt;</span><br><span class="line">    device_redis-data</span><br><span class="line">/device_mongo_1 =&gt;</span><br><span class="line">    device_mongo-data</span><br><span class="line">    61453e46c3409f42e938324d7feffc6aeb6b7ce16d2080566e3b128c910c9570</span><br><span class="line">/prometheus_prometheus_1 =&gt;</span><br><span class="line">    fc0185ed3fc637295de810efaff7333e8ff2f6050d7f9368a22e19fb2c1e3c3f</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
            <tag> 卷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker pull 下来的镜像文件都在哪？</title>
      <link href="/2017/04/09/docker%20pull%20%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E9%83%BD%E5%9C%A8%E5%93%AA%EF%BC%9F/"/>
      <url>/2017/04/09/docker%20pull%20%E4%B8%8B%E6%9D%A5%E7%9A%84%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6%E9%83%BD%E5%9C%A8%E5%93%AA%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>Docker不是虚拟机，Docker 镜像也不是虚拟机的 ISO 文件。Docker 的镜像是分层存储，每一个镜像都是由很多层，很多个文件组成。而不同的镜像是共享相同的层的，所以这是一个树形结构，不存在具体哪个文件是 pull 下来的镜像的问题。</p><a id="more"></a><p>具体镜像保存位置取决于系统，一般Linux系统下，在 <code>/var/lib/docker</code> 里。对于使用 Union FS 的系统(Ubuntu)，如 <code>aufs</code>, <code>overlay2</code>等，可以直接在 <code>/var/lib/docker/{aufs,overlay2}</code> 下看到找到各个镜像的层、容器的层，以及其中的内容。</p><p>但是，对于CentOS这类没有Union FS的系统，会使用如<code>devicemapper</code>这类东西的一些特殊功能(如snapshot)模拟，镜像会存储于块设备里，因此无法看到具体每层信息以及每层里面的内容。</p><p>需要注意的是，默认情况下，CentOS/RHEL 使用 <code>lvm-loop</code>，也就是本地稀疏文件模拟块设备，这个文件会位于 <code>/var/lib/docker/devicemapper/devicemapper/data</code> 的位置。这是非常不推荐的，如果发现这个文件很大，那就说明你在用 <code>devicemapper + loop</code> 的方式，不要这么做，去参照官方文档，换 <code>direct-lvm</code>，也就是分配真正的块设备给 <code>devicemapper</code>去用。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 镜像 </tag>
            
            <tag> pull </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker技术入门与实践</title>
      <link href="/2017/04/05/Docker%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
      <url>/2017/04/05/Docker%E6%8A%80%E6%9C%AF%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>Docker技术入门与实践</p><p>1、FROM（第一条指令必须是FROM）<br>格式：FROM <image> 或 FROM <a href="image:tag" target="_blank" rel="noopener">image:tag</a></image></p><p>2、MAINTAINER<br>格式：MAINTAINER <name>   #指定维护者信息</name></p><a id="more"></a><p>3、RUN<br>格式：RUN <command> 或 RUN [“executable”,”param1”,”param2”]  #前者将在shell终端运行，后者则使用exec 执行；</p><p>4、CMD<br>格式：（三种格式）<br>CMD [“executable”,”param1”,”param2”]  #使用exec 执行，推荐使用；<br>CMD command param1 param2   #在/bin/bash中执行，提供给需要交互的应用；<br>CMD [“param1”,”param2”]     #提供给ENTRYPOINT 默认参数<br>每个Dockerfile 文件只能有一个CMD 命令，如果指定多了多条命令，只有最后一条被执行；如果用户启动容器的时候指定了运行命令，则会覆盖掉CMD指定的命令；</p><p>5、EXPOSE<br>格式：EXPOSE <port> [<port> …]  #告诉Docker 服务端容器暴露的端口号，供互联系统使用；<br>例：EXPOSE 22 80 8443</port></port></p><p>6、ENV<br>格式：ENV <key> <value>   #指定一个环境变量，会被后续RUN指令使用，并在容器运行时保持。</value></key></p><p>7、ADD<br>格式：ADD <src> <dest>  #复制指定的src 到容器的dest ，其中src 可以是Dockerfile 所在目录的一个相对路径（文件或目录）；也可以是个URL 还可以是一个tar 文件（自动解压为目录）。</dest></src></p><p>8、COPY<br>格式：COPY <src> <dest>  #复制本地主机的src 到容器中的dest 。目标路径不存在时，会自动创建。当时用本地目标为源目录时，推荐使用COPY。</dest></src></p><p>9、ENTRYPOINT<br>格式：（两种格式）<br>ENTRYPOINT [“executable”,”param1”,”param2”]<br>ENTRYPOINT command param1 param2  #配置容器启动后执行的命令，并且不可被docker run 提供的参数覆盖。每个Dockerfile 中只能有一个ENTRYPOINT ，当指定多个后，只有最后一个生效</p><p>10、VOLUME<br>格式：VOLUME [“/data”]  #创建一个可以从本地主机或其他容器挂载的挂载点，一般用来存放数据库和需要保持的数据等。</p><p>11、USER<br>格式：USER daemon  #指定运行容器时的用户名或UID ，后续的RUN 也会使用指定用户。</p><p>12、WORKDIR<br>格式：WORKDIR /path/to/workdir  #为后续的RUN、CMD、ENTRYPOINT指令配置工作目录。可以使用多个WORKDIR 指令，后续命令如果参数是相对路径，则会基于之前命令指定的路径。</p><p>例：<br>WORKDIR /a<br>WORKDIR b<br>WORKDIR c<br>RUN pwd<br>则最终为：/a/b/c</p><p>13、ONBUILD<br>格式：ONBUILD [INSTRUCTION]  #配置当所创建的镜像作为其他新创建镜像的基础镜像时，所执行的操作命令。</p><p>docker build <path>   #根据指定路径下的Dockerfile 创建镜像。</path></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何初始化卷？</title>
      <link href="/2017/03/23/%E5%A6%82%E4%BD%95%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8D%B7%EF%BC%9F/"/>
      <url>/2017/03/23/%E5%A6%82%E4%BD%95%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8D%B7%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>卷（Volume），是用于动态数据持久化的。因此其内存储的都是动态数据，运行时会变化。如果这里面需要初始化里面的数据，需要在运行时进行。或者在镜像里加入初始化的脚本，比如 mysql 镜像中的初始化目录中的脚本；或者自己单独制作纯粹用于初始化卷用的镜像，单独一次性运行以将初始化数据灌入卷中。</p><a id="more"></a><p>举个例子来说，假设你需要个卷 mydata，然后里面需要有个 hello.txt 文件是必须存在的，否则容器运行就要出大事儿了……（这需求很傻我知道……😅好吧，假设如此）。</p><p>当然，我们得先有这个卷。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create --name mydata</span><br></pre></td></tr></table></figure><p>那怎么把这个超重要的 hello.txt 文件放入卷中呢？有几种办法。</p><p>正常挂载该 mydata 卷，然后 docker cp 进去<br>这是个很傻的办法，不过如果容器运行并不依赖于 hello.txt 的话，这样做是可以的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d --name web -v mydata:/data nginx</span><br><span class="line">$ docker cp ./hello.txt web:/data/</span><br></pre></td></tr></table></figure><p>这样是先让容器启动，启动后，再把所需数据导入卷里面去。以后容器就可以使用 /data/hello.txt 文件了。</p><p>但是，如果容器是严重依赖于这个 hello.txt 文件的话，这样做就会出问题。容器会因为 hello.txt 文件不存在，而报错退出，导致根本没有 docker cp 的机会。</p><p>这种情况，我们可以变通一下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm \</span><br><span class="line">    -v $PWD:/source \</span><br><span class="line">    -v mydata:/data \</span><br><span class="line">    busybox \</span><br><span class="line">    cp /source/hello.txt /data/</span><br><span class="line">$ docker run -d --name web -v mydata:/data nginx</span><br></pre></td></tr></table></figure><p>这里我们先启动了一个 busybox 容器，分别挂载要复制的源以及目标的 mydata 卷，然后用 cp 命令将 hello.txt 复制到 mydata 中去。数据导入结束后，我们再正式挂载 mydata 卷到正式的容器上并启动。这个时候严重依赖 /data/hello.txt 的这个容器就可以顺利运行了。</p><p>专门制作初始化镜像<br>手动的去执行 docker cp，或者 docker run … cp … 并不是很正规。可以写个脚本让一切都标准化，但是，除了流程外，还需要确保当前环境中的初始化数据的版本必须是所期望的，否则初始化了错误的数据，也会让运行时状态达不到预期的效果。</p><p>因此，另一种办法是专门制作一个初始化卷的镜像，这样的做法也比较方便在 CI/CD 流程中对初始化数据的过程进行测试确认。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM busybox</span><br><span class="line">COPY hello.txt /source/</span><br><span class="line">VOLUME /data</span><br><span class="line">CMD [&quot;cp&quot;, &quot;/source/hello.txt&quot;, &quot;/data/&quot;]</span><br></pre></td></tr></table></figure><p>这样的镜像只有一个生存目的，就是挂载 mydata 卷，并且把数据导入进去。假设构建好的镜像名为 volume-prepare，只需要执行下面的命令就可以完成导入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm -v mydata:/data volume-prepare</span><br></pre></td></tr></table></figure><p>在镜像的 Dockerfile 制作中，加入初始化部分<br>在之前的问答中我们已经了解到，官方镜像 mysql 中可以使用 Dockerfile 来添加初始化脚本，并且会在运行时判断是否为第一次运行，如果确实需要初始化，则执行定制的初始化脚本。</p><p>我们也可以使用这种方法将 hello.txt 在初始化的时候加入到 mydata 卷中去。</p><p>首先我们需要写一个进入点的脚本，用以确保在容器执行的时候都会运行，而这个脚本将判断是否需要数据初始化，并且进行初始化操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># entrypoint.sh</span><br><span class="line">if [ ! -f &quot;/data/hello.txt&quot; ]; then</span><br><span class="line">    cp /source/hello.txt /data/</span><br><span class="line">fi</span><br><span class="line">exec &quot;$@&quot;</span><br></pre></td></tr></table></figure><p>名为 entrypoint.sh 的这个脚本很简单，判断一下 /data/hello.txt 是否存在，如果不存在就需要初始化。初始化行为也很简单，将实现准备好的 /source/hello.txt 复制到 /data/ 目录中去，以完成初始化。程序的最后，将执行送入的命令。</p><p>我们可以这样写 Dockerfile：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">COPY hello.txt /source/</span><br><span class="line">COPY entrypoint.sh /</span><br><span class="line">VOLUME /data</span><br><span class="line">ENTRYPOINT [&quot;/entrypoint.sh&quot;]</span><br><span class="line">CMD [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure><p>当我们构建镜像、启动容器后，就会发现 /data 目录下已经存在了 hello.txt 文件了，初始化成功了。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 卷 </tag>
            
            <tag> 初始化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何动态修改内存限制？</title>
      <link href="/2017/03/09/%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6%EF%BC%9F/"/>
      <url>/2017/03/09/%E5%A6%82%E4%BD%95%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E5%86%85%E5%AD%98%E9%99%90%E5%88%B6%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p><code>Docker 1.10</code> 之后支持动态修改，使用 <code>docker update</code> 命令，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker update -m 300m</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 内存 </tag>
            
            <tag> 动态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>镜像的实现原理</title>
      <link href="/2017/03/08/%E9%95%9C%E5%83%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
      <url>/2017/03/08/%E9%95%9C%E5%83%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="镜像的实现原理"><a href="#镜像的实现原理" class="headerlink" title="镜像的实现原理"></a>镜像的实现原理</h2><p>Docker 镜像是怎么实现增量的修改和维护的？</p><p>每个镜像都由很多层次构成，Docker 使用 <a href="http://en.wikipedia.org/wiki/UnionFS" target="_blank" rel="noopener">Union FS</a> 将这些不同的层结合到一个镜像中去。</p><a id="more"></a><p>通常 Union FS 有两个用途, 一方面可以实现不借助 LVM、RAID 将多个 disk 挂到同一个目录下,另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起，Live CD 正是基于此方法可以允许在镜像不变的基础上允许用户在其上进行一些写操作。</p><p>Docker 在 AUFS 上构建的容器也是利用了类似的原理。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker零碎命令集锦</title>
      <link href="/2017/03/05/Docker%E9%9B%B6%E7%A2%8E%E5%91%BD%E4%BB%A4%E9%9B%86%E9%94%A6/"/>
      <url>/2017/03/05/Docker%E9%9B%B6%E7%A2%8E%E5%91%BD%E4%BB%A4%E9%9B%86%E9%94%A6/</url>
      
        <content type="html"><![CDATA[<p>Docker零碎命令集锦</p><a id="more"></a><p>1、查看镜像内的变量（env）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run &lt;image&gt; env</span><br></pre></td></tr></table></figure><p>2、不需要进入到容器，直接查看容器内内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;image id&gt; ls</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>听说 --link 过时不再用了？那容器互联、服务发现怎么办？</title>
      <link href="/2017/02/27/%E5%90%AC%E8%AF%B4%20--link%20%E8%BF%87%E6%97%B6%E4%B8%8D%E5%86%8D%E7%94%A8%E4%BA%86%EF%BC%9F%E9%82%A3%E5%AE%B9%E5%99%A8%E4%BA%92%E8%81%94%E3%80%81%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/"/>
      <url>/2017/02/27/%E5%90%AC%E8%AF%B4%20--link%20%E8%BF%87%E6%97%B6%E4%B8%8D%E5%86%8D%E7%94%A8%E4%BA%86%EF%BC%9F%E9%82%A3%E5%AE%B9%E5%99%A8%E4%BA%92%E8%81%94%E3%80%81%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>在 1-2 年前，Docker 所有容器都连接于默认的桥接网络上，也就是很多老文章鼓捣的 docker0 桥接网卡。因此实际上默认情况下所有容器都是可以互联的，没有隔离，当然这样安全性不好。而服务发现，是在这种环境下发展出来的，通过修改容器内的 /etc/hosts 文件来完成的。凡是 –link 的主机的别名就会出现于 /etc/hosts 中，其地址由 Docker 引擎维护。因此容器间才可以通过别名互访。</p><a id="more"></a><p>但是这种办法并不是好的解决方案，Docker 早在一年多以前就已经使用自定义网络了。在同一个网络中的容器，可以互联，并且，Docker 内置了 DNS，容器内的应用可以使用服务名、容器名、别名来进行服务发现，名称会经由内置的 DNS 进行解析，其结果是动态的；而不在同一网络中的容器，不可以互联。</p><p>因此，现在早就不用 –link 了，而且非常不建议使用。</p><p>首先是因为使用 –link 就很可能还在用默认桥接网络，这很不安全，所有容器都没有适度隔离，用自定义网络才比较方便互联隔离。</p><p>其次，修改 /etc/hosts 文件有很多弊病。比如，高频繁的容器启停环境时，容易产生竞争冒险，导致 /etc/hosts 文件损坏，出现访问故障；或者有些应用发现是来自于 /etc/hosts 文件后，就假定其为静态文件，而缓存结果不再查询，从而导致容器启停 IP 变更后，使用旧的条目而无法连接到正确的容器等等。</p><p>另外，在一代 Swarm 环境中，在 docker-compose.yml 中使用了 links 就意味着服务间的强依赖关系，因此调度时不会将服务运行于不同节点，而是全部运行于一个节点，使得横向扩展失败。</p><p>所以不要再使用 –link 以及 docker-compose.yml 中的 links 了。应该使用 docker network，建立网络，而 docker run –network 来连接特定网络。或者使用 version: ‘2’ 的 docker-compose.yml 直接定义自定义网络并使用.</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> link </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-machine 创建的主机怎么直接 ssh 进去？改了 root 密码好像也没用？</title>
      <link href="/2017/02/08/docker-machine%20%E5%88%9B%E5%BB%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E6%80%8E%E4%B9%88%E7%9B%B4%E6%8E%A5%20ssh%20%E8%BF%9B%E5%8E%BB%EF%BC%9F%E6%94%B9%E4%BA%86%20root%20%E5%AF%86%E7%A0%81%E5%A5%BD%E5%83%8F%E4%B9%9F%E6%B2%A1%E7%94%A8%EF%BC%9F/"/>
      <url>/2017/02/08/docker-machine%20%E5%88%9B%E5%BB%BA%E7%9A%84%E4%B8%BB%E6%9C%BA%E6%80%8E%E4%B9%88%E7%9B%B4%E6%8E%A5%20ssh%20%E8%BF%9B%E5%8E%BB%EF%BC%9F%E6%94%B9%E4%BA%86%20root%20%E5%AF%86%E7%A0%81%E5%A5%BD%E5%83%8F%E4%B9%9F%E6%B2%A1%E7%94%A8%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p><code>docker-machine</code>创建的主机，会遵循安全最佳实践，因此一般不会允许 <code>root</code>登录，而且一般不会允许密码登录，只允许密钥登录（也就是很多国内文章称为的免密登录，其实并非免密）。</p><p>因此，使用密钥 <code>~/.docker/machine/machines/&lt;机器名&gt;/id_rsa</code> 登录即可。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -i ~/.docker/machine/machines/default/id_rsa \</span><br><span class="line">    -o UserKnownHostsFile=/dev/null \</span><br><span class="line">    -o StrictHostKeyChecking=no \</span><br><span class="line">    docker@$(docker-machine ip default)</span><br></pre></td></tr></table></figure><p>这个例子中连接的是 <code>default</code>这个机器，需要连接其它的机器换成别的即可。另外的两个 <code>-o</code> 的参数是让其不要校验服务器密钥，这当然是不安全的，不过这里只是试验的虚拟机，所以没关系。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-machine </tag>
            
            <tag> ssh </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么我 docker login 失败了？我注册用户了，在网站登录也没问题呀？</title>
      <link href="/2017/02/08/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%20docker%20login%20%E5%A4%B1%E8%B4%A5%E4%BA%86%EF%BC%9F%E6%88%91%E6%B3%A8%E5%86%8C%E7%94%A8%E6%88%B7%E4%BA%86%EF%BC%8C%E5%9C%A8%E7%BD%91%E7%AB%99%E7%99%BB%E5%BD%95%E4%B9%9F%E6%B2%A1%E9%97%AE%E9%A2%98%E5%91%80%EF%BC%9F/"/>
      <url>/2017/02/08/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%20docker%20login%20%E5%A4%B1%E8%B4%A5%E4%BA%86%EF%BC%9F%E6%88%91%E6%B3%A8%E5%86%8C%E7%94%A8%E6%88%B7%E4%BA%86%EF%BC%8C%E5%9C%A8%E7%BD%91%E7%AB%99%E7%99%BB%E5%BD%95%E4%B9%9F%E6%B2%A1%E9%97%AE%E9%A2%98%E5%91%80%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker login</span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don&apos;t have a Docker ID, </span><br><span class="line">head over to https://hub.docker.com to create one.</span><br><span class="line">Username: pinkman@heisenb</span><br><span class="line">Password:</span><br><span class="line">Error response from daemon: Get https://registry-1.docker.io/v2/: unauthorized: incorrect username or password</span><br></pre></td></tr></table></figure><a id="more"></a><p>呃，这里应该是用户名的，怎么写了个电子邮件 <code>pinkman@heisenb</code>  呢？虽然  <code>Docker Hub</code> 网站允许你使用用户名或电子邮件登录，但是 <code>docker login</code> 只可以使用用户名，换成你的用户名登录就好了。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> login </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装完 Docker Toolbox 后发现下载镜像速度太慢，是不是需要修改什么配置文件？</title>
      <link href="/2017/02/03/%E8%A3%85%E5%AE%8C%20Docker%20Toolbox%20%E5%90%8E%E5%8F%91%E7%8E%B0%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F%E9%80%9F%E5%BA%A6%E5%A4%AA%E6%85%A2%EF%BC%8C%E6%98%AF%E4%B8%8D%E6%98%AF%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E4%BB%80%E4%B9%88%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9F/"/>
      <url>/2017/02/03/%E8%A3%85%E5%AE%8C%20Docker%20Toolbox%20%E5%90%8E%E5%8F%91%E7%8E%B0%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F%E9%80%9F%E5%BA%A6%E5%A4%AA%E6%85%A2%EF%BC%8C%E6%98%AF%E4%B8%8D%E6%98%AF%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E4%BB%80%E4%B9%88%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>安装 <code>Docker Toolbox</code> 时，安装程序会使用 <code>docker-machine</code> 为你创建一个名为 <code>default</code>的虚拟机：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-machine create -d virtualbox default</span><br></pre></td></tr></table></figure><p>这个虚拟机没有加任何参数，因此对于拥有伟大的墙的国内网络来说，有些不方便使用。所以最简单的做法是在安装完 <code>Docker Toolbox</code> 后，删掉默认的虚拟机，然后重新创建该虚拟机，创建时加入有中国特色的配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">docker-machine rm default</span><br><span class="line">docker-machine create -d virtualbox \</span><br><span class="line">     --engine-registry-mirror https://registry.docker-cn.com \</span><br><span class="line">     --engine-insecure-registry 192.168.99.0/24 \</span><br><span class="line">     --engine-storage-driver overlay2 \</span><br><span class="line">     default</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-machine </tag>
            
            <tag> toolbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么才能让 docker service create 创建的服务正常退出时不重启啊？</title>
      <link href="/2017/02/02/%E6%80%8E%E4%B9%88%E6%89%8D%E8%83%BD%E8%AE%A9%20docker%20service%20create%20%E5%88%9B%E5%BB%BA%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E9%80%80%E5%87%BA%E6%97%B6%E4%B8%8D%E9%87%8D%E5%90%AF%E5%95%8A%EF%BC%9F/"/>
      <url>/2017/02/02/%E6%80%8E%E4%B9%88%E6%89%8D%E8%83%BD%E8%AE%A9%20docker%20service%20create%20%E5%88%9B%E5%BB%BA%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%AD%A3%E5%B8%B8%E9%80%80%E5%87%BA%E6%97%B6%E4%B8%8D%E9%87%8D%E5%90%AF%E5%95%8A%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>有些时候会有这样的需求，比如服务是由应用层的远程控制指令关闭的，这种进程退出是正常行为，并非错误。但是默认情况下，只要容器退出，引擎就视为异常，就会尝试重新调度启动这个容器。这会导致明明关了的服务，又被启动了。</p><a id="more"></a><p>这种情况可以使用 <code>--restart-condition=on-failure</code> 参数，这样只有在主进程退出码为 非 <code>0</code> 的时候，才会重启，而正常退出（<code>exited code = 0</code>) 无需重启。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> service </tag>
            
            <tag> create </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装Docker</title>
      <link href="/2016/10/07/Centos7%E5%AE%89%E8%A3%85Docker/"/>
      <url>/2016/10/07/Centos7%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装Docker</p><a id="more"></a><p>依次执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-selinux \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --enable docker-ce-edge</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --enable docker-ce-test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装docker-compose</title>
      <link href="/2016/10/06/Centos7%E5%AE%89%E8%A3%85docker-compose/"/>
      <url>/2016/10/06/Centos7%E5%AE%89%E8%A3%85docker-compose/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装docker-compose</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
            <tag> compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu搭建Docker环境</title>
      <link href="/2016/10/05/Ubuntu%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/"/>
      <url>/2016/10/05/Ubuntu%E6%90%AD%E5%BB%BADocker%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装Docker</p><a id="more"></a><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>  玩<code>Docker</code>建议使用<code>Ubuntu</code>系统，可以避免很多不必要的坑！！</p><p>版本支持：</p><ul><li>Zesty 17.04</li><li>Xenial 16.04 (LTS)</li><li>Trusty 14.04 (LTS)</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>这里不做解释，需要看解释的可以访问官网—-<a href="https://docs.docker.com/engine/installation/linux/docker-ce/ubuntu/#if-you-need-to-use-aufs" target="_blank" rel="noopener">传送门</a>，这里只写执行命令，依次执行就可以。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    linux-image-extra-$(uname -r) \</span><br><span class="line">    linux-image-extra-virtual</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>下一步需要注意，如果是国外服务器直接运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span><br><span class="line">   $(lsb_release -cs) \</span><br><span class="line">   stable&quot;</span><br></pre></td></tr></table></figure><p>如果是国内服务器，需要将源换成国内的，比如阿里的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">   &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span><br><span class="line">   $(lsb_release -cs) \</span><br><span class="line">   stable&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure><p>最后可以运行以下命令，进行是否安装成功确认：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker之Harbor搭建</title>
      <link href="/2016/09/22/Docker%E4%B9%8BHarbor%E6%90%AD%E5%BB%BA/"/>
      <url>/2016/09/22/Docker%E4%B9%8BHarbor%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="../../../../images/docker/harbor.png" alt="avatar"></p><a id="more"></a><h4 id="第一步：下载压缩包"><a href="#第一步：下载压缩包" class="headerlink" title="第一步：下载压缩包"></a>第一步：下载压缩包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/vmware/harbor/releases/download/v1.2.2/harbor-online-installer-v1.2.2.tgz</span><br></pre></td></tr></table></figure><h4 id="第二步：解压"><a href="#第二步：解压" class="headerlink" title="第二步：解压"></a>第二步：解压</h4><p>解压后进入harbor 目录，修改harbor.cfg文件：修改hostname<br><img src="../../../../images/docker/harbor.png" alt="avatar"></p><h4 id="第三步：执行"><a href="#第三步：执行" class="headerlink" title="第三步：执行"></a>第三步：执行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure><h4 id="第四步：可以用过docker-compose-yml-起停"><a href="#第四步：可以用过docker-compose-yml-起停" class="headerlink" title="第四步：可以用过docker-compose.yml 起停"></a>第四步：可以用过docker-compose.yml 起停</h4><h4 id="节点机操作："><a href="#节点机操作：" class="headerlink" title="节点机操作："></a>节点机操作：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">最后在节点主机上添加非安全认证：</span><br><span class="line"></span><br><span class="line">$ tee /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123; &quot;insecure-registries&quot;:[&quot;45.63.70.178&quot;] &#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> harbor </tag>
            
            <tag> 私服 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基本命令</title>
      <link href="/2016/09/21/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
      <url>/2016/09/21/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>1、（先进入项目文件夹）通过命令 Git init 把这个目录变成git可以管理的仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>2、把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>3、用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &apos;first commit&apos;</span><br></pre></td></tr></table></figure><p>4、关联到远程库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin 你的远程库地址</span><br></pre></td></tr></table></figure><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/cade8800/ionic-demo.git</span><br></pre></td></tr></table></figure><p>5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>*、状态查询命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免密码SSH</title>
      <link href="/2016/09/05/%E5%85%8D%E5%AF%86%E7%A0%81SSH/"/>
      <url>/2016/09/05/%E5%85%8D%E5%AF%86%E7%A0%81SSH/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装完毕后无法联网的解决方法</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root]$ ssh-copy-id -i ~/.ssh/id_rsa.pub root@172.1.2.3</span><br><span class="line"># 输入 root@172.1.2.3 密码</span><br></pre></td></tr></table></figure><p>git clone <a href="http://http://47.92.153.88:9999/smart_zjk/smart_ep.git" target="_blank" rel="noopener">http://http://47.92.153.88:9999/smart_zjk/smart_ep.git</a></p><p>git clone <a href="http://47.92.153.88:9999/smart_zjk/smart_ep_web.git" target="_blank" rel="noopener">http://47.92.153.88:9999/smart_zjk/smart_ep_web.git</a></p><p>第一步: 生成公钥  私钥<br>第二步: 将公钥放到gitlab<br>第三部: 将公钥和私钥  复制或者 映射 到容器，公钥和私钥 放在  ~/.ssh 目录</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7常用配置</title>
      <link href="/2016/08/05/Centos7%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/08/05/Centos7%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Centos7常用配置</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">/etc/hosts</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量修改文件后缀名</title>
      <link href="/2016/08/01/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%90%8D/"/>
      <url>/2016/08/01/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<p>批量修改文件后缀名.bat</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ren *.png *.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 批量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven阿里云镜像配置</title>
      <link href="/2016/07/10/Maven%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/07/10/Maven%E9%98%BF%E9%87%8C%E4%BA%91%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>Maven阿里云镜像配置</p><a id="more"></a><h4 id="settings-xml"><a href="#settings-xml" class="headerlink" title="settings.xml"></a>settings.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.1.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">    xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.1.0</span><br><span class="line">                        http://maven.apache.org/xsd/settings-1.1.0.xsd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;localRepository&gt;D:\software\.m2\repository&lt;/localRepository&gt;</span><br><span class="line">    &lt;mirrors&gt;</span><br><span class="line"></span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">&lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">&lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">&lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br><span class="line">    &lt;/mirrors&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是直接用 yum / apt-get 安装 Docker 吗？</title>
      <link href="/2016/07/10/%E6%98%AF%E7%9B%B4%E6%8E%A5%E7%94%A8%20yum%20%E3%80%81%20apt-get%20%E5%AE%89%E8%A3%85%20Docker%20%E5%90%97%EF%BC%9F/"/>
      <url>/2016/07/10/%E6%98%AF%E7%9B%B4%E6%8E%A5%E7%94%A8%20yum%20%E3%80%81%20apt-get%20%E5%AE%89%E8%A3%85%20Docker%20%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>很多人问到 docker, docker.io, docker-engine 甚至 lxc-docker 都有什么区别？</p><a id="more"></a><p>其中，RHEL/CentOS 软件源中的 Docker 包名为 docker；Ubuntu 软件源中的 Docker 包名为 docker.io；而很古老的 Docker 源中 Docker 也曾叫做 lxc-docker。这些都是非常老旧的 Docker 版本，并且基本不会更新到最新的版本，而对于使用 Docker 而言，使用最新版本非常重要。另外，17.04 以后，包名从 docker-engine 改为 docker-ce，因此从现在开始安装，应该都使用 docker-ce 这个包。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7安装完毕后无法联网的解决方法</title>
      <link href="/2016/07/05/Centos7%E5%AE%89%E8%A3%85%E5%AE%8C%E6%AF%95%E5%90%8E%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2016/07/05/Centos7%E5%AE%89%E8%A3%85%E5%AE%8C%E6%AF%95%E5%90%8E%E6%97%A0%E6%B3%95%E8%81%94%E7%BD%91%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>Centos7安装完毕后无法联网的解决方法</p><a id="more"></a><p>1、打开终端窗口  用root登录</p><p>2、输入：<code>cd /etc/sysconfig/network-scripts/</code><br></p><p>3、编辑配置文件：<code>vi ifcfg-ens33</code>   修改<code>onboot=no</code> 为 <code>onboot=yes</code></p><p>4、然后：<code>reboot</code></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库主外键删除</title>
      <link href="/2016/07/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E5%A4%96%E9%94%AE%E5%88%A0%E9%99%A4/"/>
      <url>/2016/07/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E5%A4%96%E9%94%AE%E5%88%A0%E9%99%A4/</url>
      
        <content type="html"><![CDATA[<p>在更改数据库的时候，有表关联的时候，常常遇到数据更新受限制，那么就可以临时删除主外键关系：</p><a id="more"></a><h2 id="Db2"><a href="#Db2" class="headerlink" title="Db2"></a>Db2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--删除</span><br><span class="line">select &apos;ALTER TABLE PCORE.&apos; || F.TABNAME  || &apos; ALTER FOREIGN KEY &apos; ||  F.CONSTNAME  || &apos;  NOT ENFORCED;&apos; from SYSCAT.REFERENCES F WHERE OWNER = &apos;PCORE&apos;;</span><br><span class="line"></span><br><span class="line">--恢复</span><br><span class="line">select &apos;ALTER TABLE PCORE.&apos; || F.TABNAME  || &apos; ALTER FOREIGN KEY &apos; ||  F.CONSTNAME  || &apos;  ENFORCED;&apos; from SYSCAT.REFERENCES F WHERE OWNER = &apos;PCORE&apos;;</span><br></pre></td></tr></table></figure><h2 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行如下的sql语句来关闭外键检测：</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">执行你要的操作后把再把外键检测恢复</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br></pre></td></tr></table></figure><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &apos;alter table &apos; || table_name || &apos; disable constraint &apos; || constraint_name || &apos;;&apos; from user_constraints where constraint_type = &apos;R&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> db2 </tag>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL查询某个字段在哪些表中</title>
      <link href="/2016/05/05/MySQL%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%9C%A8%E5%93%AA%E4%BA%9B%E8%A1%A8%E4%B8%AD/"/>
      <url>/2016/05/05/MySQL%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AE%B5%E5%9C%A8%E5%93%AA%E4%BA%9B%E8%A1%A8%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<p>MySQL查询某个字段在哪些表中</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL:</span><br><span class="line"></span><br><span class="line">SELECT TABLE_SCHEMA,TABLE_NAME FROM information_schema.`COLUMNS` WHERE COLUMN_NAME = &apos;acctnbr&apos; ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL创建数据库及用户</title>
      <link href="/2016/04/05/MySQL%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E7%94%A8%E6%88%B7/"/>
      <url>/2016/04/05/MySQL%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%8A%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<p>MySQL创建数据库及用户</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--创建数据库 test_db</span><br><span class="line"></span><br><span class="line">create database test_db;</span><br><span class="line"></span><br><span class="line">--创建用户并授予相应的权限</span><br><span class="line"></span><br><span class="line">grant all privileges on test_db.* to user@&apos;localhost&apos; identified by &apos;user&apos;;</span><br><span class="line"></span><br><span class="line">grant all privileges on test_db.* to user@&apos;%&apos; identified by &apos;user&apos;;</span><br><span class="line"></span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除主外键关系</title>
      <link href="/2016/04/05/%E5%88%A0%E9%99%A4%E4%B8%BB%E5%A4%96%E9%94%AE%E5%85%B3%E7%B3%BB/"/>
      <url>/2016/04/05/%E5%88%A0%E9%99%A4%E4%B8%BB%E5%A4%96%E9%94%AE%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<p>删除主外键关系</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DB2</span><br><span class="line"></span><br><span class="line">--删除</span><br><span class="line"></span><br><span class="line">select &apos;ALTER TABLE PCORE.&apos; || F.TABNAME  || &apos; ALTER FOREIGN KEY &apos; ||  F.CONSTNAME  || &apos;  NOT ENFORCED;&apos; from SYSCAT.REFERENCES F WHERE OWNER = &apos;PCORE&apos;;</span><br><span class="line"></span><br><span class="line">--恢复</span><br><span class="line"></span><br><span class="line">select &apos;ALTER TABLE PCORE.&apos; || F.TABNAME  || &apos; ALTER FOREIGN KEY &apos; ||  F.CONSTNAME  || &apos;  ENFORCED;&apos; from SYSCAT.REFERENCES F WHERE OWNER = &apos;PCORE&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MySQL</span><br><span class="line"></span><br><span class="line">运行如下的sql语句来关闭外键检测：</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">执行你要的操作后把再把外键检测恢复</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Oracle</span><br><span class="line"></span><br><span class="line">select &apos;alter table &apos; || table_name || &apos; disable constraint &apos; || constraint_name || &apos;;&apos; from user_constraints where constraint_type = &apos;R&apos;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
            <tag> db2 </tag>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DB2数据库报错编码</title>
      <link href="/2016/04/03/DB2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E7%BC%96%E7%A0%81/"/>
      <url>/2016/04/03/DB2%E6%95%B0%E6%8D%AE%E5%BA%93%E6%8A%A5%E9%94%99%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>DB2数据库报错编码</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br></pre></td><td class="code"><pre><span class="line">SQLCODE SQLSTATE SQLSTATE 说明</span><br><span class="line"></span><br><span class="line">      000 00000 SQL语句成功完成</span><br><span class="line">       　 01xxx SQL语句成功完成，但是有警告</span><br><span class="line">      +012 01545 未限定的列名被解释为一个有相互关系的引用</span><br><span class="line">      +098 01568 动态SQL语句用分号结束</span><br><span class="line">      +100 02000 没有找到满足SQL语句的行</span><br><span class="line">      +110 01561 用DATA CAPTURE定义的表的更新操作不能发送到原来的子系统</span><br><span class="line">      +111 01590 为2型索引设置了SUBPAGES语句</span><br><span class="line">      +117 01525 要插入的值的个数不等于被插入表的列数</span><br><span class="line">      +162 01514 指定的表空间被置为检查挂起状态</span><br><span class="line">      +203 01552 使用非唯一的名字来解决命名的限定列</span><br><span class="line">      +204 01532 命名的对象未在DB2中定义</span><br><span class="line">      +206 01533 命名的列不在SQL语句中指定的任何表中存在</span><br><span class="line">      +218 01537 因为SQL语句引用一个远程对象，不能为该SQL语句执行EXPLAIN</span><br><span class="line">      +219 01532 命名的PLAN TABLE不存在</span><br><span class="line">      +220 01546 不正确定义PLAN TABLE，检查命名列的定义</span><br><span class="line">      +236 01005 SQLDA中的SQLN的值至少应于所描述的列的个数一样大</span><br><span class="line">      +237 01594 至少有一个被描述的列应该是单值类型，因此扩展的SQLVAR条目需要另外的空间</span><br><span class="line">      +238 01005 至少应有一个被描述的列是一个LOB，因此扩展的SQLVAR条目需要另外的空间</span><br><span class="line">      +239 01005 至少应有一个被描述的列应是单值类型，因此扩展的SQLVAR条目需要另外的空间</span><br><span class="line">      +304 01515 该值不能被分配给宿主变量，因为该值不再数据类型的范围之内</span><br><span class="line">      +331 01520 不能被翻译的字符串，因此被设置为NULL</span><br><span class="line">      +339 01569 由于与DB2 2.2版本的子系统连接，所以可能存在字符转换问题</span><br><span class="line">      +394 01629 使用优化提示来选择访问路径</span><br><span class="line">      +395 01628 设置了无效的优化提示，原因代码指定了为什么，忽略优化提示</span><br><span class="line">      +402 01521 未知的位置</span><br><span class="line">      +403 01522 本地不存在CREAT ALIAS对象</span><br><span class="line">      +434 01608 在DB2未来发布的版本中将不支持指定的特性，IBM建议你停止使用这些特性</span><br><span class="line">      +445 01004 值被CAST函数截取</span><br><span class="line">      +462 01Hxx 由用户定义的函数或存储过程发出的警告</span><br><span class="line">      +464 01609 命名的存储过程超出了它可能返回的查询结果集的个数限制</span><br><span class="line">      +466 01610 指定由命名的存储过程返回的查询结果集的个数。成功完成</span><br><span class="line">      +494 01614 由存储过程返回的结果集的个数超过了由ASSOCIATE LOCATORS语句指定的结果集定位器的个数</span><br><span class="line">      +495 01616 因为倒台SQL的成本估算超出了在ELST中指定的警告阀值，所以发出警告</span><br><span class="line">      +535 01591 请求一个主健的定位更新，或请求一个使用自我引出约束的表的删除操作</span><br><span class="line">      +541 01543 命名外健是一个重复的引用约束</span><br><span class="line">      +551 01548 命名的授权ID缺少在命名的DB2对象上执行命名操作的权限</span><br><span class="line">      +552 01542 命名的授权ID缺少执行命名操作的权限</span><br><span class="line">      +558 01516 已经被授权该PUBLIC，因此WITH GRANT OPTION不可用</span><br><span class="line">      +561 01523 对ALTER REFERENCES INDEX 和TRIGGER特权，PUBLIC AT ALL LOCATION无效</span><br><span class="line">      +562 01560 因为GRANTEE已经拥有这些特权，所以一个或更多的特权被忽略</span><br><span class="line">      +585 01625 模式名指定了不止一次</span><br><span class="line">      +599 01596 没有为长字符数据类型（BLOB，CLOB和DBCLOB）建立比较函数</span><br><span class="line">      +610 01566 由于建立了一个指定为DEFER YES的索引，指定的对象处于PENDING状态，或者因为使用了ALTER</span><br><span class="line">      INDEX改变关键值的范围，所以指定的对象处于PENDING状态</span><br><span class="line">      +625 01518 因为删除了主健索引，所以表定义被标注为不完整</span><br><span class="line">      +626 01529 删除了加强UNIQUE约束的索引，唯一性不在被加强</span><br><span class="line">      +645 01528 因为建立的索引中没有包含NULL，所以WHERE NOT NULL被忽略</span><br><span class="line">      +650 01538 不能更改或者建立已命名的表为从属表</span><br><span class="line">      +653 01551 在已指定的分区表空间中尚没有建立指定的分区索引，所以分区索引不可得</span><br><span class="line">      +655 01597 为CREATE或ALTER</span><br><span class="line">      STOGROUP语句指定特定或者非特定的卷ID，在DB2较新发布的版本中（版本6以后）将不再支持他们</span><br><span class="line">      +658 01600 当建立目录索引时，不能指定SUBPAGES语句，SUBPAGES将被忽略，并缺省为1</span><br><span class="line">      +664 01540 分区索引的限制关键字超出了最大值</span><br><span class="line">      +738 01530 已命名的对象的更改可能像只读系统中对象的改变要求一样</span><br><span class="line">      +799 0157 ET语句中引用的特定寄存器不存在，将忽略 SET请求</span><br><span class="line">      +802 01519 数据溢出或者因除法异常而引起的数据异常错误</span><br><span class="line">      +806 01553 ISOLATION（RR）与LOCKSIZE PAGE 冲突</span><br><span class="line">      +807 01554 由于十进制乘法导致溢出</span><br><span class="line">      +863 01539 连接成功，但是只支持SBCS</span><br><span class="line">      +2000 56094 SUBPAGES不等于1的1型索引不能成为数据共享环境中的缓冲池组依赖者</span><br><span class="line">      +2002 01624 因为指定的缓冲池不允许超高速缓存，GNPCACHE指定被忽略</span><br><span class="line">      +2007 01602 因为DB2子系统的参数禁用&quot;提示(hiats）&quot;所以不能指定优化提示</span><br><span class="line">      +30100 01558 分布式协议错误被检测到，提供原来的SQLCODE和SQLSTATE</span><br><span class="line">      -007 42601 SQL语句中由非法字符</span><br><span class="line">      -010 42603 字符串常量非正常终止；检查到有遗漏的引号标志</span><br><span class="line">      -029 42601 需要INTO语句</span><br><span class="line">      -060 42815 某特定数据类型的长度或者标量规范无效</span><br><span class="line">      -084 42612 不能执行SQL语句，因为该语句对动态SQL无效或者对OS/390的DB2无效</span><br><span class="line">      -097 42601 在单位类型、用户自定义的函数以及过程中不能使用带有CAST的LONG VARCHAR或LONGVARGRAPHIC</span><br><span class="line">      -101 54001 SQL语句超出了已确定的DB2限制：例如，表的数目太多，语句中的字节太多</span><br><span class="line">      -102 54002 字符串常量太长</span><br><span class="line">      -103 42604 无效数学文字</span><br><span class="line">      -104 42601 SQL语句中遇到非法符号</span><br><span class="line">      -105 42604 无效的字符串格式；通常引用一个格式不正确的图形字符串</span><br><span class="line">      -107 42622 对象名太长</span><br><span class="line">      -108 42601 RENAME语句中指定的名字有错误，不能使用限定词</span><br><span class="line">      -109 42601 指定了无效语句；例如CREATE VIEW不能包含ORDER BY 语句</span><br><span class="line">      -110 42606 遇到了无效的十六进制的文字</span><br><span class="line">      -111 42901 指定的列函数没有给出列名</span><br><span class="line">      -112 42607 无效的列函数语法；列函数不能运行与其他的列函数之上</span><br><span class="line">      -113 42602 遇到无效字符</span><br><span class="line">      -114 42961 该语句的位置名称必须与当前服务器匹配，但是却没有匹配</span><br><span class="line">      -115 42601 因为比较运算符没有伴着一个表达式或者列表，遇到了无效谓词</span><br><span class="line">      -117 42802 待插入的数值的个数于被插入的行中的列数不相等</span><br><span class="line">      -118 42902 数据修改语句(UPDATE或DELETE）和FROM语句中的表和视图命名不合法</span><br><span class="line">      -119 42803 HAVING语句中的列的列表与GROUP BY语句中的列列表不匹配</span><br><span class="line">      -120 42903 不允许WHERE语句、SET语句、VALUES语句或者SET ASSIGNMENT语句引用列函数</span><br><span class="line">      -121 42701 在INSERT或UPDATE语句中，某一列被非法引用了两次</span><br><span class="line">      -122 42803 非法使用了列函数。因为没有用于一个列函数的所有列不再GROUP BY语句中</span><br><span class="line">      -123 42601 特定位置的参数必须是一个常数或者一个关键词</span><br><span class="line">      -125 42805 ORDER BY语句中指定了无效数字，该数字要么小于1要么大于选定的列数</span><br><span class="line">      -126 42829 不能为一个UPDATE语句指定ORDER BY语句</span><br><span class="line">      -127 42905 在子选择中DISTINCT只能指定一次</span><br><span class="line">      -128 42601 SQL谓词中NULL使用不当</span><br><span class="line">      -129 54004 SQL语句中包含的表多于15个</span><br><span class="line">      -130 22019 ESCAPE语句必须为一个字符</span><br><span class="line">       　  22025 无效的ESCAPE模式</span><br><span class="line">      -131 42818 LIKE谓词只能用于字符数据</span><br><span class="line">      -132 42824 LIKE语句、ESCAPE语句、LOCATE函数或POSSTR函数中有无效运算对象</span><br><span class="line">      -133 42906 无效相关子查询引用</span><br><span class="line">      -134 42907 大于255字节的列被不正确使用</span><br><span class="line">      -136 54005 排序关键字的长度大于4000字节</span><br><span class="line">      -137 54006 被连接的字符串太大；字符的最大值为32767；图形的最大值为16382</span><br><span class="line">      -138 22011 SUBSTR列函数的第二个或第三个操作符无效</span><br><span class="line">      -142 42612 不支持的SQL语句。该语句可能在另外的RDBMS上有效，也有可能在其他的上下文中有效（例如，VALUES只能在触发器中出现）</span><br><span class="line">      -144 58003 指定的段号无效</span><br><span class="line">      -147 42809 某一源函数不能更改。要改变源函数，必须删除该源函数并重新建立他</span><br><span class="line">      -148 42809</span><br><span class="line">      RENAME和ALTER无法执行。RENAME不能对视图或者活动RI.ST表重新命名。ALTER不能用于改变列的长度，因为该列参与了RI、一个用户退出程序、全局的临时表或打开DATACAPTURE</span><br><span class="line">      CHANGES表的列</span><br><span class="line">      -150 42807 触发活动的INSERT，UPDATE或DELETE语句中指定了无效的视图更新或一个无效的转换表</span><br><span class="line">      -151 42808 试图更新一个不可更新的视图的列、一个DB2 CATALOG表的列或者一个ROWID列</span><br><span class="line">      -152 42809 DROP CHECK试图删除一个参照约束，或者DROP FOREIGN试图删除一个检查约束</span><br><span class="line">      -153 42908 无效的视图建立请求，必须为旋转列表中列出的列出的未命名的列或者重复的列提供一个名字</span><br><span class="line">      -154 42909 不能用UNION、UNION ALL或者一个远程表建立视图</span><br><span class="line">      -156 42809 在视图上建立索引是非法的，或者在ALTER TABLE，CREATE TRIGGER，DROP</span><br><span class="line">      TABLE或LOCKTABLE语句上指定一个不是表的其他对象这是无效的</span><br><span class="line">      -157 42810 必须在FOREIGN KEY语句中指定一个表名</span><br><span class="line">      -158 42811 视图的列和选择列表中的列不相匹配</span><br><span class="line">      -159 42089 无效DROP或COMMENT ON语句</span><br><span class="line">      -160 42813 对该视图的WITH CHECK OPTION无效</span><br><span class="line">      -161 44000 正被更新的视图WITH CHECK OPTION语句使得这行不能被插入或更新</span><br><span class="line">      -164 42502 用户没有建立这个视图的权限</span><br><span class="line">      -170 42605 标量函数指定了无效的参数个数</span><br><span class="line">      -171 42815 标量函数指定了无效的数据类型长度或者无效数值</span><br><span class="line">      -173 42801 在非只读型的游标上不能指定隔离级别UR</span><br><span class="line">      -180 22007 DATE、TIME、TIMESTAMP值的字符串表示法的语法不对</span><br><span class="line">      -181 22001 不是有效的DATE、TIME、TIMESTAMP值</span><br><span class="line">      -182 42816 在算术表达式中的日期/时间值无效</span><br><span class="line">      -183 22008 在算术表达式中返回的日期/时间值的结果不在有效值的范围内</span><br><span class="line">      -184 42610 没有正确使用日期/时间值的参数标记</span><br><span class="line">      -185 57008 没有定义本定的日期/时间出口</span><br><span class="line">      -186 22505 改变本定的日期/时间出口引发这个程序的长度无效</span><br><span class="line">      -187 22506 MVS返回无效的当前日期/时间</span><br><span class="line">      -188 22503 字符串表示无效</span><br><span class="line">      -189 22522 指定的编码字符集的ID无效或没有定义</span><br><span class="line">      -190 42837 不能象所设定的那样改变（ALTER）列。只能改变（ALTER）VARCHAR列的长度</span><br><span class="line">      -191 22504 字符串中包含了无效的混合数据</span><br><span class="line">      -197 42877 当两个或多个表被联合在一起排序时，限定的列名不能在ORDER BY语句中使用</span><br><span class="line">      -198 42617 试图对空的字符串发布一个PREPARE或EXECUTE IMMEDIATE语句</span><br><span class="line">      -199 42601 SQL语句中使用了非法关键词</span><br><span class="line">      -203 42702 模糊列引用</span><br><span class="line">      -204 42704 没有定义的对象名</span><br><span class="line">      -205 42703 指定的表的列名无效</span><br><span class="line">      -206 42703 列名没有在FROM语句所引用的任何表中，或者没有在定义触发器所在的表中</span><br><span class="line">      -208 42707 不能ORDER BY指定列，应为该列不在选择列表中</span><br><span class="line">      -212 42712 指定的表名在触发器中不允许多次使用，只能使用一次</span><br><span class="line">      -214 42822 DISTINCT、ORDER BY 引起的无效表达式</span><br><span class="line">      -219 42704 因为PLAN_TABLE不存在，EXPLAIN无法执行</span><br><span class="line">      -220 55002 遇到无效的PLAN_TABLE列</span><br><span class="line">      -221 55002 如果为PLAN_TABLE定义了可供选择的列，那么，必须定义所有的列</span><br><span class="line">      -229 42708 指定的现场找不到</span><br><span class="line">      -240 428B4 LOCK TABLE语句的PART子句无效</span><br><span class="line">      -250 42718 没有定义本地位置名</span><br><span class="line">      -251 42602 记号无效</span><br><span class="line">      -300 22024 宿主变量或参数中的字符串不是以NULL为终止</span><br><span class="line">      -301 42895 无效的宿主变量数据类型</span><br><span class="line">      -302 22001 输入的变量值对指定的列无效，可能传的参数字段类型与数据库中的不匹配</span><br><span class="line">      -302 22003 输入的变量值对指定的列而言太大</span><br><span class="line">      -303 42806 因为数据类型不兼容，不能分配数值</span><br><span class="line">      -304 22003 因为数据超出了范围，不能分配数值</span><br><span class="line">      -305 22002 没有NULL指示符变量</span><br><span class="line">      -309 22512 因为引用的宿主变量被设置成NULL，所以谓词无效</span><br><span class="line">      -310 22501 十进制的宿主变量或参数包含非十进制数据</span><br><span class="line">      -311 22501 输入的宿主变量长度无效，或者时负值或者太大</span><br><span class="line">      -312 42618 没有定义宿主变量或者宿主变量不可用</span><br><span class="line">      -313 07001 宿主变量的个数不等于参数标识的个数</span><br><span class="line">      -314 42714 模糊的宿主变量引用</span><br><span class="line">      -327 22525 在最后分区的关键字范围内，不能插入行</span><br><span class="line">      -330 22021 不能成功的翻译字符串</span><br><span class="line">      -331 22021 字符串不能分配到宿主变量，因为其不能成功的被翻译</span><br><span class="line">      -332 57017 不能为两个命名的编码字符集的ID定义翻译规则</span><br><span class="line">      -333 56010 子类型无效导致翻译失败</span><br><span class="line">      -338 42972 ON语句无效，必须引用连接的列</span><br><span class="line">      -339 56082 访问DB2 2.2版本的子系统被拒绝，原因时ASCII到EBCDIC翻译不能进行</span><br><span class="line">      -350 42962 无效的大对象规范</span><br><span class="line">      -351 56084 SELECT列表中有不支持的数据类型</span><br><span class="line">      -352 56084 输入列表中有不支持的数据类型</span><br><span class="line">      -355 42993 LOB列太大，以至不能被记录在日志中</span><br><span class="line">      -372 428C1 每个表只允许有一个ROWID列</span><br><span class="line">      -390 42887 在上下文中指定的函数无效</span><br><span class="line">      -392 42855 自从前一次FETCH以来，指定游标的SQLDA已被不恰当的改变</span><br><span class="line">      -396 38505 在最后的访问过程中，视图执行SQL语句</span><br><span class="line">      -397 428D3 在某一列上不恰当的指定了GENERATED因为该列不是ROWID数据类型</span><br><span class="line">      -398 428D2 为某一个宿主变量请求LOCATOR，但是该宿主变量不是一个LOB</span><br><span class="line">      -399 22511 在INSERT语句中为ROWID列指定的值无效</span><br><span class="line">      -400 54027 在DB2编目中定义的用户自定义索引不能超过100个</span><br><span class="line">      -401 42818 算术操作符或比较操作符的操作对象不是兼容的</span><br><span class="line">      -402 42819 算术函数不能用于字符或日期时间数据</span><br><span class="line">      -404 22001 SQL语句指定的字符串太长</span><br><span class="line">      -405 42820 数值文字超出了范围</span><br><span class="line">      -406 22003 计算出的或者倒出的数值超出了范围</span><br><span class="line">      -407 23502 不能把NULL值插到定义为NOT NULL的列中</span><br><span class="line">    解决方法：</span><br><span class="line">其中对于DB2数据库错误信息的说明：SQLSTATE: 23502 插入或更新值为空，但该列不能包含空值。</span><br><span class="line">分析DB2报出的错误信息，主要从六个方面进行分析：SQLCODE,        SQLSTATE,    ,SQLERRMC,     TBSPACEID,     TABLEID,     COLNO</span><br><span class="line">1、先从SQLCODE和SQLSTATE两方面的数字确认是什么原因（见网址：http://www.knowsky.com/538581.html）</span><br><span class="line">2、在根据TBSPACEID和TABLEID两方面确认是哪个表</span><br><span class="line">    SQL语句：select * from syscat.tables where tbspaceid=&quot;&quot; and tableid=&quot;&quot;</span><br><span class="line">3、根据COLNO确认是哪个列出问题</span><br><span class="line"></span><br><span class="line">                    上面三步可以汇总成一个SQL语句</span><br><span class="line">        SELECT tabschema, tabname, colname</span><br><span class="line">FROM syscat.columns</span><br><span class="line">WHERE colno = 4 AND</span><br><span class="line">( tabschema, tabname ) IN</span><br><span class="line">( SELECT tabschema, tabname</span><br><span class="line">FROM syscat.tables</span><br><span class="line">WHERE tbspaceid = 4 AND</span><br><span class="line">tableid = 47 )</span><br><span class="line"></span><br><span class="line">      -408 42821 数值不能被更新或插入，因为他与列的数据类型不兼容</span><br><span class="line">      -409 42607 COUNT函数指定的运算对象无效</span><br><span class="line">      -410 42820 浮点文字笔30个字符的最大允许长度长</span><br><span class="line">      -411 56040 CURRENT SQLID使用无效</span><br><span class="line">      -412 42823 在子查询的选择列表中遇到了多个列</span><br><span class="line">      -413 22003 当转换为一个数字型数据类型时，数据溢出</span><br><span class="line">      -414 42824 LIKE谓词不能运行于用数字或日期时间类型定义的列</span><br><span class="line">      -415 42825 为UNION操作指定的选择列表不是联合兼容的</span><br><span class="line">      -416 42907 包含UNION操作符的SQL语句不允许有长的字符串列</span><br><span class="line">      -417 42609 两参数标识符作为运算对象被指定在同一谓词的两边</span><br><span class="line">      -418 42610 参数标识符使用无效</span><br><span class="line">      -419 42911 十进制除法无效</span><br><span class="line">      -420 22018 字符串自变量值不符合函数的要求</span><br><span class="line">      -421 42826 UNION操作的选择列表中没有提供相同数目的列</span><br><span class="line">      -423 0F001 为LOB或结果集定位器指定的值无效</span><br><span class="line">      -426 2D528 在不允许更新的应用服务器不允许执行COMMIT语句</span><br><span class="line">      -427 2D529 在不允许更新的应用服务器不允许执行ROLLBACK语句</span><br><span class="line">      -430 38503 在用户自定义的函数或存储过程中遇到了错误</span><br><span class="line">      -433 22001 指定的值太长</span><br><span class="line">      -435 428B3 无效的应用定义的SQLSTATE</span><br><span class="line">      -438 xxxxx 使用了RAISE_ERROR函数的应用发出了一个错误</span><br><span class="line">      -440 42884 存储过程或用户自定义函数的参数列表参数个数于预期的个数不匹配</span><br><span class="line">      -441 42601 与标量函数一起使用DISTINCT或ALL是不正确的用法</span><br><span class="line">      -443 42601 指定的外部函数返回错误的SQLSTATE</span><br><span class="line">      -444 42724 与被称为存储过程或用户自定义函数有关的程序不能找到</span><br><span class="line">      -449 42878 对存储过程或用户自定义的函数，CREATE或ALTER语句不正确（缺失EXTERNAL NAME 子句)</span><br><span class="line">      -450 39501 存储过程或用户自定义函数写入存储器的值超过了参数声明的长度</span><br><span class="line">      -451 42815 CREATE FUNCTION中指定了不正确的数据类型</span><br><span class="line">      -453 42880 用户自定义函数中的RETURNS语句无效</span><br><span class="line">      -454 42723 指定的函数识别标记与已存在的另一函数的识别标记冲突</span><br><span class="line">      -455 42882 模式名不比配</span><br><span class="line">      -456 42710 为用户自定义函数指定的函数名已经存在</span><br><span class="line">      -457 42939 用户自定义函数或用户自定义类型正试图使用系统中定义的函数或者类型所用的名称</span><br><span class="line">      -458 42883 没有找到函数</span><br><span class="line">      -463 39001 特定的外部例程返回无效的SQLSTATE</span><br><span class="line">      -469 42886 参数定义为OUT或INOUT的CALL语句必须提供宿主变量</span><br><span class="line">      -470 39002 指定了NULL参数，但是该例程却不支持NULL</span><br><span class="line">      -471 55023 存储过程或用户自定义函数失败：提供原因代码</span><br><span class="line">      -472 24517 外部的函数程序使游标处于打开状态</span><br><span class="line">      -473 42918 用户自定义数据类型命名不能和系统定义的数据类型一样</span><br><span class="line">      -475 42866 结果类型不能被转换成RETURNS类型</span><br><span class="line">      -476 42725 在其模式中该函数不是独一无二的</span><br><span class="line">      -478 42893 不能DROP或REVOKE特定的对象，因为其他对象依赖于该对象</span><br><span class="line">      -480 51030 直到存储过程已经被CALL后，DESCRIBE PROCEDURE和ASSOCIATE LOCATORS才能被发布</span><br><span class="line">      -482 51030 存储过程不返回到任何一个定位器</span><br><span class="line">      -483 42885 CREATE FUNCTION语句中的参数个数与源函数中的参数个数不匹配</span><br><span class="line">      -487 38001 选择了NO SQL选项建立指定的存储过程或用户自定义函数，但却视图发布SQL语句</span><br><span class="line">      -491 42601 CREATE</span><br><span class="line">      FUNCTION语句无效，因为该语句没有RETURNS语句或者因为该语句没有指定有效的SOURCE或者EXTERNAL语句</span><br><span class="line">      -492 42879 指定函数的指定参数的个数有错误</span><br><span class="line">      -495 57051 语句的估计处理器成本超出了资源限制</span><br><span class="line">      -496 51033 语句无法执行，因为当前服务器与调用存储过程的服务器不同</span><br><span class="line">      -497 54041 指定的数据库超过了32767 OBID的上限，或者CREATE DATABASE语句使之达到了32511DBID的上限</span><br><span class="line">      -499 24516 指定的游标已被分配到结果集，该结果集来自已经指定的存储过程</span><br><span class="line">      -500 24501 因为连接被破坏，WITH HOLD游标被关闭</span><br><span class="line">      -501 24501 在试图获取数据或关闭一个游标前必须打开一个游标</span><br><span class="line">      -502 24502 在没有关闭游标前不能再次打开游标</span><br><span class="line">      -503 42912 因为列在游标的FOR UPDATE OF语句中没有被指定，该游标用于获取该列，所以不能更新该列</span><br><span class="line">      -504 34000 不能引用一个游标，因为他不是定义到程序里的</span><br><span class="line">      -507 24501 在试图更新或者删除WHERE CURRENT OF前，必须打开游标</span><br><span class="line">      -508 24504 因为被引用的游标当前不是处于数据行上，所以不能被更新或删除</span><br><span class="line">      -509 42827 除了在游标上指定的那个表（该表由WHERE CURRENT OF语句引用的）以外，再也不能从别的表上更新数据</span><br><span class="line">      -510 42828 表或视图不能被修改</span><br><span class="line">      -511 42829 对不可修改的表或视图，FOR UPDATE OF语句无效</span><br><span class="line">      -512 56023 对远程对象的无效引用</span><br><span class="line">      -513 42924 一个别名不能再被定义成另外的别名</span><br><span class="line">      -514 26501 游标尚没有被准备</span><br><span class="line">      -516 26501 试图描述未准备好的SQL语句</span><br><span class="line">      -517 07005 因为SQL语句尚没有准备好，游标无效</span><br><span class="line">      -518 07003 试图执行尚没有准备好的SQL语句</span><br><span class="line">      -519 24506 当为游标的SQL语句发布一个准备语句是，游标不能是打开的</span><br><span class="line">      -525 51015 不能在已指定的程序包中执行SQL语句，因为在绑定时间内该程序包无效</span><br><span class="line">      -526 42995 在给定的上下文中，不能使用全局的临时表</span><br><span class="line">      -530 23503 对特定的约束名指定了无效的外健值</span><br><span class="line">      -531 23504 从版本5开始，父关键字的多行更新将试图删除一个外关键字依赖的父关键字值，在版本5以前，当引用主关键值外健值当前</span><br><span class="line">      存在时，试图更新该主健值</span><br><span class="line">      -532 23504 删除操作违反了已指定的参照约束</span><br><span class="line">      -533 21501 多行插入无效，试图将多行插到自我引用的表中</span><br><span class="line">      -534 21502 可改变主健列值的更新语句不能在同一时刻用于更新多行</span><br><span class="line">      -535 21502 当从自我引用表中删除数据或者更新主健列时，不能指定WHERE CURRENT OF。不是版本5的子系统才调用该代码</span><br><span class="line">      -536 42914 因为某一特定表的参照约束存在，所以删除语句无效</span><br><span class="line">      -537 42709 在外健语句或主健语句的规范中，每个列的出现不能多于一次</span><br><span class="line">      -538 42830 无效的外健；不符合引用的表没有主健</span><br><span class="line">      -539 42888 不能定义外健，因为被引用的表没有主健</span><br><span class="line">      -540 57001 表定义不完整，直到为主健建立了唯一索引或UNIQUE语句、或者包含GENERATED BYDEFAULT属性的ROWID列</span><br><span class="line">      -542 42831 可以为空的列不允许作为主健的一部分包含在内</span><br><span class="line">      -543 23511 因为该表是指定了SET NULL删除规则的参照约束的父表而且检查约束不允许NULL，所以DELETE不能发生</span><br><span class="line">      -544 23512 不能用ALTER添加检查约束，因为已存在的某行与该检查约束冲突</span><br><span class="line">      -545 23513 INSERT或者UPDATE导致检查约束冲突</span><br><span class="line">      -546 42621 在CREATE或ALTER TABLE中指定的检查约束无效</span><br><span class="line">      -548 42621 因为指定的列而引起的检查约束无效</span><br><span class="line">      -549 42509 DYNAMICRULES（BIND）计划或程序包的无效SQL语句</span><br><span class="line">      -551 42501 用户试图对不拥有权限的特定的对象进行操作，或者表不存在</span><br><span class="line">      -552 42502 用户试图执行未被授权的操作</span><br><span class="line">      -553 42503 不能指定CURRENT SQLID，因为用户尚没有被允许改变那个ID</span><br><span class="line">      -554 42502 不能对你本身赋予一个权限</span><br><span class="line">      -555 42502 不能对你本身撤销一个权限</span><br><span class="line">      -556 42504 不能撤销用户没有拥有的权限</span><br><span class="line">      -557 42852 指定了不一致的授予或撤销关键词</span><br><span class="line">      -558 56025 为授予或撤销语句指定了无效的语句（一个或一组）</span><br><span class="line">      -559 57002 DB2权限机制已经禁用，授予或者撤销不能被发布</span><br><span class="line">      -567 42501 指定的权限ID缺少对指定的程序包的绑定权限</span><br><span class="line">      -571 25000 不允许多点更新</span><br><span class="line">      -573 42890 不能定义参照约束，因为已指定的父表中在指定的列上没有唯一健</span><br><span class="line">      -574 42864 指定的缺省与列定义冲突</span><br><span class="line">      -577 38002 试图修改用户自定义函数中的数据或者存储过程中的数据，但这些对象的建立没有选择MODIFIES SQL DATA选项</span><br><span class="line">      -579 38004 试图修改用户自定义函数中的数据或者存储过程中的数据，但这些对象的建立没有选择READ SQL DATA选项，也没有选择</span><br><span class="line">      MODIFIES SQL DATA选项</span><br><span class="line">      -580 42625 CASE表达式中的结果表达式不能都是空的</span><br><span class="line">      -581 42804 CASE表达式中的结果表达式为不兼容的数据类型</span><br><span class="line">      -582 42625 SEARCHED－WHEN－CLAUSE中的查找条件指定了一个限定的、IN或EXISTS谓词</span><br><span class="line">      -583 42845 指定的函数失败，因为他不是决定性的，或者可能有外部动作</span><br><span class="line">      -585 42732 在当前路径中模式名不止一次出现</span><br><span class="line">      -586 42907 CURRENT PATH专用寄存器在长度上不能超过254字符</span><br><span class="line">      -587 428C6 项目引用的列表必须是同一个家族</span><br><span class="line">      -590 42734 在命名的存储过程或用户自定义的函数中的参数必须是独一无二的</span><br><span class="line">      -592 42510 没有授权权限，让你在WLM环境中建立的存储过程或者用户自定义函数</span><br><span class="line">      -601 42710 试图创建（或重命名）已经存在的对象</span><br><span class="line">      -602 54008 CREATE INDEX语句中指定的列太多</span><br><span class="line">      -603 23515 因为发现有重复值，所以不能建立唯一的索引</span><br><span class="line">      -604 42611 在CREATE或ALTER TABLE语句中的为数据类型指定的长度、精度以及标度无效</span><br><span class="line">      -607 42832 指定的INSERT、UPDATE或DELETE语句不能被发布，应为这些语句对DB2 CATLOG表执行写操作</span><br><span class="line">      -611 53088 当LOCKSIZE是TABLE或者TABLESPACE时，LOCKMAX必须为0</span><br><span class="line">      -612 42711 在同一个表、索引或试图中不允许有重复列名</span><br><span class="line">      -613 54008 主健或UNIQUE约束太长或者包含了太多的列</span><br><span class="line">      -614 54008 已经超过了索引的内部健长度的最大长度（255）限制</span><br><span class="line">      -615 55006 不能删除这个程序包，因为该程序包目前正在执行</span><br><span class="line">      -616 42893 指定的对象不能被删除，因为其他对象依赖于该对象</span><br><span class="line">      -617 56089 对于DB2版本6，1型索引无效。对于以前的版本，1型索引不能用LOCKSIZE ROW或LARGE表空间定义</span><br><span class="line">      -618 42832 对DB2 CATALOG表的请求操作时不允许的</span><br><span class="line">      -619 55011 DSNDB07不能修改，除非他先被停止了</span><br><span class="line">      -620 53001 对在DSNDB07中的表空间不允许指定该关键词</span><br><span class="line">      -621 58001 遇到了重复的DBID，遇到了系统问题</span><br><span class="line">      -622 56031 不能指定FOR MIXED DATA因为没有安装混合数据选项</span><br><span class="line">      -623 55012 不能为单一的表定义多个族索引</span><br><span class="line">      -624 42889 不能为单一的表定义多个主健</span><br><span class="line">      -625 55014 用主健定义的表要求唯一索引</span><br><span class="line">      -626 55015 不能发布ALTER语句来改变PRIQTY SECQTY或ERASE，除非先停止了表空间</span><br><span class="line">      -627 55016 不能发布ALTER语句来改变PRIQTY SECQTY或ERASE，除非先把表空间定义为使用存储器组的表空间</span><br><span class="line">      -628 42613 指定语句时相互排斥的（例如，不能分区一个分段的表空间）</span><br><span class="line">      -629 42834 因为该外健不能包含空值，所以SET NULL无效</span><br><span class="line">      -630 56089 不能为1型索引指定WHERE NOT NULL</span><br><span class="line">      -631 54008 无效的外健；要么是比254个字节长，要么包含的列数多于40</span><br><span class="line">      -632 42915 指定的删除规则禁止把这个表定义为已制定表的从属表</span><br><span class="line">      -633 42915 无效删除规则；必须使用特定的强制删除规则</span><br><span class="line">      -634 42915 在这种情况下，DELETE CASCADE不允许</span><br><span class="line">      -635 42915 删除规则不能有差异或者不能为SET NULL</span><br><span class="line">      -636 56016 在分区索引健的升序或降序规范中，分区所以必须与该规范一致</span><br><span class="line">      -637 42614 遇到重复的关键词</span><br><span class="line">      -638 42601 在CREATE TABLE语句中缺少列定义</span><br><span class="line">      -639 56027 带有SET NULL的删除规则的外健的可空列不能是分区索引的列</span><br><span class="line">      -640 56089 不能为这个表空间指定LOCKSIZE ROW，因为在该表空间中的表上定义了1型索引</span><br><span class="line">      -642 54021 唯一约束包含太多的列</span><br><span class="line">      -643 54024 检查约束超出了3800个字符的最大长度</span><br><span class="line">      -644 42615 在SQL语句中为关键词指定的值无效</span><br><span class="line">      -646 55017 在指定的分区表空间或者缺省表空间中不能创建表，因为指定的表空间已经包含了一个表</span><br><span class="line">      -647 57003 指定的缓冲池无效，因为他没有被激活</span><br><span class="line">      -650 56090 ALTER INDEX不能被执行；提供了原因代码</span><br><span class="line">      -651 54025 如果CREARE或ALTER TABLE被允许，表对象的描述词（object</span><br><span class="line">      descriptor,OBD）将超过最大值（32KB）</span><br><span class="line">      -652 23506 遇到了EDITRPROC或VALIDPROC冲突</span><br><span class="line">      -653 57004 在分区表空间中的表不可用，因为分区索引尚未被创建</span><br><span class="line">      -655 56036 在卷的列表中，STOGROUP不能指定为特定的或不特定（&quot;*&quot;）的卷</span><br><span class="line">      -658 42917 当试图删除指定的对象时，无法删除该对象，该对象的删除必须通过删除与之相关联的对象完成</span><br><span class="line">      -660 53035 不正确的分区索引规范，必须为族索引定义有限制的关键字</span><br><span class="line">      -661 53036 分区索引没有指定恰当的分区数目</span><br><span class="line">      -662 53037 试图在未分区的表空间（分段的或简单的）上建立分区索引</span><br><span class="line">      -663 53038 为分区索引指定的关键字限制值是一个无效数字</span><br><span class="line">      -665 53039 为ALTER TABLESOACE语句指定了无效的PART语句</span><br><span class="line">      -666 57005 SQL语句不能被处理，因为指定的函数当前正处于进行过程中</span><br><span class="line">      -667 42917 不能明确的删除分区表空间的族索引，必须除去分区表空间来去掉分区索引</span><br><span class="line">      -668 56018 不能向用EDITPROC定义的表中添加列</span><br><span class="line">                解决：CALL SYSPROC.ADMIN_CMD(&apos;reorg table FININCCALDTLHIST&apos;);</span><br><span class="line"></span><br><span class="line">      -669 42917 不能显式的删除分区表空间中的表，必须删除分区表空间来删除表</span><br><span class="line">      -670 54010 表的记录长度超过了页面的大小</span><br><span class="line">      -671 53040 不能更改指定的表空间的缓冲池，因为这将改变表空间的页面大小</span><br><span class="line">      -672 55035 在命名的表上不允许DROP</span><br><span class="line">      -676 53041 只有4KB的缓冲池可被用于一个索引</span><br><span class="line">      -677 57011 缓冲池扩展失败，由于可用的虚拟内存的大小不足</span><br><span class="line">      -678 53045 为才分区索引中指定的限制健提供的值与数据类型不符</span><br><span class="line">      -679 57006 不能创建某一个特定对象，因为该对象的一个drop目前正在挂起</span><br><span class="line">      -680 54011 对DB2表不能超过750列</span><br><span class="line">      -681 23507 列违反了指定的FIELDPROC</span><br><span class="line">      -682 57010 不能载入FIELDPROC</span><br><span class="line">      -683 42842 列、单值类型、函数或者过程无效，因为不兼容语句。例如，指定的INTEGER具有FORBITDATA选项</span><br><span class="line">      -684 54012 指定的文字列表不能超过254个字节</span><br><span class="line">      -685 58002 FIELDPROC返回一个无效的域描述</span><br><span class="line">      -686 53043 用FIELDPROC定义的一个列不能与一个使用不同的FIELDPROC定义的列作比较</span><br><span class="line">      -687 53044 列不能与一个非兼容字段类型的列比较</span><br><span class="line">      -688 58002 返回不正确的数据</span><br><span class="line">      -689 54011 从属表定义了太多的列</span><br><span class="line">      -690 23508 数据定义的控制支持拒绝这个语句</span><br><span class="line">      -691 57018 命名的注册表不存在</span><br><span class="line">      -692 57018 命名的索引不存在，但命名的注册表需要该索引</span><br><span class="line">      -693 55003 命名的注册表/索引的命名列无效</span><br><span class="line">      -694 57023 DROP正在命名的注册表上挂起</span><br><span class="line">      -696 42898 由于相关的名字或者转换表的名字使用不正确，指定的触发器无效</span><br><span class="line">      -697 42899 FOR</span><br><span class="line">      EACH语句被指定，因此与OLD合NEW相关的名字是不允许的，或者不能为一个BEFORE触发器指定OLD_TABLE和NEW_TABLE</span><br><span class="line">      -713 42815 指定的专用寄存器是无效的</span><br><span class="line">      -715 56064 命名的程序不能被运行，因为他依赖与你所安装的DB2版本的部件，但是你的数据中心没有安装这个部件</span><br><span class="line">      -716 56065 命名的程序使用这个版本的不正确的发行版本做了预编译</span><br><span class="line">      -717 56066 BIND失败，因为他依赖与你所安装的DB2版本的部件，但是你的数据中心没有安装这个部件</span><br><span class="line">      -718 56067 REBIND失败，因为IBMREQD列无效</span><br><span class="line">      -719 42710 不能BIND ADD一个已经存在的程序包</span><br><span class="line">      -720 42710 不能BIND REPLACE一个已经存在的程序包版本</span><br><span class="line">      -721 42710 程序包的一致性记号必须是独一无二的</span><br><span class="line">      -722 42704 绑定错误，因为指定的程序包不存在</span><br><span class="line">      -723 09000 一个触发的SQL语句接受到一个错误</span><br><span class="line">      -724 54038 达到了（16）级联间接的SQL语句的最大项目</span><br><span class="line">      -725 42721 对专门指定的寄存器提供了一个无效值</span><br><span class="line">      -726 55030 因为SYSPKSYSTEM条目，不能绑定这个程序包</span><br><span class="line">      -728 56080 指定的数据类型不能与私有协议发布一起使用</span><br><span class="line">      -729 429B1 用COMMIT ON RETURN定义的存储过程不能用作嵌套的CALL过程的目标</span><br><span class="line">      -730 56053 在只读的共享数据库中为表定义的参照完整性无效</span><br><span class="line">      -731 56054 VSAM数据集必须用SHAREOPTION（1.3）定义</span><br><span class="line">      -732 56055 被定义为只读型数据库却拥有没有定义空间或者索引空间的DB2子系统</span><br><span class="line">      -733 56056 只读共享数据库的定义不一致</span><br><span class="line">      -734 56057 一旦一个数据库被定义为ROSHARE READ，他将不能被更改为其他不同的ROSHARE状态</span><br><span class="line">      -735 55004 用DBID名称标识的数据库不再是一个只读共享数据库</span><br><span class="line">      -736 53014 命名的DBID无效</span><br><span class="line">      -737 53056 在这种状况下，不能建立一个隐含的表空间</span><br><span class="line">      -739 56088 因为同时指定了ALLOW PARALLEL和MODIELES SQL DATA这两个语句，因此已设定的函数将不能再被更改</span><br><span class="line">      -740 51034 在这种方式下不能用MODIELES SQL DATA定义指定的函数</span><br><span class="line">      -741 55030 已经为命名的共享组成员的数据定义了工作文件数据库</span><br><span class="line">      -742 53004 DSNDB07是隐含的工作文件数据库</span><br><span class="line">      -746 57053 在特定的触发器、存储过程或函数中的SQL语句违反嵌套SQL限制</span><br><span class="line">      -747 57054 指定的表是不可用的除非为LOB数据列建立起必须的辅助表</span><br><span class="line">      -748 54042 在指定的辅助表上已经有一个索引</span><br><span class="line">      -750 42986 不能对已指定的表重新命名,因为他至少在一个现存的视图或触发器中被引用</span><br><span class="line">      -751 42987 存储过程或用户自定义的函数试图执行一个不允许执行的SQL语句。DB2的线程被置于MUST_ROLLBACK状态</span><br><span class="line">      -752 0A001 无效CONNECT语句</span><br><span class="line">      -763 560A1 无效的表空间名</span><br><span class="line">      -764 560A2 LOB表空间必须与其相关的基表空间同在一个数据库中</span><br><span class="line">      -765 560A3 表和数据库不兼容</span><br><span class="line">      -766 560A4 不能对辅助表进行请求的操作</span><br><span class="line">      -767 42626 CREATE INDEX失败，因为在辅助表中为索引指定了列，或者因为没有为非辅助表的索引指定列</span><br><span class="line">      -768 560A50 不能为指定的列或者指定的分区建立辅助表，因为其辅助表已经存在</span><br><span class="line">      -769 53096 CREATE AUX TABLE的规格与基表不匹配</span><br><span class="line">      -770 530A6 指定的表必须有一个ROWID列，那么该表才可以包含一个LOB列</span><br><span class="line">      -771 428C7 无效的ROWID列规范</span><br><span class="line">      -797 42987 CREATE TRIGGER包含不被支持的语法</span><br><span class="line">      -798 428C9 不能把一个值插入到用GENERATED ALWAYS定义的ROWID列</span><br><span class="line">      -802 22012 某一特定操作发生了异常错误。被零除</span><br><span class="line">       　 22003 某一特定操作发生了异常错误。但不是被零除</span><br><span class="line">      -803 23505 不能插入行，因为这将违反唯一索引的约束</span><br><span class="line">      -804 07002 SQLDA的调用参数列表有误</span><br><span class="line">      -805 51002 在计划中没有发现DBRM或程序包名</span><br><span class="line">      -807 23509 对已指定的环境和连接，该程序包不可用</span><br><span class="line">      -808 08001 CONECT语句与程序中的第一个CONNECT语句不一致</span><br><span class="line">      -811 21000 当多行作为一内嵌的选择语句的返回结果时，必须使用游标</span><br><span class="line">      -812 22508 在CURRENT PACKAGESET中的ID集合是空白的，语句不能被执行</span><br><span class="line">      -815 42920 在一个内置选择语句或者一个基本谓词的子查询中，显式的或隐含的指定了GROUP BY或HAVING语句</span><br><span class="line">      -817 25000 执行SQL语句将可能导致禁止更新用户数据或DB2编目</span><br><span class="line">      -818 5103 计划&lt;－&gt;载入组件的时间戳不匹配，在执行计划中没有从同一个预编译中建立DBRM，该预编译是作为组件载入的</span><br><span class="line">      -819 58004 视图不能重建，因为在DB2编目中存储的分析树长度为0</span><br><span class="line">      -820 58004 在这个DB2版本的DB2编目中遇到了无效值</span><br><span class="line">      -822 51004 在SQLDA中遇到了无效地址</span><br><span class="line">      -840 54004 在选择列表或插入列表中返回的项目太多</span><br><span class="line">      -842 08002 到指定位置的连接已经存在</span><br><span class="line">      -843 08003 SET CONNECTION或RELEASE语句无法执行，因为连接不存在</span><br><span class="line">      -870 58026 宿主变量描述符的个数不等于语句中宿主变量的个数</span><br><span class="line">      -872 51302 这个子系统已指定了有效的CCSID</span><br><span class="line">      -873 53090 同一SQL语句中，不能同时引用EBCDIC表中的定义的列和ASCII表中定义的列</span><br><span class="line">      -874 53901 指定对象的编码方案与其表空间的编码方案不匹配</span><br><span class="line">      -875 42988 指定的操作符不能用于ASCII数据</span><br><span class="line">      -876 53092 不能为指定的原因创建对象：提供了原因代码</span><br><span class="line">      -877 53093 数据库或表空间不允许用ASCII，必须使用EBCDIC</span><br><span class="line">      -878 53094 该PLAN——TABLE不能是ASCII，必须使用EBCDIC</span><br><span class="line">      -879 53095 指定对象的CREATE或ALTER语句不能将列、单值类型，某个存储过程或用户自定义函数的参数定义为以下类型：MAXED DATA， GRAPHIC，VARGRAPHIC，LONGVARGRAPHIC，因为系统没有为指定的编码方案定义相应的CCSID</span><br><span class="line">      -900 08003 应用处理没有连接到应用服务器，语句不能被执行</span><br><span class="line">      -901 58004 遇到时断时续的系统错误，该错误不能抑制后继的SQL语句的执行</span><br><span class="line">      -902 58005 内部控制块的指针错误，要求重新绑定</span><br><span class="line">      -904 57011 指定的资源不可用</span><br><span class="line">      -905 57014 超出了资源上限</span><br><span class="line">      -906 51005 因为重大错误，SQL语句无法执行</span><br><span class="line">      -908 23510 当前资源限制设施的规范或者自动重绑定的系统参数不允许BIND，REBIND，AUTOREBIND</span><br><span class="line">      -909 57007 对象已被删除</span><br><span class="line">      -910 57007 因为在该对象上挂起DROP，所以不能访问该对象</span><br><span class="line">      -911 40001 当前工作单元已被回滚</span><br><span class="line">      -913 57033 因为死锁或超时导致不成功执行</span><br><span class="line">      -917 42969 绑定程序包已经失败</span><br><span class="line">      -918 51021 SQL语句不能被执行，因为连接丢失</span><br><span class="line">      -919 56045 需要一个ROLLBACK</span><br><span class="line">      -922 42505 连接权限失败。试图从TSO、CICS或IMS访问DB2，同时相应的连接设施处于非活动的状态</span><br><span class="line">      -923 57015 因为DB2不可用，所以不能建立连接</span><br><span class="line">      -924 58006 遇到了DB2内部的连接错误：提供了原因代码</span><br><span class="line">      -925 2D521 SQL的COMMIT语句不能从CICS或IMS/TM发布</span><br><span class="line">      -926 2D521 SQL的ROLLBACK语句不能从CICS或IMS/TM发布</span><br><span class="line">      -927 51006 当正在连接的环境没有建立时，语言接口被调用。利用DSN命令激发该程序</span><br><span class="line">      -929 58002 数据获取退出已经失败（DPROP）</span><br><span class="line">      -939 51021 由于远程服务器的未请求的回滚，要求一个回滚</span><br><span class="line">      -947 56038 SQL语句失败，因为更新不能被传播（DPROP）</span><br><span class="line">      -948 56062 DDF没有启动，分布式操作无效</span><br><span class="line">      -950 42705 在SQL语句中指定的位置在SYSIBM.LOCATIONS中没有定义</span><br><span class="line">      -965 51021 存储过程非正常终止（在DB2 6之前的版本）</span><br><span class="line">      -981 57015 当前不是处于允许SQL的状态时，试图在RRSAF中执行SQL</span><br><span class="line">      -991 57015 调用连接不能建立一个到DB2的隐含或开放连接</span><br><span class="line">      -2001 53089 为储存过程指定的宿主变量参数的个数不等于预期的参数个数</span><br><span class="line">      -20003 560A7 不能为GRECP中的表空间或索引指定GBPCACHE NONE</span><br><span class="line">      -20004 560A8 对于WORKFILE对象。8KB或16Kb的缓冲池页面大小无效</span><br><span class="line">      -20005 54035 指定的对象类型超出了内部的ID极限</span><br><span class="line">      -20006 53097 当没有指定WLM环境时，LOB不能被指定为参数</span><br><span class="line">      -20070 53098 不能非LOB列建立一个辅助表</span><br><span class="line">      -20071 53099 必须指定WLM环境名</span><br><span class="line">      -20072 56052 指定的权限ID不拥有在触发器程序包上执行BIND所需的权限</span><br><span class="line">      -20073 42927 不能按照指定的要求更改命名的函数，因为在现存的视图定义中引用了该函数</span><br><span class="line">      -20074 42939 不能建立指定的对象，因为&quot;SYS&quot;是一个保留的前缀</span><br><span class="line">      -20100 56059 在被触发的SQL语句中有BIND错误，指定了错误的SQLCODE和SQLSTATE</span><br><span class="line">      -20101 56059 由于指定的原因代码，该函数失败</span><br><span class="line">      -20102 42849 在CREATE或ALTER FUNCTION语句中不能使用指定的选项</span><br><span class="line">      -20104 42856 更改一个CCSID失败</span><br><span class="line">      -20106 42945 不能改变表空间或数据库的CCSID，因为现存的试图引用</span><br><span class="line">      -30000 58008 DRDA分布协议错误；处理可以继续</span><br><span class="line">      -30002 57057 使用DRDA的分布式客户把OPEN语句连接到PREPARE，但PREPARE接受到一个SQLCODE为+495的警告</span><br><span class="line">      -30020 58009 DRDA分布协议错误；对话被解除</span><br><span class="line">      -30021 58010 DRDA分布协议错误；处理不能继续</span><br><span class="line">      -30030 58013 违反分布协议：COMMIT不成功，对话被解除（AS）</span><br><span class="line">      -30040 57012 因为不能得到资源，执行失败，处理可以继续（AS）</span><br><span class="line">      -30041 57013 因为不能得到资源，执行失败，处理不能成功的继续（AS）</span><br><span class="line">      -30050 58011 执行不成功，在BIND过程中不能执行语句</span><br><span class="line">      -30051 58012 特定的BIND过程不是处于活动状态（远程BIND），从而导致失败</span><br><span class="line">      -30052 42932 程序准备的假设错误</span><br><span class="line">      -30053 42506 程序包的拥有者遭遇授权失败</span><br><span class="line">      -30060 08004 RBD遭遇授权失败</span><br><span class="line">      -30061 08004 指定了无效或者没有存在的RDB</span><br><span class="line">      -30070 58014 目标子系统不支持这个命令</span><br><span class="line">      -30071 58015 目标子系统不支持这个对象</span><br><span class="line">      -30072 58016 目标子系统不支持这个参数</span><br><span class="line">      -30073 58017 目标子系统不支持这个参数值</span><br><span class="line">      -30074 58018 应答信息不被支持</span><br><span class="line">      -30080 08001 SNA通信错误</span><br><span class="line">      -30081 58019 TCP/IP通信错误</span><br><span class="line">      -30082 08001 由于安全冲突、通信失败：提供了原因代码</span><br><span class="line">      -30090 25000 指定的操作对远程执行失败</span><br><span class="line">      -30104 56095 在绑定选项与绑定值中有错误</span><br><span class="line">      -30105 56096 指定的绑定选项不兼容</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> db2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装java环境</title>
      <link href="/2016/04/02/Linux%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/"/>
      <url>/2016/04/02/Linux%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>Linux安装java环境</p><a id="more"></a><h2 id="第一步：首先网上下载tgz包，如本人用的jdk-7u79-linux-x64-tar-gz包，将其放到linux服务器上某一位置：如-usr-local"><a href="#第一步：首先网上下载tgz包，如本人用的jdk-7u79-linux-x64-tar-gz包，将其放到linux服务器上某一位置：如-usr-local" class="headerlink" title="第一步：首先网上下载tgz包，如本人用的jdk-7u79-linux-x64.tar.gz包，将其放到linux服务器上某一位置：如/usr/local;"></a>第一步：首先网上下载tgz包，如本人用的jdk-7u79-linux-x64.tar.gz包，将其放到linux服务器上某一位置：如/usr/local;</h2><h2 id="第二步：解压"><a href="#第二步：解压" class="headerlink" title="第二步：解压"></a>第二步：解压</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local</span><br><span class="line">tar xvf jdk-7u79-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h2 id="第三步：修改-etc-profile文件"><a href="#第三步：修改-etc-profile文件" class="headerlink" title="第三步：修改/etc/profile文件"></a>第三步：修改/etc/profile文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/jdk1.7.0_79</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><h2 id="第四步：保存，并执行以下命令，使之生效："><a href="#第四步：保存，并执行以下命令，使之生效：" class="headerlink" title="第四步：保存，并执行以下命令，使之生效："></a>第四步：保存，并执行以下命令，使之生效：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="第五步：验证"><a href="#第五步：验证" class="headerlink" title="第五步：验证"></a>第五步：验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>至此，Linux成功安装java环境。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC</title>
      <link href="/2016/03/03/JDBC/"/>
      <url>/2016/03/03/JDBC/</url>
      
        <content type="html"><![CDATA[<p>JDBC</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">//数据库连接地址</span><br><span class="line">public final static String URL = &quot;jdbc:mysql://localhost:3306/test&quot;;</span><br><span class="line">//用户名</span><br><span class="line">public final static String USERNAME = &quot;root&quot;;</span><br><span class="line">//密码</span><br><span class="line">public final static String PASSWORD = &quot;root&quot;;</span><br><span class="line">//插入操作</span><br><span class="line">public static void insert()&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        //1.加载数据库驱动</span><br><span class="line">        Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">        //2.获取数据库连接</span><br><span class="line">        Connection conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);</span><br><span class="line">        //3.构造SQL语句</span><br><span class="line">        String sql = &quot;insert into person(name,age,description)values(&apos;小白&apos;,18,&apos;猥琐的人&apos;)&quot;;</span><br><span class="line">        //4.构造Statement实例（用来发送SQL语句的载体）</span><br><span class="line">        Statement state = conn.createStatement();</span><br><span class="line">        //5.执行SQL语句</span><br><span class="line">        state.executeUpdate(sql);</span><br><span class="line">        //6.关闭连接(释放资源)</span><br><span class="line">        state.close();</span><br><span class="line">        conn.close();</span><br><span class="line">        System.out.println(&quot;SUCCESS&quot;);</span><br><span class="line">    &#125; catch (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; catch (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java片段</title>
      <link href="/2016/03/02/Java%E7%89%87%E6%AE%B5/"/>
      <url>/2016/03/02/Java%E7%89%87%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<p>Java片段</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;dynamicForeachTest&quot; resultType=&quot;Blog&quot;&gt;</span><br><span class="line">       select * from t_blog where id in</span><br><span class="line">      &lt;if test=&quot;list != null&quot; and list.size()&gt;0 &gt;</span><br><span class="line">         &lt;foreach collection=&quot;list&quot; index=&quot;index&quot; item=&quot;item&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">           #&#123;item&#125;</span><br><span class="line">         &lt;/foreach&gt;</span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">注意：非空的判断，加上红色判断！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MediacctExample example = new MediacctExample();</span><br><span class="line">example.createCriteria().andMediidEqualTo(mediId).andMainacctynEqualTo(Const.YN_Y).andInactivedateIsNull();</span><br><span class="line">example.or().andMediidEqualTo(mediId).andMainacctynEqualTo(Const.YN_Y).andInactivedateGreaterThan(effDate);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂项-算法</title>
      <link href="/2016/02/04/%E6%9D%82%E9%A1%B9-%E7%AE%97%E6%B3%95/"/>
      <url>/2016/02/04/%E6%9D%82%E9%A1%B9-%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h4 id="四舍六入五成双规则如下："><a href="#四舍六入五成双规则如下：" class="headerlink" title="四舍六入五成双规则如下："></a>四舍六入五成双规则如下：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1. 被修约的数字小于5时，该数字舍去；</span><br><span class="line">2. 被修约的数字大于5时，则进位；</span><br><span class="line">3. 被修约的数字等于5时，要看5前面的数字，若是奇数则进位，若是偶数则将5舍掉，即修约后末尾数字都成为偶数；若5的后面还有不为“0”的任何数，则此时无论5的前面是奇数还是偶数，均应进位。</span><br><span class="line"></span><br><span class="line">举例，用上述规则对下列数据保留小数点后两位数据：</span><br><span class="line"></span><br><span class="line">9.8249=9.82, 9.82671=9.83</span><br><span class="line">9.8350=9.84, 9.8351 =9.84</span><br><span class="line">9.8250=9.82, 9.82501=9.83</span><br><span class="line"></span><br><span class="line">mysql算法-四舍六入五成双</span><br><span class="line"></span><br><span class="line">SET @Val = 9.8250; -- 参数    </span><br><span class="line">SET @MinusValue = (@Val * 100 - FLOOR(@Val * 100) = 0.5) / 100; --判断是否需要减去0.01</span><br><span class="line">SET @PlusValue = FLOOR(@Val * 100) % 2 / 100; -- 判断，如果是奇数，那么加0.01</span><br><span class="line">SELECT ROUND(ROUND(@Val, 2) - @MinusValue + @PlusValue, 2) --打印出最终结果</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂项-linux</title>
      <link href="/2016/01/04/%E6%9D%82%E9%A1%B9-linux/"/>
      <url>/2016/01/04/%E6%9D%82%E9%A1%B9-linux/</url>
      
        <content type="html"><![CDATA[<p>有关linux个别命令的汇总</p><a id="more"></a><h4 id="用户监控"><a href="#用户监控" class="headerlink" title="用户监控"></a>用户监控</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">export HISTTIMEFORMAT=&quot;[%Y.%m.%d %H:%M:%S]&quot;</span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null| awk &apos;&#123;print $NF&#125;&apos;|sed -e &apos;s/[()]//g&apos;`</span><br><span class="line">HISTDIR=/var/log/.hist</span><br><span class="line">if [ -z $USER_IP ]</span><br><span class="line">then</span><br><span class="line">USER_IP=`hostname`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -d $HISTDIR ]</span><br><span class="line">then</span><br><span class="line">        mkdir -p $HISTDIR</span><br><span class="line">        chmod 777 $HISTDIR</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -d $HISTDIR/$&#123;LOGNAME&#125; ]</span><br><span class="line">then</span><br><span class="line">        mkdir -p $HISTDIR/$&#123;LOGNAME&#125;</span><br><span class="line">        chmod 300 $HISTDIR/$&#123;LOGNAME&#125;</span><br><span class="line">        fi</span><br><span class="line">export HISTSIZE=4096</span><br><span class="line">DT=`date &quot;+%Y%m%d_%H%M%S&quot;`</span><br><span class="line">export HISTFILE=&quot;$HISTDIR/$&#123;LOGNAME&#125;/$&#123;USER_IP&#125;.hist.$DT&quot;</span><br></pre></td></tr></table></figure><h4 id="获取访问ip"><a href="#获取访问ip" class="headerlink" title="获取访问ip"></a>获取访问ip</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip=`who -u am i 2&gt;/dev/null| awk &apos;&#123;print $NF&#125;&apos;|sed -e &apos;s/[()]//g&apos;`</span><br></pre></td></tr></table></figure><h4 id="环境变量配置"><a href="#环境变量配置" class="headerlink" title="环境变量配置"></a>环境变量配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/home/application/jdk1.8.0_201</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br></pre></td></tr></table></figure><h4 id="全部替换"><a href="#全部替换" class="headerlink" title="全部替换"></a>全部替换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/127.0.0.1/localhost/g&quot; `grep 127.0.0.1 -rl`</span><br></pre></td></tr></table></figure><h4 id="僵尸进程"><a href="#僵尸进程" class="headerlink" title="僵尸进程"></a>僵尸进程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@hyper /]# ps -A -ostat,ppid,pid,cmd | grep -e &apos;^[Zz]&apos;</span><br><span class="line">Z     89769  89877 [create-topics.s] &lt;defunct&gt;</span><br></pre></td></tr></table></figure><h4 id="停jar应用"><a href="#停jar应用" class="headerlink" title="停jar应用"></a>停jar应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">PID=$(ps -ef | grep xxx.jar | grep -v grep | awk &apos;&#123; print $2 &#125;&apos;)</span><br><span class="line">if [ -z &quot;$&#123;PID&#125;&quot; ]</span><br><span class="line">then</span><br><span class="line">echo Application is already stopped</span><br><span class="line">else</span><br><span class="line">echo kill $&#123;PID&#125;</span><br><span class="line">kill $&#123;PID&#125;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="启动jar应用-springboot"><a href="#启动jar应用-springboot" class="headerlink" title="启动jar应用(springboot)"></a>启动jar应用(springboot)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># app config</span><br><span class="line">SERVER_PORT=&quot;-Dserver.port=8080&quot;</span><br><span class="line"></span><br><span class="line"># databases config</span><br><span class="line">CK_IP=&quot;localhost&quot;</span><br><span class="line">CK_PORT=&quot;8123&quot;</span><br><span class="line">CK_USERNAME=&quot;default&quot;</span><br><span class="line">CK_PASSWORD=&quot;password&quot;</span><br><span class="line">DB_SERVER_URL=&quot;-Dclickhouse.jdbc.url=jdbc:clickhouse://$&#123;CK_IP&#125;:$&#123;CK_PORT&#125;/default -Dclickhouse.username=$&#123;CK_USERNAME&#125; -Dclickhouse.password=$&#123;CK_PASSWORD&#125;&quot;</span><br><span class="line"></span><br><span class="line"># info、debug、error、warn、trane</span><br><span class="line">LOG_LEVEL=&quot;-Dlogging.level.org.springframework.web=debug&quot;</span><br><span class="line">LOG_FILE=&quot;-Dlogging.file=./my.log&quot;</span><br><span class="line"></span><br><span class="line"># jar name</span><br><span class="line">JAR_FILE=&quot;xxx.jar&quot;</span><br><span class="line"></span><br><span class="line"># start</span><br><span class="line">java $&#123;SERVER_PORT&#125; $&#123;LOG_LEVEL&#125;  $&#123;DB_SERVER_URL&#125; $&#123;LOG_FILE&#125; -jar $&#123;JAR_FILE&#125; &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>标题</title>
      <link href="/1970/01/01/%E6%A8%A1%E6%9D%BF/"/>
      <url>/1970/01/01/%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>概要</p><a id="more"></a><p>正文</p><p>图片引入<br><img src="../../../../images/logo.jpg" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> 分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tag1 </tag>
            
            <tag> tag2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
